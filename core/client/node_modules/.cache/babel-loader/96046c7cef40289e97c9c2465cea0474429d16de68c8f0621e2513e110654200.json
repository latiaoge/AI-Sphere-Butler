{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\WallpaperManager.jsx\",\n  _s = $RefreshSig$();\n// components/WallpaperManager.jsx\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const menuWallpapers = {\n  home: '/core/client/ai-butler/image/bg-home.jpeg',\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg'\n};\nconst WallpaperManager = ({\n  selectedMenu,\n  showGlassTransition\n}) => {\n  _s();\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers.home); // 默认使用home壁纸\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // 获取目标壁纸路径，如果不存在则使用home壁纸\n    const targetWallpaper = menuWallpapers[selectedMenu] || menuWallpapers.home;\n    setIsLoading(true);\n    setError(null);\n\n    // 预加载图片并验证路径有效性\n    const img = new Image();\n    img.onload = () => {\n      console.log('壁纸加载成功:', targetWallpaper);\n      setCurrentWallpaper(targetWallpaper);\n      setIsLoading(false);\n    };\n    img.onerror = err => {\n      console.error('壁纸加载失败:', targetWallpaper, err);\n      console.log('使用默认壁纸:', menuWallpapers.home);\n\n      // 如果目标壁纸加载失败，尝试使用home壁纸\n      const homeImg = new Image();\n      homeImg.onload = () => {\n        setCurrentWallpaper(menuWallpapers.home);\n        setIsLoading(false);\n      };\n      homeImg.onerror = () => {\n        setError('默认壁纸也无法加载，请检查路径');\n        setIsLoading(false);\n      };\n      homeImg.src = menuWallpapers.home;\n    };\n    img.src = targetWallpaper;\n  }, [selectedMenu]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-wallpaper\",\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: -1,\n      backgroundImage: `url(${currentWallpaper})`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      opacity: isLoading || error ? 0 : 1,\n      transition: 'opacity 0.5s ease-in-out'\n    },\n    \"aria-hidden\": \"true\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(WallpaperManager, \"eCd7EqLS5I0HeUZZk5bZF0o2kws=\");\n_c = WallpaperManager;\nexport default WallpaperManager;\nvar _c;\n$RefreshReg$(_c, \"WallpaperManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","menuWallpapers","home","butler","car","homeassistant","ops","settings","WallpaperManager","selectedMenu","showGlassTransition","_s","currentWallpaper","setCurrentWallpaper","isLoading","setIsLoading","error","setError","targetWallpaper","img","Image","onload","console","log","onerror","err","homeImg","src","className","style","position","top","left","width","height","zIndex","backgroundImage","backgroundSize","backgroundPosition","opacity","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/WallpaperManager.jsx"],"sourcesContent":["// components/WallpaperManager.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport const menuWallpapers = {\r\n  home: '/core/client/ai-butler/image/bg-home.jpeg',\r\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\r\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\r\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\r\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\r\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg',\r\n};\r\n\r\nconst WallpaperManager = ({ selectedMenu, showGlassTransition }) => {\r\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers.home); // 默认使用home壁纸\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 获取目标壁纸路径，如果不存在则使用home壁纸\r\n    const targetWallpaper = menuWallpapers[selectedMenu] || menuWallpapers.home;\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    // 预加载图片并验证路径有效性\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      console.log('壁纸加载成功:', targetWallpaper);\r\n      setCurrentWallpaper(targetWallpaper);\r\n      setIsLoading(false);\r\n    };\r\n    img.onerror = (err) => {\r\n      console.error('壁纸加载失败:', targetWallpaper, err);\r\n      console.log('使用默认壁纸:', menuWallpapers.home);\r\n      \r\n      // 如果目标壁纸加载失败，尝试使用home壁纸\r\n      const homeImg = new Image();\r\n      homeImg.onload = () => {\r\n        setCurrentWallpaper(menuWallpapers.home);\r\n        setIsLoading(false);\r\n      };\r\n      homeImg.onerror = () => {\r\n        setError('默认壁纸也无法加载，请检查路径');\r\n        setIsLoading(false);\r\n      };\r\n      homeImg.src = menuWallpapers.home;\r\n    };\r\n    img.src = targetWallpaper;\r\n  }, [selectedMenu]);\r\n\r\n  return (\r\n    <div \r\n      className=\"app-wallpaper\"\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: -1,\r\n        backgroundImage: `url(${currentWallpaper})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        opacity: isLoading || error ? 0 : 1,\r\n        transition: 'opacity 0.5s ease-in-out'\r\n      }}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default WallpaperManager;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,cAAc,GAAG;EAC5BC,IAAI,EAAE,2CAA2C;EACjDC,MAAM,EAAE,6CAA6C;EACrDC,GAAG,EAAE,0CAA0C;EAC/CC,aAAa,EAAE,oDAAoD;EACnEC,GAAG,EAAE,0CAA0C;EAC/CC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAACI,cAAc,CAACC,IAAI,CAAC,CAAC,CAAC;EAC/E,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,eAAe,GAAGjB,cAAc,CAACQ,YAAY,CAAC,IAAIR,cAAc,CAACC,IAAI;IAC3Ea,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;;IAEd;IACA,MAAME,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,MAAM,GAAG,MAAM;MACjBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEL,eAAe,CAAC;MACvCL,mBAAmB,CAACK,eAAe,CAAC;MACpCH,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IACDI,GAAG,CAACK,OAAO,GAAIC,GAAG,IAAK;MACrBH,OAAO,CAACN,KAAK,CAAC,SAAS,EAAEE,eAAe,EAAEO,GAAG,CAAC;MAC9CH,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEtB,cAAc,CAACC,IAAI,CAAC;;MAE3C;MACA,MAAMwB,OAAO,GAAG,IAAIN,KAAK,CAAC,CAAC;MAC3BM,OAAO,CAACL,MAAM,GAAG,MAAM;QACrBR,mBAAmB,CAACZ,cAAc,CAACC,IAAI,CAAC;QACxCa,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC;MACDW,OAAO,CAACF,OAAO,GAAG,MAAM;QACtBP,QAAQ,CAAC,iBAAiB,CAAC;QAC3BF,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC;MACDW,OAAO,CAACC,GAAG,GAAG1B,cAAc,CAACC,IAAI;IACnC,CAAC;IACDiB,GAAG,CAACQ,GAAG,GAAGT,eAAe;EAC3B,CAAC,EAAE,CAACT,YAAY,CAAC,CAAC;EAElB,oBACET,OAAA;IACE4B,SAAS,EAAC,eAAe;IACzBC,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,MAAM,EAAE,CAAC,CAAC;MACVC,eAAe,EAAE,OAAOxB,gBAAgB,GAAG;MAC3CyB,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE,QAAQ;MAC5BC,OAAO,EAAEzB,SAAS,IAAIE,KAAK,GAAG,CAAC,GAAG,CAAC;MACnCwB,UAAU,EAAE;IACd,CAAE;IACF,eAAY;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEN,CAAC;AAACjC,EAAA,CAxDIH,gBAAgB;AAAAqC,EAAA,GAAhBrC,gBAAgB;AA0DtB,eAAeA,gBAAgB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}