{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\WallpaperManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const menuWallpapers = {\n  home: '/core/client/ai-butler/image/bg-home.jpeg',\n  // 备用图片\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg'\n};\n\n// 默认视频路径\nconst defaultHomeVideoSrc = '/core/client/ai-butler/video/bg-home.mp4';\nconst WallpaperManager = ({\n  selectedMenu,\n  wallpaperSettings\n}) => {\n  _s();\n  // 读取当前菜单对应的设置，fallback到默认配置\n  const cfg = (wallpaperSettings === null || wallpaperSettings === void 0 ? void 0 : wallpaperSettings[selectedMenu]) || {\n    type: 'image',\n    value: ''\n  };\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers.home);\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n  const [isVideoError, setIsVideoError] = useState(false);\n  const [isImageLoading, setIsImageLoading] = useState(true);\n  const [imageLoadError, setImageLoadError] = useState(false);\n  const [cameraStream, setCameraStream] = useState(null);\n  const videoRef = useRef(null);\n\n  // 释放摄像头流\n  const releaseCameraStream = () => {\n    if (cameraStream) {\n      try {\n        cameraStream.getTracks().forEach(track => track.stop());\n      } catch {}\n      setCameraStream(null);\n    }\n  };\n  useEffect(() => {\n    releaseCameraStream();\n    setIsVideoLoaded(false);\n    setIsVideoError(false);\n    setImageLoadError(false);\n    setIsImageLoading(true);\n    if (cfg.type === 'camera') {\n      // 启用摄像头流\n      if (navigator.mediaDevices && typeof navigator.mediaDevices.getUserMedia === 'function') {\n        navigator.mediaDevices.getUserMedia({\n          video: {\n            deviceId: cfg.value || undefined\n          },\n          audio: false\n        }).then(stream => {\n          setCameraStream(stream);\n          setIsVideoLoaded(true);\n          setIsVideoError(false);\n          setIsImageLoading(false);\n        }).catch(err => {\n          console.warn('获取摄像头失败，回退图片背景', err);\n          setCameraStream(null);\n          setIsVideoError(true);\n          setIsVideoLoaded(false);\n          setIsImageLoading(false);\n          setCurrentWallpaper(menuWallpapers.home);\n        });\n      } else {\n        // 不支持摄像头时，回退图片背景\n        setCameraStream(null);\n        setIsVideoError(true);\n        setIsVideoLoaded(false);\n        setIsImageLoading(false);\n        setCurrentWallpaper(menuWallpapers.home);\n      }\n      return;\n    } else if (cfg.type === 'video' && cfg.value) {\n      // 视频背景\n      setCameraStream(null);\n      setCurrentWallpaper(menuWallpapers.home);\n      setIsImageLoading(false);\n      setIsVideoError(false);\n      setIsVideoLoaded(false);\n      // 视频加载状态将在 video onCanPlay/onError 中控制\n      return;\n    } else {\n      // 图片背景\n      setCameraStream(null);\n      const imgSrc = cfg.value || menuWallpapers[selectedMenu] || menuWallpapers.home;\n      const img = new Image();\n      img.onload = () => {\n        setCurrentWallpaper(imgSrc);\n        setIsImageLoading(false);\n        setImageLoadError(false);\n      };\n      img.onerror = () => {\n        console.error('壁纸加载失败:', imgSrc);\n        // 失败时回退默认图片\n        const defaultImg = menuWallpapers.home;\n        const defaultImgLoader = new Image();\n        defaultImgLoader.onload = () => {\n          setCurrentWallpaper(defaultImg);\n          setIsImageLoading(false);\n          setImageLoadError(false);\n        };\n        defaultImgLoader.onerror = () => {\n          setImageLoadError(true);\n          setIsImageLoading(false);\n        };\n        defaultImgLoader.src = defaultImg;\n      };\n      img.src = imgSrc;\n      setIsVideoError(false);\n      setIsVideoLoaded(false);\n      setIsImageLoading(true);\n    }\n  }, [selectedMenu, cfg.type, cfg.value]);\n  useEffect(() => {\n    if (cameraStream && videoRef.current) {\n      videoRef.current.srcObject = cameraStream;\n      videoRef.current.play().catch(() => {});\n    }\n  }, [cameraStream]);\n  const baseStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    zIndex: -1,\n    pointerEvents: 'none',\n    transition: 'opacity 0.5s ease-in-out',\n    backgroundColor: '#000'\n  };\n  const cameraVideoStyle = {\n    ...baseStyle,\n    objectFit: 'cover',\n    opacity: cameraStream && isVideoLoaded && !isVideoError ? 1 : 0\n  };\n  const videoStyle = {\n    ...baseStyle,\n    objectFit: 'cover',\n    opacity: cfg.type === 'video' && !cameraStream && isVideoLoaded && !isVideoError ? 1 : 0\n  };\n  const imageStyle = {\n    ...baseStyle,\n    backgroundImage: `url(${currentWallpaper})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    opacity: cfg.type !== 'camera' && (cfg.type !== 'video' || isVideoError) && !isImageLoading && !imageLoadError ? 1 : 0\n  };\n  const handleVideoCanPlay = () => {\n    setIsVideoLoaded(true);\n    setIsVideoError(false);\n    setIsImageLoading(false);\n  };\n  const handleVideoError = () => {\n    console.error('视频加载失败，回退图片背景');\n    setIsVideoError(true);\n    setIsVideoLoaded(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cfg.type === 'camera' && cameraStream ? /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      style: cameraVideoStyle,\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [cfg.type === 'video' && cfg.value && /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        playsInline: true,\n        preload: \"auto\",\n        style: videoStyle,\n        src: cfg.value,\n        \"aria-hidden\": \"true\",\n        onCanPlay: handleVideoCanPlay,\n        onError: handleVideoError\n      }, cfg.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), (cfg.type === 'image' || isVideoError || !isVideoLoaded && cfg.type === 'video') && !isImageLoading && !imageLoadError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-wallpaper\",\n        style: imageStyle,\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), imageLoadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-wallpaper\",\n      style: {\n        ...baseStyle,\n        backgroundColor: '#222',\n        opacity: 1\n      },\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(WallpaperManager, \"s5MlO8TBETv+i5drP4g6qGMraIE=\");\n_c = WallpaperManager;\nexport default WallpaperManager;\nvar _c;\n$RefreshReg$(_c, \"WallpaperManager\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","menuWallpapers","home","butler","car","homeassistant","ops","settings","defaultHomeVideoSrc","WallpaperManager","selectedMenu","wallpaperSettings","_s","cfg","type","value","currentWallpaper","setCurrentWallpaper","isVideoLoaded","setIsVideoLoaded","isVideoError","setIsVideoError","isImageLoading","setIsImageLoading","imageLoadError","setImageLoadError","cameraStream","setCameraStream","videoRef","releaseCameraStream","getTracks","forEach","track","stop","navigator","mediaDevices","getUserMedia","video","deviceId","undefined","audio","then","stream","catch","err","console","warn","imgSrc","img","Image","onload","onerror","error","defaultImg","defaultImgLoader","src","current","srcObject","play","baseStyle","position","top","left","width","height","zIndex","pointerEvents","transition","backgroundColor","cameraVideoStyle","objectFit","opacity","videoStyle","imageStyle","backgroundImage","backgroundSize","backgroundPosition","handleVideoCanPlay","handleVideoError","children","ref","autoPlay","muted","playsInline","style","fileName","_jsxFileName","lineNumber","columnNumber","loop","preload","onCanPlay","onError","className","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/WallpaperManager.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport const menuWallpapers = {\r\n  home: '/core/client/ai-butler/image/bg-home.jpeg', // 备用图片\r\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\r\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\r\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\r\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\r\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg',\r\n};\r\n\r\n// 默认视频路径\r\nconst defaultHomeVideoSrc = '/core/client/ai-butler/video/bg-home.mp4';\r\n\r\nconst WallpaperManager = ({ selectedMenu, wallpaperSettings }) => {\r\n  // 读取当前菜单对应的设置，fallback到默认配置\r\n  const cfg = wallpaperSettings?.[selectedMenu] || { type: 'image', value: '' };\r\n\r\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers.home);\r\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\r\n  const [isVideoError, setIsVideoError] = useState(false);\r\n  const [isImageLoading, setIsImageLoading] = useState(true);\r\n  const [imageLoadError, setImageLoadError] = useState(false);\r\n\r\n  const [cameraStream, setCameraStream] = useState(null);\r\n  const videoRef = useRef(null);\r\n\r\n  // 释放摄像头流\r\n  const releaseCameraStream = () => {\r\n    if (cameraStream) {\r\n      try {\r\n        cameraStream.getTracks().forEach(track => track.stop());\r\n      } catch {}\r\n      setCameraStream(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    releaseCameraStream();\r\n    setIsVideoLoaded(false);\r\n    setIsVideoError(false);\r\n    setImageLoadError(false);\r\n    setIsImageLoading(true);\r\n\r\n    if (cfg.type === 'camera') {\r\n      // 启用摄像头流\r\n      if (navigator.mediaDevices && typeof navigator.mediaDevices.getUserMedia === 'function') {\r\n        navigator.mediaDevices.getUserMedia({ video: { deviceId: cfg.value || undefined }, audio: false })\r\n          .then(stream => {\r\n            setCameraStream(stream);\r\n            setIsVideoLoaded(true);\r\n            setIsVideoError(false);\r\n            setIsImageLoading(false);\r\n          })\r\n          .catch(err => {\r\n            console.warn('获取摄像头失败，回退图片背景', err);\r\n            setCameraStream(null);\r\n            setIsVideoError(true);\r\n            setIsVideoLoaded(false);\r\n            setIsImageLoading(false);\r\n            setCurrentWallpaper(menuWallpapers.home);\r\n          });\r\n      } else {\r\n        // 不支持摄像头时，回退图片背景\r\n        setCameraStream(null);\r\n        setIsVideoError(true);\r\n        setIsVideoLoaded(false);\r\n        setIsImageLoading(false);\r\n        setCurrentWallpaper(menuWallpapers.home);\r\n      }\r\n      return;\r\n    } else if (cfg.type === 'video' && cfg.value) {\r\n      // 视频背景\r\n      setCameraStream(null);\r\n      setCurrentWallpaper(menuWallpapers.home);\r\n      setIsImageLoading(false);\r\n      setIsVideoError(false);\r\n      setIsVideoLoaded(false);\r\n      // 视频加载状态将在 video onCanPlay/onError 中控制\r\n      return;\r\n    } else {\r\n      // 图片背景\r\n      setCameraStream(null);\r\n      const imgSrc = cfg.value || menuWallpapers[selectedMenu] || menuWallpapers.home;\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setCurrentWallpaper(imgSrc);\r\n        setIsImageLoading(false);\r\n        setImageLoadError(false);\r\n      };\r\n      img.onerror = () => {\r\n        console.error('壁纸加载失败:', imgSrc);\r\n        // 失败时回退默认图片\r\n        const defaultImg = menuWallpapers.home;\r\n        const defaultImgLoader = new Image();\r\n        defaultImgLoader.onload = () => {\r\n          setCurrentWallpaper(defaultImg);\r\n          setIsImageLoading(false);\r\n          setImageLoadError(false);\r\n        };\r\n        defaultImgLoader.onerror = () => {\r\n          setImageLoadError(true);\r\n          setIsImageLoading(false);\r\n        };\r\n        defaultImgLoader.src = defaultImg;\r\n      };\r\n      img.src = imgSrc;\r\n      setIsVideoError(false);\r\n      setIsVideoLoaded(false);\r\n      setIsImageLoading(true);\r\n    }\r\n  }, [selectedMenu, cfg.type, cfg.value]);\r\n\r\n  useEffect(() => {\r\n    if (cameraStream && videoRef.current) {\r\n      videoRef.current.srcObject = cameraStream;\r\n      videoRef.current.play().catch(() => {});\r\n    }\r\n  }, [cameraStream]);\r\n\r\n  const baseStyle = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: -1,\r\n    pointerEvents: 'none',\r\n    transition: 'opacity 0.5s ease-in-out',\r\n    backgroundColor: '#000',\r\n  };\r\n\r\n  const cameraVideoStyle = {\r\n    ...baseStyle,\r\n    objectFit: 'cover',\r\n    opacity: cameraStream && isVideoLoaded && !isVideoError ? 1 : 0,\r\n  };\r\n\r\n  const videoStyle = {\r\n    ...baseStyle,\r\n    objectFit: 'cover',\r\n    opacity: cfg.type === 'video' && !cameraStream && isVideoLoaded && !isVideoError ? 1 : 0,\r\n  };\r\n\r\n  const imageStyle = {\r\n    ...baseStyle,\r\n    backgroundImage: `url(${currentWallpaper})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    opacity:\r\n      (cfg.type !== 'camera' && (cfg.type !== 'video' || isVideoError) && !isImageLoading && !imageLoadError) ? 1 : 0,\r\n  };\r\n\r\n  const handleVideoCanPlay = () => {\r\n    setIsVideoLoaded(true);\r\n    setIsVideoError(false);\r\n    setIsImageLoading(false);\r\n  };\r\n\r\n  const handleVideoError = () => {\r\n    console.error('视频加载失败，回退图片背景');\r\n    setIsVideoError(true);\r\n    setIsVideoLoaded(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {cfg.type === 'camera' && cameraStream ? (\r\n        <video\r\n          ref={videoRef}\r\n          autoPlay\r\n          muted\r\n          playsInline\r\n          style={cameraVideoStyle}\r\n          aria-hidden=\"true\"\r\n        />\r\n      ) : (\r\n        <>\r\n          {cfg.type === 'video' && cfg.value && (\r\n            <video\r\n              key={cfg.value}\r\n              autoPlay\r\n              loop\r\n              muted\r\n              playsInline\r\n              preload=\"auto\"\r\n              style={videoStyle}\r\n              src={cfg.value}\r\n              aria-hidden=\"true\"\r\n              onCanPlay={handleVideoCanPlay}\r\n              onError={handleVideoError}\r\n            />\r\n          )}\r\n          {(cfg.type === 'image' || isVideoError || (!isVideoLoaded && cfg.type === 'video')) && !isImageLoading && !imageLoadError && (\r\n            <div\r\n              className=\"app-wallpaper\"\r\n              style={imageStyle}\r\n              aria-hidden=\"true\"\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      {imageLoadError && (\r\n        <div\r\n          className=\"app-wallpaper\"\r\n          style={{\r\n            ...baseStyle,\r\n            backgroundColor: '#222',\r\n            opacity: 1,\r\n          }}\r\n          aria-hidden=\"true\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WallpaperManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}