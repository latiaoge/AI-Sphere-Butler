{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\OldWebRTC.jsx\",\n  _s = $RefreshSig$();\n// D:\\XM\\AI-Sphere-Butler\\core\\client\\src\\components\\OldWebRTC.jsx\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OldWebRTC({\n  renderVideo = true,\n  keepConnection = false,\n  onStart,\n  onStop\n}) {\n  _s();\n  var _presetColors$find;\n  const videoRef = useRef(null);\n  const audioRef = useRef(null);\n  const pcRef = useRef(null);\n  const hiddenVideoRef = useRef(null); // 用于标准画中画的隐藏视频元素\n  const pipVideoRef = useRef(null); // 用于自定义画中画的视频元素\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const animationFrameIdRef = useRef(null);\n  const reconnectTimerRef = useRef(null);\n  const pipStreamRef = useRef(null); // 用于画中画的 MediaStream\n  const pipExitReasonRef = useRef(''); // 画中画退出原因\n  const isPiPModeChangingRef = useRef(false); // 防止画中画按钮重复点击\n  const isStartedRef = useRef(false); // 使用 ref 跟踪是否已启动\n  const isUserGestureRef = useRef(false); // 用户手势标志\n  const [isStarted, setIsStarted] = useState(false); // 启动状态\n  const [isPiPMode, setIsPiPMode] = useState(false); // 画中画模式状态\n  const [pipSupported, setPipSupported] = useState(false); // 画中画支持状态\n  const [enablePip, setEnablePip] = useState(false); // 启用画中画开关\n  const [message, setMessage] = useState(''); // 聊天消息\n  const [file, setFile] = useState(null); // 上传文件\n  const [uploadStatus, setUploadStatus] = useState(''); // 上传状态\n  const [isSending, setIsSending] = useState(false); // 发送状态\n  const [connectionAttempts, setConnectionAttempts] = useState(0); // 连接尝试次数\n  const maxConnectionAttempts = 3; // 最大连接尝试次数\n  const [errorMessage, setErrorMessage] = useState(''); // 错误消息\n  const [chatPos, setChatPos] = useState(() => {\n    try {\n      const saved = localStorage.getItem('chat-position');\n      if (saved) {\n        const pos = JSON.parse(saved);\n        if (typeof pos.left === 'number' && typeof pos.top === 'number') {\n          return pos;\n        }\n      }\n    } catch {}\n    return {\n      left: 20,\n      top: 20\n    };\n  }); // 聊天框位置\n  const [showChat, setShowChat] = useState(true); // 是否显示聊天框\n  const [useStun, setUseStun] = useState(true); // 是否使用STUN服务器\n  const [chromaKeyColor, setChromaKeyColor] = useState('green'); // 抠图颜色\n  const [isChromaKeyEnabled, setIsChromaKeyEnabled] = useState(false); // 是否启用抠图\n  const [presetColors] = useState([{\n    value: 'green',\n    label: '绿色'\n  }, {\n    value: 'blue',\n    label: '蓝色'\n  }, {\n    value: 'red',\n    label: '红色'\n  }]);\n  const containerRef = useRef(null); // 容器引用\n  const draggingRef = useRef(false); // 拖拽状态标志\n  const dragOffsetRef = useRef({\n    x: 0,\n    y: 0\n  }); // 拖拽偏移\n  const [usePresetColorOpen, setUsePresetColorOpen] = useState(false); // 预设颜色菜单展开状态\n  const [startBtnHover, setStartBtnHover] = useState(false); // 启动按钮悬停状态\n  const [stopBtnHover, setStopBtnHover] = useState(false); // 停止按钮悬停状态\n  const [pipBtnHover, setPipBtnHover] = useState(false); // 画中画按钮悬停状态\n  const [chatBtnHover, setChatBtnHover] = useState(false); // 聊天按钮悬停状态\n  const [zoomInHover, setZoomInHover] = useState(false); // 放大按钮悬停状态\n  const [zoomOutHover, setZoomOutHover] = useState(false); // 缩小按钮悬停状态\n  const [resetHover, setResetHover] = useState(false); // 重置按钮悬停状态\n  const SIGNALING_URL = '/api/webrtc_offer'; // 固定信令地址\n\n  // *** 修改开始：定义一个函数来获取动态配置的 URLs ***\n  const getDynamicUrls = () => {\n    let serverUrls = {};\n    try {\n      const savedUrls = localStorage.getItem('serverUrls');\n      if (savedUrls) {\n        serverUrls = JSON.parse(savedUrls);\n      }\n    } catch (e) {\n      console.error(\"OldWebRTC: Failed to parse serverUrls from localStorage\", e);\n    }\n    // 优先使用配置项，如果没有则 fallback 到环境变量或默认值\n    // 注意：这里假设 ServerUrlConfig.jsx 中配置项的键名是 uploadFileUrl, qwenerUrl, interruptUrl\n    // 如果键名不同，请相应调整\n    const baseUrl = serverUrls.uploadFileUrl || 'http://192.168.168.77:6010';\n    const qwenerUrl = serverUrls.qwenerUrl || 'https://192.168.168.77:6010/qwener';\n    const interruptUrl = serverUrls.interruptUrl || 'http://192.168.168.77:6010/api/interrupt_speaking';\n    return {\n      uploadPrintFileUrl: `${baseUrl}/api/upload_print_file`,\n      qwenerUrl: qwenerUrl,\n      interruptUrl: interruptUrl\n    };\n  };\n  // *** 修改结束 ***\n\n  // 磨砂玻璃按钮基础样式\n  const frostedGlassBtnStyle = {\n    padding: '6px 12px',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    color: 'white',\n    border: '1px solid rgba(255, 255, 255, 0.3)',\n    borderRadius: 4,\n    cursor: 'pointer',\n    fontWeight: 'bold',\n    fontSize: 14,\n    transition: 'all 0.3s',\n    backdropFilter: 'blur(10px)',\n    WebkitBackdropFilter: 'blur(10px)',\n    boxShadow: '0 4px 10px rgba(255, 255, 255, 0.15)',\n    outline: 'none',\n    userSelect: 'none'\n  };\n\n  // 禁用按钮样式\n  const disabledBtnStyle = {\n    ...frostedGlassBtnStyle,\n    backgroundColor: 'rgba(100, 100, 100, 0.3)',\n    borderColor: 'rgba(100, 100, 100, 0.5)',\n    color: 'rgba(200, 200, 200, 0.7)',\n    cursor: 'not-allowed',\n    boxShadow: 'none'\n  };\n\n  // 按钮悬停效果样式生成函数\n  const getBtnHoverStyle = (isPositive = true) => ({\n    backgroundColor: isPositive ? 'rgba(0, 229, 255, 0.3)' : 'rgba(255, 0, 0, 0.3)',\n    borderColor: isPositive ? '#00e5ff' : '#ff0000',\n    boxShadow: isPositive ? '0 6px 20px rgba(0, 229, 255, 0.5)' : '0 6px 20px rgba(255, 0, 0, 0.5)',\n    transform: 'translateY(-2px)'\n  });\n\n  // 初始化画中画支持检测\n  useEffect(() => {\n    const checkPipSupport = async () => {\n      if ('pictureInPictureEnabled' in document) {\n        setPipSupported(true);\n      } else {\n        setPipSupported(false);\n      }\n    };\n    checkPipSupport();\n  }, []);\n\n  // 启动WebRTC连接\n  async function start() {\n    if (isStartedRef.current) return;\n    const config = {\n      sdpSemantics: 'unified-plan'\n    };\n    if (useStun) {\n      config.iceServers = [{\n        urls: 'stun:stun.l.google.com:19302'\n      }];\n    }\n    const pc = new RTCPeerConnection(config);\n    pcRef.current = pc;\n    isStartedRef.current = true;\n    setIsStarted(true);\n    setConnectionAttempts(0);\n    pc.addEventListener('connectionstatechange', () => {\n      console.log('WebRTC连接状态变化:', pc.connectionState);\n      if (pc.connectionState === 'failed' || pc.connectionState === 'disconnected') {\n        if (keepConnection) {\n          if (isPiPMode) {\n            console.log('WebRTC连接断开，但处于画中画模式，尝试重新连接');\n            setErrorMessage('WebRTC连接断开，尝试重连');\n            if (!reconnectTimerRef.current) {\n              reconnectTimerRef.current = setTimeout(() => {\n                if (isStartedRef.current) {\n                  negotiate();\n                }\n              }, 2000);\n            }\n          } else {\n            setErrorMessage('WebRTC连接断开或失败，尝试重连');\n            if (!reconnectTimerRef.current) {\n              reconnectTimerRef.current = setTimeout(() => {\n                if (isStartedRef.current) {\n                  stop();\n                  start();\n                }\n              }, 2000);\n            }\n          }\n        } else {\n          setErrorMessage('WebRTC连接断开或失败');\n        }\n      } else if (pc.connectionState === 'connected') {\n        setErrorMessage('');\n        if (reconnectTimerRef.current) {\n          clearTimeout(reconnectTimerRef.current);\n          reconnectTimerRef.current = null;\n        }\n        if (typeof onStart === 'function') {\n          onStart();\n        }\n      }\n    });\n    pc.addEventListener('icecandidate', async e => {\n      if (e.candidate) {\n        console.log('发现本地ICE候选:', e.candidate);\n      }\n    });\n    pc.addEventListener('track', e => {\n      console.log('收到远程媒体轨道:', e.track.kind);\n      if (e.track.kind === 'video' && videoRef.current) {\n        videoRef.current.srcObject = e.streams[0];\n        videoRef.current.onloadedmetadata = () => {\n          console.log('视频元数据加载完成');\n          if (isChromaKeyEnabled) {\n            setupCanvas();\n          }\n        };\n        videoRef.current.onplay = () => {\n          console.log('视频开始播放');\n          if (isChromaKeyEnabled) {\n            startCanvasDrawing();\n          }\n          if (enablePip && pipVideoRef.current) {\n            setTimeout(() => setupPipStream(), 100);\n          }\n        };\n      } else if (e.track.kind === 'audio' && audioRef.current) {\n        audioRef.current.srcObject = e.streams[0];\n      }\n    });\n    try {\n      console.log('开始创建WebRTC连接...');\n      await negotiate();\n    } catch (e) {\n      setErrorMessage(`WebRTC连接失败: ${e.message}`);\n      if (connectionAttempts < maxConnectionAttempts) {\n        setConnectionAttempts(connectionAttempts + 1);\n        reconnectTimerRef.current = setTimeout(() => {\n          if (isStartedRef.current) {\n            stop();\n            start();\n          }\n        }, 2000);\n      } else {\n        alert('连接失败，请检查网络连接或刷新页面');\n      }\n    }\n  }\n\n  // WebRTC协商过程\n  async function negotiate() {\n    const pc = pcRef.current;\n    if (!pc) return;\n    try {\n      console.log('创建并发送WebRTC Offer...');\n      const offer = await pc.createOffer();\n      await pc.setLocalDescription(offer);\n\n      // 等待 ICE 收集完成\n      if (pc.iceGatheringState !== 'complete') {\n        console.log('等待ICE收集完成...');\n        await new Promise(resolve => {\n          const checkState = () => {\n            if (pc.iceGatheringState === 'complete') {\n              pc.removeEventListener('icegatheringstatechange', checkState);\n              resolve();\n            }\n          };\n          pc.addEventListener('icegatheringstatechange', checkState);\n        });\n      }\n      console.log('发送Offer到信令服务器:', SIGNALING_URL);\n      const response = await fetch(SIGNALING_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(pc.localDescription)\n      });\n      if (!response.ok) throw new Error(`服务器响应错误: ${response.status}`);\n      const answer = await response.json();\n      await pc.setRemoteDescription(answer);\n    } catch (e) {\n      setErrorMessage(`WebRTC连接失败: ${e.message}`);\n      if (connectionAttempts < maxConnectionAttempts) {\n        setConnectionAttempts(connectionAttempts + 1);\n        reconnectTimerRef.current = setTimeout(() => {\n          if (isStartedRef.current) {\n            negotiate();\n          }\n        }, 2000);\n      } else {\n        alert('连接失败，请检查网络连接或刷新页面');\n      }\n    }\n  }\n\n  // 放大视频\n  function zoomIn() {\n    const video = videoRef.current;\n    if (video) {\n      video.style.width = '120%';\n      video.style.height = '120%';\n    }\n  }\n\n  // 缩小视频\n  function zoomOut() {\n    const video = videoRef.current;\n    if (video) {\n      video.style.width = '100%';\n      video.style.height = '100%';\n    }\n  }\n\n  // 重置视频大小和位置\n  function resetZoom() {\n    const video = videoRef.current;\n    if (video) {\n      video.style.width = '100%';\n      video.style.height = '100%';\n      video.style.transform = 'none';\n    }\n  }\n\n  // 切换画中画模式\n  async function togglePiP() {\n    if (isPiPModeChangingRef.current) return; // 防止重复点击\n    isPiPModeChangingRef.current = true;\n    try {\n      if (isPiPMode) {\n        // 退出画中画\n        if (pipSupported && document.pictureInPictureElement === hiddenVideoRef.current) {\n          await document.exitPictureInPicture();\n        }\n        setIsPiPMode(false);\n        console.log('退出画中画模式');\n      } else {\n        // 进入画中画\n        if (pipSupported && hiddenVideoRef.current && hiddenVideoRef.current.srcObject) {\n          await hiddenVideoRef.current.requestPictureInPicture();\n          setIsPiPMode(true);\n          console.log('进入标准画中画模式');\n        } else if (pipVideoRef.current && pipVideoRef.current.srcObject) {\n          setIsPiPMode(true);\n          console.log('进入自定义画中画模式');\n        }\n      }\n    } catch (error) {\n      console.error('切换画中画模式失败:', error);\n      setErrorMessage(`画中画切换失败: ${error.message}`);\n    } finally {\n      isPiPModeChangingRef.current = false;\n    }\n  }\n\n  // 设置画中画流\n  async function setupPipStream() {\n    const video = videoRef.current;\n    if (!video || !video.srcObject) return;\n    try {\n      console.log('开始设置画中画流...');\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        throw new Error('无法获取Canvas上下文');\n      }\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // 创建新的 MediaStream\n      const pipStream = new MediaStream();\n      pipStreamRef.current = pipStream;\n\n      // 创建 Canvas Capture Stream Track\n      const canvasStream = canvas.captureStream(30); // 30 FPS\n      const videoTrack = canvasStream.getVideoTracks()[0];\n      if (videoTrack) {\n        pipStream.addTrack(videoTrack);\n      }\n\n      // 设置隐藏视频元素用于标准画中画\n      if (hiddenVideoRef.current) {\n        hiddenVideoRef.current.srcObject = pipStream;\n        console.log('隐藏视频元素源已设置');\n      }\n\n      // 设置自定义画中画视频元素\n      if (pipVideoRef.current) {\n        pipVideoRef.current.srcObject = pipStream;\n        console.log('自定义画中画视频元素源已设置');\n      }\n\n      // 开始绘制到Canvas\n      const draw = () => {\n        if (video.readyState >= 2 && ctx) {\n          // HAVE_CURRENT_DATA\n          ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n          if (isChromaKeyEnabled) {\n            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            const data = imageData.data;\n            let targetR, targetG, targetB;\n            switch (chromaKeyColor) {\n              case 'green':\n                targetR = 0;\n                targetG = 255;\n                targetB = 0;\n                break;\n              case 'blue':\n                targetR = 0;\n                targetG = 0;\n                targetB = 255;\n                break;\n              case 'red':\n                targetR = 255;\n                targetG = 0;\n                targetB = 0;\n                break;\n              default:\n                targetR = 0;\n                targetG = 255;\n                targetB = 0;\n            }\n            for (let i = 0; i < data.length; i += 4) {\n              const r = data[i];\n              const g = data[i + 1];\n              const b = data[i + 2];\n              const diff = Math.abs(r - targetR) + Math.abs(g - targetG) + Math.abs(b - targetB);\n              if (diff < 100) {\n                // 阈值可调\n                data[i + 3] = 0; // 设置 alpha 为 0 (透明)\n              }\n            }\n            ctx.putImageData(imageData, 0, 0);\n          }\n        }\n        animationFrameIdRef.current = requestAnimationFrame(draw);\n      };\n      draw();\n      console.log('画中画流设置完成');\n    } catch (e) {\n      console.error('设置画中画流失败:', e);\n      setErrorMessage(`画中画设置失败: ${e.message}`);\n    }\n  }\n\n  // 停止画中画流\n  function stopPipStream() {\n    if (animationFrameIdRef.current) {\n      cancelAnimationFrame(animationFrameIdRef.current);\n      animationFrameIdRef.current = null;\n    }\n    if (pipStreamRef.current) {\n      const tracks = pipStreamRef.current.getTracks();\n      tracks.forEach(track => track.stop());\n      pipStreamRef.current = null;\n    }\n    if (hiddenVideoRef.current) {\n      hiddenVideoRef.current.srcObject = null;\n    }\n    if (pipVideoRef.current) {\n      pipVideoRef.current.srcObject = null;\n    }\n    console.log('画中画流已停止');\n  }\n\n  // 通知后端停止（当前未实现）\n  async function notifyBackendStop() {\n    console.log('notifyBackendStop called but ignored due to no backend stop API');\n  }\n\n  // 停止WebRTC连接\n  function stop() {\n    isStartedRef.current = false;\n    setIsStarted(false);\n    isUserGestureRef.current = false;\n    if (reconnectTimerRef.current) {\n      clearTimeout(reconnectTimerRef.current);\n      reconnectTimerRef.current = null;\n    }\n    if (animationFrameIdRef.current) {\n      cancelAnimationFrame(animationFrameIdRef.current);\n      animationFrameIdRef.current = null;\n    }\n    if (pcRef.current) {\n      pcRef.current.close();\n      pcRef.current = null;\n    }\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n    if (audioRef.current) {\n      audioRef.current.srcObject = null;\n    }\n    stopPipStream();\n    if (typeof onStop === 'function') {\n      onStop();\n    }\n    console.log('WebRTC连接已停止');\n  }\n\n  // 组件卸载时停止连接\n  useEffect(() => {\n    return () => {\n      stop();\n      notifyBackendStop();\n    };\n  }, []);\n\n  // 处理用户手势以启动视频\n  useEffect(() => {\n    const handleUserGesture = () => {\n      if (!isUserGestureRef.current) {\n        isUserGestureRef.current = true;\n        console.log('检测到用户手势');\n        if (renderVideo && !isStartedRef.current) {\n          start();\n        }\n      }\n    };\n    document.addEventListener('click', handleUserGesture, {\n      once: true\n    });\n    document.addEventListener('touchstart', handleUserGesture, {\n      once: true\n    });\n    return () => {\n      document.removeEventListener('click', handleUserGesture);\n      document.removeEventListener('touchstart', handleUserGesture);\n    };\n  }, [renderVideo]);\n\n  // 启动连接（如果需要）\n  useEffect(() => {\n    if (renderVideo && isUserGestureRef.current && !isStartedRef.current) {\n      start();\n    }\n  }, [renderVideo]);\n\n  // 发送文本消息\n  const sendTextMessage = async () => {\n    if (!message.trim() || isSending) return;\n    setIsSending(true);\n    setErrorMessage('');\n\n    // *** 修改：动态获取 Qwener URL ***\n    const {\n      qwenerUrl\n    } = getDynamicUrls();\n    try {\n      const response = await fetch(qwenerUrl, {\n        // 使用动态 URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          text: message.trim()\n        })\n      });\n      // 增加错误处理和日志\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('文本发送失败，响应内容:', errorText);\n        throw new Error(`状态码: ${response.status}, 内容: ${errorText}`);\n      }\n      const result = await response.json();\n      console.log('文本发送成功，响应:', result);\n      setMessage('');\n    } catch (error) {\n      console.error('文本发送失败:', error);\n      setErrorMessage(`文本发送失败: ${error.message}`);\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  // *** 修改：改进文件上传功能，使用动态 URL ***\n  const sendFile = async () => {\n    // --- 新增：动态获取上传 URL ---\n    const {\n      uploadPrintFileUrl\n    } = getDynamicUrls(); // 每次调用时获取最新 URL\n    // --- 新增结束 ---\n\n    if (!file) return;\n    try {\n      setUploadStatus('正在上传...');\n      const formData = new FormData();\n      formData.append('file', file);\n\n      // 打印调试信息\n      console.log('准备上传文件:', {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        url: uploadPrintFileUrl // 使用动态获取的 URL\n      });\n      const response = await fetch(uploadPrintFileUrl, {\n        // 使用动态获取的 URL\n        method: 'POST',\n        body: formData,\n        // 修复：不设置Content-Type，让浏览器自动处理multipart/form-data\n        headers: {\n          'Accept': 'application/json'\n        },\n        // 增加超时设置\n        timeout: 30000\n      });\n\n      // 读取响应文本（无论成功与否）\n      const responseText = await response.text();\n      console.log(`上传响应 (状态码: ${response.status}):`, responseText);\n\n      // 尝试解析JSON\n      let result;\n      try {\n        result = JSON.parse(responseText);\n      } catch (e) {\n        console.error('解析响应JSON失败:', e, '响应文本:', responseText);\n        throw new Error(`服务器返回无效JSON: ${responseText.substring(0, 100)}`);\n      }\n      if (!response.ok) {\n        throw new Error(result.error || `上传失败: ${response.status}`);\n      }\n      setUploadStatus(result.message || '文件上传成功');\n      setFile(null);\n      // 清空文件输入\n      const fileInput = document.getElementById('file-upload');\n      if (fileInput) fileInput.value = '';\n      console.log('文件上传成功:', result);\n    } catch (error) {\n      console.error('文件发送失败:', error);\n      setUploadStatus(`上传失败: ${error.message}`);\n    }\n  };\n\n  // 处理文件选择\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setUploadStatus(`已选择: ${selectedFile.name}`);\n    } else {\n      setFile(null);\n      setUploadStatus('');\n    }\n  };\n\n  // 设置画布用于抠图\n  function setupCanvas() {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (!video || !canvas) return;\n    const updateCanvasSize = () => {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      console.log('画布尺寸更新为:', canvas.width, 'x', canvas.height);\n    };\n    if (video.readyState >= 2) {\n      // HAVE_CURRENT_DATA\n      updateCanvasSize();\n    } else {\n      video.addEventListener('loadeddata', updateCanvasSize, {\n        once: true\n      });\n    }\n  }\n  ;\n\n  // 开始画布绘制（抠图）\n  function startCanvasDrawing() {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (!video || !canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctxRef.current = ctx;\n    const draw = () => {\n      if (isChromaKeyEnabled && video.readyState >= 2) {\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        let targetR, targetG, targetB;\n        switch (chromaKeyColor) {\n          case 'green':\n            targetR = 0;\n            targetG = 255;\n            targetB = 0;\n            break;\n          case 'blue':\n            targetR = 0;\n            targetG = 0;\n            targetB = 255;\n            break;\n          case 'red':\n            targetR = 255;\n            targetG = 0;\n            targetB = 0;\n            break;\n          default:\n            targetR = 0;\n            targetG = 255;\n            targetB = 0;\n        }\n        for (let i = 0; i < data.length; i += 4) {\n          const r = data[i];\n          const g = data[i + 1];\n          const b = data[i + 2];\n          const diff = Math.abs(r - targetR) + Math.abs(g - targetG) + Math.abs(b - targetB);\n          if (diff < 100) {\n            // 阈值可调\n            data[i + 3] = 0; // 设置 alpha 为 0 (透明)\n          }\n        }\n        ctx.putImageData(imageData, 0, 0);\n      }\n      animationFrameIdRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n  }\n\n  // 切换聊天框显示\n  function toggleChat() {\n    setShowChat(v => !v);\n  }\n\n  // 处理拖拽开始\n  function onDragStart(e) {\n    var _e$touches;\n    // 检查是否是输入元素，避免干扰输入\n    if (e.target.tagName.toLowerCase() === 'input' || e.target.tagName.toLowerCase() === 'textarea' || e.target.tagName.toLowerCase() === 'button' || e.target.type === 'file') {\n      draggingRef.current = false;\n      return;\n    }\n    draggingRef.current = true;\n    const targetRect = e.currentTarget.getBoundingClientRect();\n    if (e.type === 'touchstart' && (_e$touches = e.touches) !== null && _e$touches !== void 0 && _e$touches[0]) {\n      dragOffsetRef.current = {\n        x: e.touches[0].clientX - targetRect.left,\n        y: e.touches[0].clientY - targetRect.top\n      };\n      // 仅在需要时调用preventDefault，避免被动模式错误\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    } else {\n      dragOffsetRef.current = {\n        x: e.clientX - targetRect.left,\n        y: e.clientY - targetRect.top\n      };\n    }\n    e.stopPropagation();\n  }\n\n  // 处理拖拽移动\n  function onDragMove(e) {\n    var _e$touches2;\n    if (!draggingRef.current) return;\n    let clientX, clientY;\n    if (e.type === 'touchmove' && (_e$touches2 = e.touches) !== null && _e$touches2 !== void 0 && _e$touches2[0]) {\n      clientX = e.touches[0].clientX;\n      clientY = e.touches[0].clientY;\n      // 仅在需要时调用preventDefault，避免被动模式错误\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    } else if (e.type === 'mousemove') {\n      clientX = e.clientX;\n      clientY = e.clientY;\n    } else {\n      return;\n    }\n    if (!containerRef.current || !e.currentTarget) return;\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const chatRect = e.currentTarget.getBoundingClientRect();\n    const chatWidth = chatRect.width;\n    const chatHeight = chatRect.height;\n    let newLeft = clientX - containerRect.left - dragOffsetRef.current.x;\n    let newTop = clientY - containerRect.top - dragOffsetRef.current.y;\n    newLeft = Math.min(Math.max(0, newLeft), containerRect.width - chatWidth);\n    newTop = Math.min(Math.max(0, newTop), containerRect.height - chatHeight);\n    setChatPos({\n      left: newLeft,\n      top: newTop\n    });\n    e.stopPropagation();\n  }\n\n  // 处理拖拽结束\n  function onDragEnd(e) {\n    if (draggingRef.current) {\n      draggingRef.current = false;\n      localStorage.setItem('chat-position', JSON.stringify(chatPos));\n      if (e.type === 'touchend' && e.cancelable) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  // *** 修改：处理打断说话请求，使用动态 URL ***\n  const handleInterruptClick = async () => {\n    // --- 新增：动态获取打断 URL ---\n    const {\n      interruptUrl\n    } = getDynamicUrls(); // 每次调用时获取最新 URL\n    // --- 新增结束 ---\n\n    try {\n      const resp = await fetch(interruptUrl, {\n        // 使用动态 URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      if (!resp.ok) throw new Error('状态码: ' + resp.status);\n      const result = await resp.json();\n      console.log('打断请求成功:', result);\n      // 可以在这里添加用户反馈，例如显示一个提示\n    } catch (error) {\n      console.error('打断请求失败:', error);\n      setErrorMessage(`打断失败: ${error.message}`);\n      // 可以在这里添加用户反馈\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      backgroundColor: '#000',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: hiddenVideoRef,\n      style: {\n        display: 'none'\n      },\n      autoPlay: true,\n      playsInline: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        position: 'relative'\n      },\n      children: [isChromaKeyEnabled ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n          display: renderVideo ? 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true,\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n          display: renderVideo ? 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: 10,\n        left: 10,\n        display: 'flex',\n        gap: 8,\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (!isStartedRef.current) {\n            start();\n          }\n        },\n        disabled: isStartedRef.current,\n        style: {\n          ...(!isStartedRef.current ? frostedGlassBtnStyle : disabledBtnStyle),\n          ...(startBtnHover && !isStartedRef.current ? getBtnHoverStyle(true) : {})\n        },\n        onMouseEnter: () => setStartBtnHover(true),\n        onMouseLeave: () => setStartBtnHover(false)\n        // 修复：添加触摸事件处理，避免被动监听器问题\n        ,\n        onTouchStart: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          if (!isStartedRef.current) {\n            start();\n          }\n        },\n        onTouchEnd: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n        },\n        children: \"\\u542F\\u52A8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (isStartedRef.current) {\n            stop();\n          }\n        },\n        disabled: !isStartedRef.current,\n        style: {\n          ...(!isStartedRef.current ? disabledBtnStyle : frostedGlassBtnStyle),\n          ...(stopBtnHover && isStartedRef.current ? getBtnHoverStyle(false) : {})\n        },\n        onMouseEnter: () => setStopBtnHover(true),\n        onMouseLeave: () => setStopBtnHover(false)\n        // 修复：添加触摸事件处理，避免被动监听器问题\n        ,\n        onTouchStart: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          if (isStartedRef.current) {\n            stop();\n          }\n        },\n        onTouchEnd: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n        },\n        children: \"\\u505C\\u6B62\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        style: {\n          ...frostedGlassBtnStyle,\n          ...(zoomInHover ? getBtnHoverStyle(false) : {})\n        },\n        onMouseEnter: () => setZoomInHover(true),\n        onMouseLeave: () => setZoomInHover(false)\n        // 修复：添加触摸事件处理，避免被动监听器问题\n        ,\n        onTouchStart: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          zoomIn();\n        },\n        onTouchEnd: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n        },\n        children: \"\\u653E\\u5927\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        style: {\n          ...frostedGlassBtnStyle,\n          ...(zoomOutHover ? getBtnHoverStyle(false) : {})\n        },\n        onMouseEnter: () => setZoomOutHover(true),\n        onMouseLeave: () => setZoomOutHover(false)\n        // 修复：添加触摸事件处理，避免被动监听器问题\n        ,\n        onTouchStart: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          zoomOut();\n        },\n        onTouchEnd: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n        },\n        children: \"\\u7F29\\u5C0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetZoom,\n        style: {\n          ...frostedGlassBtnStyle,\n          ...(resetHover ? getBtnHoverStyle(false) : {})\n        },\n        onMouseEnter: () => setResetHover(true),\n        onMouseLeave: () => setResetHover(false)\n        // 修复：添加触摸事件处理，避免被动监听器问题\n        ,\n        onTouchStart: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          resetZoom();\n        },\n        onTouchEnd: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n        },\n        children: \"\\u91CD\\u7F6E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 9\n      }, this), pipSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePiP,\n        style: {\n          ...frostedGlassBtnStyle,\n          backgroundColor: isPiPMode ? 'rgba(255, 152, 0, 0.3)' : frostedGlassBtnStyle.backgroundColor,\n          borderColor: isPiPMode ? '#ff9800' : frostedGlassBtnStyle.borderColor,\n          ...(pipBtnHover ? getBtnHoverStyle(isPiPMode ? false : true) : {})\n        },\n        onMouseEnter: () => setPipBtnHover(true),\n        onMouseLeave: () => setPipBtnHover(false)\n        // 修复：添加触摸事件处理，避免被动监听器问题\n        ,\n        onTouchStart: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          togglePiP();\n        },\n        onTouchEnd: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n        },\n        children: \"\\u753B\\u4E2D\\u753B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleChat,\n        style: {\n          ...frostedGlassBtnStyle,\n          backgroundColor: showChat ? 'rgba(33, 150, 243, 0.3)' : frostedGlassBtnStyle.backgroundColor,\n          borderColor: showChat ? '#2196f3' : frostedGlassBtnStyle.borderColor,\n          ...(chatBtnHover ? getBtnHoverStyle(showChat ? false : true) : {})\n        },\n        onMouseEnter: () => setChatBtnHover(true),\n        onMouseLeave: () => setChatBtnHover(false)\n        // 修复：添加触摸事件处理，避免被动监听器问题\n        ,\n        onTouchStart: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          toggleChat();\n        },\n        onTouchEnd: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n        },\n        children: \"\\u804A\\u5929\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInterruptClick,\n        style: frostedGlassBtnStyle\n        // 修复：添加触摸事件处理，避免被动监听器问题\n        ,\n        onTouchStart: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          handleInterruptClick();\n        },\n        onTouchEnd: e => {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n        },\n        children: \"\\u23F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 10,\n        right: 10,\n        padding: '8px 12px',\n        backgroundColor: 'rgba(244, 67, 54, 0.9)',\n        color: 'white',\n        borderRadius: 4,\n        zIndex: 10,\n        fontSize: 14,\n        wordWrap: 'break-word'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1038,\n      columnNumber: 9\n    }, this), !isPiPMode && /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: pipVideoRef,\n      style: {\n        position: 'fixed',\n        bottom: 10,\n        right: 10,\n        width: 160,\n        height: 'auto',\n        backgroundColor: 'transparent',\n        zIndex: 10000,\n        border: 'none',\n        boxShadow: '0 0 15px rgba(255, 255, 255, 0.5)',\n        borderRadius: 4\n      },\n      muted: true,\n      playsInline: true,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 9\n    }, this), showChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: chatPos.left,\n        top: chatPos.top,\n        width: 320,\n        borderRadius: 6,\n        padding: 12,\n        color: 'white',\n        userSelect: 'none',\n        cursor: draggingRef.current ? 'grabbing' : 'grab',\n        zIndex: 9999,\n        backdropFilter: 'blur(10px)',\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n        border: '1px solid rgba(255, 255, 255, 0.2)'\n      },\n      onMouseDown: onDragStart,\n      onMouseMove: onDragMove,\n      onMouseUp: onDragEnd,\n      onMouseLeave: onDragEnd,\n      onTouchStart: onDragStart,\n      onTouchMove: onDragMove,\n      onTouchEnd: onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: 10,\n          fontWeight: 'bold',\n          fontSize: 16\n        },\n        children: [\"\\u804A\\u5929\\u5BA4\", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setUsePresetColorOpen(v => !v),\n            style: {\n              background: 'none',\n              border: '1px solid rgba(255,255,255,0.3)',\n              color: 'white',\n              padding: '2px 6px',\n              borderRadius: 4,\n              cursor: 'pointer',\n              fontSize: 12\n            },\n            children: [((_presetColors$find = presetColors.find(c => c.value === chromaKeyColor)) === null || _presetColors$find === void 0 ? void 0 : _presetColors$find.label) || '请选择', /*#__PURE__*/_jsxDEV(\"svg\", {\n              style: {\n                width: 16,\n                height: 16,\n                transform: usePresetColorOpen ? 'rotate(180deg)' : undefined,\n                transition: 'transform 0.3s'\n              },\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"6 9 12 15 18 9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1135,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 15\n          }, this), usePresetColorOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '100%',\n              right: 0,\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',\n              border: '1px solid rgba(255,255,255,0.3)',\n              borderRadius: 4,\n              zIndex: 100,\n              minWidth: 120\n            },\n            children: presetColors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setChromaKeyColor(color.value);\n                setUsePresetColorOpen(false);\n              },\n              style: {\n                padding: '6px 10px',\n                cursor: 'pointer',\n                color: 'white',\n                backgroundColor: chromaKeyColor === color.value ? 'rgba(0, 229, 255, 0.3)' : 'transparent'\n              },\n              children: color.label\n            }, color.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1139,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"\\u8F93\\u5165\\u6D88\\u606F...\",\n          style: {\n            width: '100%',\n            padding: 8,\n            borderRadius: 4,\n            border: '1px solid rgba(255,255,255,0.3)',\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            color: 'white',\n            fontSize: 14,\n            resize: 'none'\n          },\n          rows: 3,\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              sendTextMessage(); // 使用修改后的函数名\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendTextMessage // 使用修改后的函数名\n            ,\n            disabled: !message.trim() || isSending,\n            style: {\n              ...frostedGlassBtnStyle,\n              padding: '4px 12px',\n              fontSize: 12,\n              backgroundColor: !message.trim() || isSending ? 'rgba(100, 100, 100, 0.3)' : frostedGlassBtnStyle.backgroundColor,\n              borderColor: !message.trim() || isSending ? 'rgba(100, 100, 100, 0.5)' : frostedGlassBtnStyle.borderColor,\n              color: !message.trim() || isSending ? 'rgba(200, 200, 200, 0.7)' : 'white',\n              cursor: !message.trim() || isSending ? 'not-allowed' : 'pointer'\n            },\n            children: isSending ? '发送中...' : '发送'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 8,\n            marginBottom: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              ...frostedGlassBtnStyle,\n              padding: '4px 12px',\n              fontSize: 12,\n              cursor: 'pointer',\n              flex: 1,\n              textAlign: 'center'\n            },\n            onClickCapture: e => e.stopPropagation()\n            // 修复：添加触摸事件处理，避免被动监听器问题\n            ,\n            onTouchStart: e => {\n              if (e.cancelable) {\n                e.preventDefault();\n              }\n              e.stopPropagation();\n              // 触发文件输入的点击\n              const fileInput = document.getElementById('file-upload');\n              if (fileInput) {\n                fileInput.click();\n              }\n            },\n            onTouchEnd: e => {\n              if (e.cancelable) {\n                e.preventDefault();\n              }\n              e.stopPropagation();\n            },\n            children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file-upload\",\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendFile,\n            disabled: !file,\n            style: {\n              ...frostedGlassBtnStyle,\n              padding: '4px 12px',\n              fontSize: 12,\n              backgroundColor: !file ? 'rgba(100, 100, 100, 0.3)' : frostedGlassBtnStyle.backgroundColor,\n              borderColor: !file ? 'rgba(100, 100, 100, 0.5)' : frostedGlassBtnStyle.borderColor,\n              color: !file ? 'rgba(200, 200, 200, 0.7)' : 'white',\n              cursor: !file ? 'not-allowed' : 'pointer'\n            }\n            // 修复：添加触摸事件处理，避免被动监听器问题\n            ,\n            onTouchStart: e => {\n              if (e.cancelable) {\n                e.preventDefault();\n              }\n              if (file) {\n                sendFile();\n              }\n            },\n            onTouchEnd: e => {\n              if (e.cancelable) {\n                e.preventDefault();\n              }\n            },\n            children: \"\\u4E0A\\u4F20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1212,\n          columnNumber: 13\n        }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '8px',\n            color: uploadStatus.includes('失败') ? 'red' : 'white',\n            fontSize: 13\n          },\n          children: uploadStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 15\n        }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8,\n            padding: 8,\n            border: '1px solid rgba(255,255,255,0.3)',\n            borderRadius: 4,\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            color: 'white',\n            wordBreak: 'break-all'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0 0 8px 0',\n              fontWeight: '600'\n            },\n            children: [\"\\u5DF2\\u9009\\u62E9\\u6587\\u4EF6: \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setFile(null),\n              style: {\n                background: 'none',\n                border: '1px solid rgba(255, 0, 0, 0.5)',\n                color: 'white',\n                padding: '4px 8px',\n                cursor: 'pointer',\n                borderRadius: 4,\n                fontSize: 12,\n                backgroundColor: 'rgba(255, 0, 0, 0.3)'\n              },\n              onClickCapture: e => e.stopPropagation()\n              // 修复：添加触摸事件处理，避免被动监听器问题\n              ,\n              onTouchStart: e => {\n                if (e.cancelable) {\n                  e.preventDefault();\n                }\n                e.stopPropagation();\n                setFile(null);\n              },\n              onTouchEnd: e => {\n                if (e.cancelable) {\n                  e.preventDefault();\n                }\n                e.stopPropagation();\n              },\n              children: \"\\u79FB\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1296,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: 10,\n        right: 10,\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 6,\n          color: 'white',\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\n          padding: '4px 8px',\n          borderRadius: 4,\n          fontSize: 12,\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChromaKeyEnabled,\n          onChange: e => setIsChromaKeyEnabled(e.target.checked),\n          style: {\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 11\n        }, this), \"\\u7EFF\\u5E55\\u62A0\\u56FE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1342,\n        columnNumber: 9\n      }, this), isChromaKeyEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 4,\n          display: 'flex',\n          alignItems: 'center',\n          gap: 6\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: 'white',\n            fontSize: 12\n          },\n          children: \"\\u989C\\u8272:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: chromaKeyColor,\n          onChange: e => setChromaKeyColor(e.target.value),\n          style: {\n            padding: '2px 4px',\n            borderRadius: 4,\n            border: '1px solid rgba(255,255,255,0.3)',\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            color: 'white',\n            fontSize: 12\n          },\n          children: presetColors.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: color.value,\n            children: color.label\n          }, color.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1382,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 776,\n    columnNumber: 5\n  }, this);\n}\n_s(OldWebRTC, \"cQCh405VPCVjnLOMP0e8L0lCWro=\");\n_c = OldWebRTC;\nvar _c;\n$RefreshReg$(_c, \"OldWebRTC\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","OldWebRTC","renderVideo","keepConnection","onStart","onStop","_s","_presetColors$find","videoRef","audioRef","pcRef","hiddenVideoRef","pipVideoRef","canvasRef","ctxRef","animationFrameIdRef","reconnectTimerRef","pipStreamRef","pipExitReasonRef","isPiPModeChangingRef","isStartedRef","isUserGestureRef","isStarted","setIsStarted","isPiPMode","setIsPiPMode","pipSupported","setPipSupported","enablePip","setEnablePip","message","setMessage","file","setFile","uploadStatus","setUploadStatus","isSending","setIsSending","connectionAttempts","setConnectionAttempts","maxConnectionAttempts","errorMessage","setErrorMessage","chatPos","setChatPos","saved","localStorage","getItem","pos","JSON","parse","left","top","showChat","setShowChat","useStun","setUseStun","chromaKeyColor","setChromaKeyColor","isChromaKeyEnabled","setIsChromaKeyEnabled","presetColors","value","label","containerRef","draggingRef","dragOffsetRef","x","y","usePresetColorOpen","setUsePresetColorOpen","startBtnHover","setStartBtnHover","stopBtnHover","setStopBtnHover","pipBtnHover","setPipBtnHover","chatBtnHover","setChatBtnHover","zoomInHover","setZoomInHover","zoomOutHover","setZoomOutHover","resetHover","setResetHover","SIGNALING_URL","getDynamicUrls","serverUrls","savedUrls","e","console","error","baseUrl","uploadFileUrl","qwenerUrl","interruptUrl","uploadPrintFileUrl","frostedGlassBtnStyle","padding","backgroundColor","color","border","borderRadius","cursor","fontWeight","fontSize","transition","backdropFilter","WebkitBackdropFilter","boxShadow","outline","userSelect","disabledBtnStyle","borderColor","getBtnHoverStyle","isPositive","transform","checkPipSupport","document","start","current","config","sdpSemantics","iceServers","urls","pc","RTCPeerConnection","addEventListener","log","connectionState","setTimeout","negotiate","stop","clearTimeout","candidate","track","kind","srcObject","streams","onloadedmetadata","setupCanvas","onplay","startCanvasDrawing","setupPipStream","alert","offer","createOffer","setLocalDescription","iceGatheringState","Promise","resolve","checkState","removeEventListener","response","fetch","method","headers","body","stringify","localDescription","ok","Error","status","answer","json","setRemoteDescription","zoomIn","video","style","width","height","zoomOut","resetZoom","togglePiP","pictureInPictureElement","exitPictureInPicture","requestPictureInPicture","canvas","createElement","ctx","getContext","videoWidth","videoHeight","pipStream","MediaStream","canvasStream","captureStream","videoTrack","getVideoTracks","addTrack","draw","readyState","drawImage","imageData","getImageData","data","targetR","targetG","targetB","i","length","r","g","b","diff","Math","abs","putImageData","requestAnimationFrame","stopPipStream","cancelAnimationFrame","tracks","getTracks","forEach","notifyBackendStop","close","handleUserGesture","once","sendTextMessage","trim","text","errorText","result","sendFile","formData","FormData","append","name","size","type","url","timeout","responseText","substring","fileInput","getElementById","handleFileChange","selectedFile","target","files","updateCanvasSize","toggleChat","v","onDragStart","_e$touches","tagName","toLowerCase","targetRect","currentTarget","getBoundingClientRect","touches","clientX","clientY","cancelable","preventDefault","stopPropagation","onDragMove","_e$touches2","containerRect","chatRect","chatWidth","chatHeight","newLeft","newTop","min","max","onDragEnd","setItem","handleInterruptClick","resp","ref","position","overflow","children","display","autoPlay","playsInline","muted","fileName","_jsxFileName","lineNumber","columnNumber","objectFit","bottom","gap","zIndex","onClick","disabled","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","right","wordWrap","onMouseDown","onMouseMove","onMouseUp","onTouchMove","justifyContent","alignItems","marginBottom","background","find","c","undefined","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","minWidth","map","onChange","placeholder","resize","rows","onKeyDown","key","shiftKey","marginTop","flex","textAlign","onClickCapture","click","id","includes","wordBreak","margin","checked","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/OldWebRTC.jsx"],"sourcesContent":["// D:\\XM\\AI-Sphere-Butler\\core\\client\\src\\components\\OldWebRTC.jsx\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nexport default function OldWebRTC({ renderVideo = true, keepConnection = false, onStart, onStop }) {\r\n  const videoRef = useRef(null);\r\n  const audioRef = useRef(null);\r\n  const pcRef = useRef(null);\r\n  const hiddenVideoRef = useRef(null); // 用于标准画中画的隐藏视频元素\r\n  const pipVideoRef = useRef(null); // 用于自定义画中画的视频元素\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const animationFrameIdRef = useRef(null);\r\n  const reconnectTimerRef = useRef(null);\r\n  const pipStreamRef = useRef(null); // 用于画中画的 MediaStream\r\n  const pipExitReasonRef = useRef(''); // 画中画退出原因\r\n  const isPiPModeChangingRef = useRef(false); // 防止画中画按钮重复点击\r\n  const isStartedRef = useRef(false); // 使用 ref 跟踪是否已启动\r\n  const isUserGestureRef = useRef(false); // 用户手势标志\r\n  const [isStarted, setIsStarted] = useState(false); // 启动状态\r\n  const [isPiPMode, setIsPiPMode] = useState(false); // 画中画模式状态\r\n  const [pipSupported, setPipSupported] = useState(false); // 画中画支持状态\r\n  const [enablePip, setEnablePip] = useState(false); // 启用画中画开关\r\n  const [message, setMessage] = useState(''); // 聊天消息\r\n  const [file, setFile] = useState(null); // 上传文件\r\n  const [uploadStatus, setUploadStatus] = useState(''); // 上传状态\r\n  const [isSending, setIsSending] = useState(false); // 发送状态\r\n  const [connectionAttempts, setConnectionAttempts] = useState(0); // 连接尝试次数\r\n  const maxConnectionAttempts = 3; // 最大连接尝试次数\r\n  const [errorMessage, setErrorMessage] = useState(''); // 错误消息\r\n  const [chatPos, setChatPos] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem('chat-position');\r\n      if (saved) {\r\n        const pos = JSON.parse(saved);\r\n        if (typeof pos.left === 'number' && typeof pos.top === 'number') {\r\n          return pos;\r\n        }\r\n      }\r\n    } catch {}\r\n    return { left: 20, top: 20 };\r\n  }); // 聊天框位置\r\n  const [showChat, setShowChat] = useState(true); // 是否显示聊天框\r\n  const [useStun, setUseStun] = useState(true); // 是否使用STUN服务器\r\n  const [chromaKeyColor, setChromaKeyColor] = useState('green'); // 抠图颜色\r\n  const [isChromaKeyEnabled, setIsChromaKeyEnabled] = useState(false); // 是否启用抠图\r\n  const [presetColors] = useState([\r\n    { value: 'green', label: '绿色' },\r\n    { value: 'blue', label: '蓝色' },\r\n    { value: 'red', label: '红色' },\r\n  ]);\r\n  const containerRef = useRef(null); // 容器引用\r\n  const draggingRef = useRef(false); // 拖拽状态标志\r\n  const dragOffsetRef = useRef({ x: 0, y: 0 }); // 拖拽偏移\r\n  const [usePresetColorOpen, setUsePresetColorOpen] = useState(false); // 预设颜色菜单展开状态\r\n  const [startBtnHover, setStartBtnHover] = useState(false); // 启动按钮悬停状态\r\n  const [stopBtnHover, setStopBtnHover] = useState(false); // 停止按钮悬停状态\r\n  const [pipBtnHover, setPipBtnHover] = useState(false); // 画中画按钮悬停状态\r\n  const [chatBtnHover, setChatBtnHover] = useState(false); // 聊天按钮悬停状态\r\n  const [zoomInHover, setZoomInHover] = useState(false); // 放大按钮悬停状态\r\n  const [zoomOutHover, setZoomOutHover] = useState(false); // 缩小按钮悬停状态\r\n  const [resetHover, setResetHover] = useState(false); // 重置按钮悬停状态\r\n  const SIGNALING_URL = '/api/webrtc_offer'; // 固定信令地址\r\n\r\n  // *** 修改开始：定义一个函数来获取动态配置的 URLs ***\r\n  const getDynamicUrls = () => {\r\n    let serverUrls = {};\r\n    try {\r\n      const savedUrls = localStorage.getItem('serverUrls');\r\n      if (savedUrls) {\r\n        serverUrls = JSON.parse(savedUrls);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"OldWebRTC: Failed to parse serverUrls from localStorage\", e);\r\n    }\r\n    // 优先使用配置项，如果没有则 fallback 到环境变量或默认值\r\n    // 注意：这里假设 ServerUrlConfig.jsx 中配置项的键名是 uploadFileUrl, qwenerUrl, interruptUrl\r\n    // 如果键名不同，请相应调整\r\n    const baseUrl = serverUrls.uploadFileUrl || 'http://192.168.168.77:6010';\r\n    const qwenerUrl = serverUrls.qwenerUrl || 'https://192.168.168.77:6010/qwener';\r\n    const interruptUrl = serverUrls.interruptUrl || 'http://192.168.168.77:6010/api/interrupt_speaking';\r\n\r\n    return {\r\n      uploadPrintFileUrl: `${baseUrl}/api/upload_print_file`,\r\n      qwenerUrl: qwenerUrl,\r\n      interruptUrl: interruptUrl\r\n    };\r\n  };\r\n  // *** 修改结束 ***\r\n\r\n  // 磨砂玻璃按钮基础样式\r\n  const frostedGlassBtnStyle = {\r\n    padding: '6px 12px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    color: 'white',\r\n    border: '1px solid rgba(255, 255, 255, 0.3)',\r\n    borderRadius: 4,\r\n    cursor: 'pointer',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    transition: 'all 0.3s',\r\n    backdropFilter: 'blur(10px)',\r\n    WebkitBackdropFilter: 'blur(10px)',\r\n    boxShadow: '0 4px 10px rgba(255, 255, 255, 0.15)',\r\n    outline: 'none',\r\n    userSelect: 'none',\r\n  };\r\n\r\n  // 禁用按钮样式\r\n  const disabledBtnStyle = {\r\n    ...frostedGlassBtnStyle,\r\n    backgroundColor: 'rgba(100, 100, 100, 0.3)',\r\n    borderColor: 'rgba(100, 100, 100, 0.5)',\r\n    color: 'rgba(200, 200, 200, 0.7)',\r\n    cursor: 'not-allowed',\r\n    boxShadow: 'none',\r\n  };\r\n\r\n  // 按钮悬停效果样式生成函数\r\n  const getBtnHoverStyle = (isPositive = true) => ({\r\n    backgroundColor: isPositive ? 'rgba(0, 229, 255, 0.3)' : 'rgba(255, 0, 0, 0.3)',\r\n    borderColor: isPositive ? '#00e5ff' : '#ff0000',\r\n    boxShadow: isPositive ? '0 6px 20px rgba(0, 229, 255, 0.5)' : '0 6px 20px rgba(255, 0, 0, 0.5)',\r\n    transform: 'translateY(-2px)',\r\n  });\r\n\r\n  // 初始化画中画支持检测\r\n  useEffect(() => {\r\n    const checkPipSupport = async () => {\r\n      if ('pictureInPictureEnabled' in document) {\r\n        setPipSupported(true);\r\n      } else {\r\n        setPipSupported(false);\r\n      }\r\n    };\r\n    checkPipSupport();\r\n  }, []);\r\n\r\n  // 启动WebRTC连接\r\n  async function start() {\r\n    if (isStartedRef.current) return;\r\n    const config = { sdpSemantics: 'unified-plan' };\r\n    if (useStun) {\r\n      config.iceServers = [{ urls: 'stun:stun.l.google.com:19302' }];\r\n    }\r\n    const pc = new RTCPeerConnection(config);\r\n    pcRef.current = pc;\r\n    isStartedRef.current = true;\r\n    setIsStarted(true);\r\n    setConnectionAttempts(0);\r\n\r\n    pc.addEventListener('connectionstatechange', () => {\r\n      console.log('WebRTC连接状态变化:', pc.connectionState);\r\n      if (pc.connectionState === 'failed' || pc.connectionState === 'disconnected') {\r\n        if (keepConnection) {\r\n          if (isPiPMode) {\r\n            console.log('WebRTC连接断开，但处于画中画模式，尝试重新连接');\r\n            setErrorMessage('WebRTC连接断开，尝试重连');\r\n            if (!reconnectTimerRef.current) {\r\n              reconnectTimerRef.current = setTimeout(() => {\r\n                if (isStartedRef.current) {\r\n                  negotiate();\r\n                }\r\n              }, 2000);\r\n            }\r\n          } else {\r\n            setErrorMessage('WebRTC连接断开或失败，尝试重连');\r\n            if (!reconnectTimerRef.current) {\r\n              reconnectTimerRef.current = setTimeout(() => {\r\n                if (isStartedRef.current) {\r\n                  stop();\r\n                  start();\r\n                }\r\n              }, 2000);\r\n            }\r\n          }\r\n        } else {\r\n          setErrorMessage('WebRTC连接断开或失败');\r\n        }\r\n      } else if (pc.connectionState === 'connected') {\r\n        setErrorMessage('');\r\n        if (reconnectTimerRef.current) {\r\n          clearTimeout(reconnectTimerRef.current);\r\n          reconnectTimerRef.current = null;\r\n        }\r\n        if (typeof onStart === 'function') {\r\n          onStart();\r\n        }\r\n      }\r\n    });\r\n\r\n    pc.addEventListener('icecandidate', async (e) => {\r\n      if (e.candidate) {\r\n        console.log('发现本地ICE候选:', e.candidate);\r\n      }\r\n    });\r\n\r\n    pc.addEventListener('track', (e) => {\r\n      console.log('收到远程媒体轨道:', e.track.kind);\r\n      if (e.track.kind === 'video' && videoRef.current) {\r\n        videoRef.current.srcObject = e.streams[0];\r\n        videoRef.current.onloadedmetadata = () => {\r\n          console.log('视频元数据加载完成');\r\n          if (isChromaKeyEnabled) {\r\n            setupCanvas();\r\n          }\r\n        };\r\n        videoRef.current.onplay = () => {\r\n          console.log('视频开始播放');\r\n          if (isChromaKeyEnabled) {\r\n            startCanvasDrawing();\r\n          }\r\n          if (enablePip && pipVideoRef.current) {\r\n            setTimeout(() => setupPipStream(), 100);\r\n          }\r\n        };\r\n      } else if (e.track.kind === 'audio' && audioRef.current) {\r\n        audioRef.current.srcObject = e.streams[0];\r\n      }\r\n    });\r\n\r\n    try {\r\n      console.log('开始创建WebRTC连接...');\r\n      await negotiate();\r\n    } catch (e) {\r\n      setErrorMessage(`WebRTC连接失败: ${e.message}`);\r\n      if (connectionAttempts < maxConnectionAttempts) {\r\n        setConnectionAttempts(connectionAttempts + 1);\r\n        reconnectTimerRef.current = setTimeout(() => {\r\n          if (isStartedRef.current) {\r\n            stop();\r\n            start();\r\n          }\r\n        }, 2000);\r\n      } else {\r\n        alert('连接失败，请检查网络连接或刷新页面');\r\n      }\r\n    }\r\n  }\r\n\r\n  // WebRTC协商过程\r\n  async function negotiate() {\r\n    const pc = pcRef.current;\r\n    if (!pc) return;\r\n\r\n    try {\r\n      console.log('创建并发送WebRTC Offer...');\r\n      const offer = await pc.createOffer();\r\n      await pc.setLocalDescription(offer);\r\n\r\n      // 等待 ICE 收集完成\r\n      if (pc.iceGatheringState !== 'complete') {\r\n        console.log('等待ICE收集完成...');\r\n        await new Promise((resolve) => {\r\n          const checkState = () => {\r\n            if (pc.iceGatheringState === 'complete') {\r\n              pc.removeEventListener('icegatheringstatechange', checkState);\r\n              resolve();\r\n            }\r\n          };\r\n          pc.addEventListener('icegatheringstatechange', checkState);\r\n        });\r\n      }\r\n\r\n      console.log('发送Offer到信令服务器:', SIGNALING_URL);\r\n      const response = await fetch(SIGNALING_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(pc.localDescription),\r\n      });\r\n      if (!response.ok) throw new Error(`服务器响应错误: ${response.status}`);\r\n      const answer = await response.json();\r\n      await pc.setRemoteDescription(answer);\r\n    } catch (e) {\r\n      setErrorMessage(`WebRTC连接失败: ${e.message}`);\r\n      if (connectionAttempts < maxConnectionAttempts) {\r\n        setConnectionAttempts(connectionAttempts + 1);\r\n        reconnectTimerRef.current = setTimeout(() => {\r\n          if (isStartedRef.current) {\r\n            negotiate();\r\n          }\r\n        }, 2000);\r\n      } else {\r\n        alert('连接失败，请检查网络连接或刷新页面');\r\n      }\r\n    }\r\n  }\r\n\r\n  // 放大视频\r\n  function zoomIn() {\r\n    const video = videoRef.current;\r\n    if (video) {\r\n      video.style.width = '120%';\r\n      video.style.height = '120%';\r\n    }\r\n  }\r\n\r\n  // 缩小视频\r\n  function zoomOut() {\r\n    const video = videoRef.current;\r\n    if (video) {\r\n      video.style.width = '100%';\r\n      video.style.height = '100%';\r\n    }\r\n  }\r\n\r\n  // 重置视频大小和位置\r\n  function resetZoom() {\r\n    const video = videoRef.current;\r\n    if (video) {\r\n      video.style.width = '100%';\r\n      video.style.height = '100%';\r\n      video.style.transform = 'none';\r\n    }\r\n  }\r\n\r\n  // 切换画中画模式\r\n  async function togglePiP() {\r\n    if (isPiPModeChangingRef.current) return; // 防止重复点击\r\n    isPiPModeChangingRef.current = true;\r\n\r\n    try {\r\n      if (isPiPMode) {\r\n        // 退出画中画\r\n        if (pipSupported && document.pictureInPictureElement === hiddenVideoRef.current) {\r\n          await document.exitPictureInPicture();\r\n        }\r\n        setIsPiPMode(false);\r\n        console.log('退出画中画模式');\r\n      } else {\r\n        // 进入画中画\r\n        if (pipSupported && hiddenVideoRef.current && hiddenVideoRef.current.srcObject) {\r\n          await hiddenVideoRef.current.requestPictureInPicture();\r\n          setIsPiPMode(true);\r\n          console.log('进入标准画中画模式');\r\n        } else if (pipVideoRef.current && pipVideoRef.current.srcObject) {\r\n          setIsPiPMode(true);\r\n          console.log('进入自定义画中画模式');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('切换画中画模式失败:', error);\r\n      setErrorMessage(`画中画切换失败: ${error.message}`);\r\n    } finally {\r\n      isPiPModeChangingRef.current = false;\r\n    }\r\n  }\r\n\r\n  // 设置画中画流\r\n  async function setupPipStream() {\r\n    const video = videoRef.current;\r\n    if (!video || !video.srcObject) return;\r\n\r\n    try {\r\n      console.log('开始设置画中画流...');\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) {\r\n        throw new Error('无法获取Canvas上下文');\r\n      }\r\n\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n\r\n      // 创建新的 MediaStream\r\n      const pipStream = new MediaStream();\r\n      pipStreamRef.current = pipStream;\r\n\r\n      // 创建 Canvas Capture Stream Track\r\n      const canvasStream = canvas.captureStream(30); // 30 FPS\r\n      const videoTrack = canvasStream.getVideoTracks()[0];\r\n      if (videoTrack) {\r\n        pipStream.addTrack(videoTrack);\r\n      }\r\n\r\n      // 设置隐藏视频元素用于标准画中画\r\n      if (hiddenVideoRef.current) {\r\n        hiddenVideoRef.current.srcObject = pipStream;\r\n        console.log('隐藏视频元素源已设置');\r\n      }\r\n\r\n      // 设置自定义画中画视频元素\r\n      if (pipVideoRef.current) {\r\n        pipVideoRef.current.srcObject = pipStream;\r\n        console.log('自定义画中画视频元素源已设置');\r\n      }\r\n\r\n      // 开始绘制到Canvas\r\n      const draw = () => {\r\n        if (video.readyState >= 2 && ctx) { // HAVE_CURRENT_DATA\r\n          ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n          if (isChromaKeyEnabled) {\r\n            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n            const data = imageData.data;\r\n            let targetR, targetG, targetB;\r\n            switch (chromaKeyColor) {\r\n              case 'green': targetR = 0; targetG = 255; targetB = 0; break;\r\n              case 'blue': targetR = 0; targetG = 0; targetB = 255; break;\r\n              case 'red': targetR = 255; targetG = 0; targetB = 0; break;\r\n              default: targetR = 0; targetG = 255; targetB = 0;\r\n            }\r\n            for (let i = 0; i < data.length; i += 4) {\r\n              const r = data[i];\r\n              const g = data[i + 1];\r\n              const b = data[i + 2];\r\n              const diff = Math.abs(r - targetR) + Math.abs(g - targetG) + Math.abs(b - targetB);\r\n              if (diff < 100) { // 阈值可调\r\n                data[i + 3] = 0; // 设置 alpha 为 0 (透明)\r\n              }\r\n            }\r\n            ctx.putImageData(imageData, 0, 0);\r\n          }\r\n        }\r\n        animationFrameIdRef.current = requestAnimationFrame(draw);\r\n      };\r\n      draw();\r\n\r\n      console.log('画中画流设置完成');\r\n    } catch (e) {\r\n      console.error('设置画中画流失败:', e);\r\n      setErrorMessage(`画中画设置失败: ${e.message}`);\r\n    }\r\n  }\r\n\r\n  // 停止画中画流\r\n  function stopPipStream() {\r\n    if (animationFrameIdRef.current) {\r\n      cancelAnimationFrame(animationFrameIdRef.current);\r\n      animationFrameIdRef.current = null;\r\n    }\r\n    if (pipStreamRef.current) {\r\n      const tracks = pipStreamRef.current.getTracks();\r\n      tracks.forEach(track => track.stop());\r\n      pipStreamRef.current = null;\r\n    }\r\n    if (hiddenVideoRef.current) {\r\n      hiddenVideoRef.current.srcObject = null;\r\n    }\r\n    if (pipVideoRef.current) {\r\n      pipVideoRef.current.srcObject = null;\r\n    }\r\n    console.log('画中画流已停止');\r\n  }\r\n\r\n  // 通知后端停止（当前未实现）\r\n  async function notifyBackendStop() {\r\n    console.log('notifyBackendStop called but ignored due to no backend stop API');\r\n  }\r\n\r\n  // 停止WebRTC连接\r\n  function stop() {\r\n    isStartedRef.current = false;\r\n    setIsStarted(false);\r\n    isUserGestureRef.current = false;\r\n    if (reconnectTimerRef.current) {\r\n      clearTimeout(reconnectTimerRef.current);\r\n      reconnectTimerRef.current = null;\r\n    }\r\n    if (animationFrameIdRef.current) {\r\n      cancelAnimationFrame(animationFrameIdRef.current);\r\n      animationFrameIdRef.current = null;\r\n    }\r\n    if (pcRef.current) {\r\n      pcRef.current.close();\r\n      pcRef.current = null;\r\n    }\r\n    if (videoRef.current) {\r\n      videoRef.current.srcObject = null;\r\n    }\r\n    if (audioRef.current) {\r\n      audioRef.current.srcObject = null;\r\n    }\r\n    stopPipStream();\r\n    if (typeof onStop === 'function') {\r\n      onStop();\r\n    }\r\n    console.log('WebRTC连接已停止');\r\n  }\r\n\r\n  // 组件卸载时停止连接\r\n  useEffect(() => {\r\n    return () => {\r\n      stop();\r\n      notifyBackendStop();\r\n    };\r\n  }, []);\r\n\r\n  // 处理用户手势以启动视频\r\n  useEffect(() => {\r\n    const handleUserGesture = () => {\r\n      if (!isUserGestureRef.current) {\r\n        isUserGestureRef.current = true;\r\n        console.log('检测到用户手势');\r\n        if (renderVideo && !isStartedRef.current) {\r\n          start();\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener('click', handleUserGesture, { once: true });\r\n    document.addEventListener('touchstart', handleUserGesture, { once: true });\r\n    return () => {\r\n      document.removeEventListener('click', handleUserGesture);\r\n      document.removeEventListener('touchstart', handleUserGesture);\r\n    };\r\n  }, [renderVideo]);\r\n\r\n  // 启动连接（如果需要）\r\n  useEffect(() => {\r\n    if (renderVideo && isUserGestureRef.current && !isStartedRef.current) {\r\n      start();\r\n    }\r\n  }, [renderVideo]);\r\n\r\n  // 发送文本消息\r\n  const sendTextMessage = async () => {\r\n    if (!message.trim() || isSending) return;\r\n    setIsSending(true);\r\n    setErrorMessage('');\r\n\r\n    // *** 修改：动态获取 Qwener URL ***\r\n    const { qwenerUrl } = getDynamicUrls();\r\n\r\n    try {\r\n      const response = await fetch(qwenerUrl, { // 使用动态 URL\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\r\n        body: JSON.stringify({ text: message.trim() }),\r\n      });\r\n      // 增加错误处理和日志\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('文本发送失败，响应内容:', errorText);\r\n        throw new Error(`状态码: ${response.status}, 内容: ${errorText}`);\r\n      }\r\n      const result = await response.json();\r\n      console.log('文本发送成功，响应:', result);\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('文本发送失败:', error);\r\n      setErrorMessage(`文本发送失败: ${error.message}`);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  // *** 修改：改进文件上传功能，使用动态 URL ***\r\n  const sendFile = async () => {\r\n    // --- 新增：动态获取上传 URL ---\r\n    const { uploadPrintFileUrl } = getDynamicUrls(); // 每次调用时获取最新 URL\r\n    // --- 新增结束 ---\r\n\r\n    if (!file) return;\r\n    try {\r\n      setUploadStatus('正在上传...');\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      // 打印调试信息\r\n      console.log('准备上传文件:', {\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        url: uploadPrintFileUrl // 使用动态获取的 URL\r\n      });\r\n\r\n      const response = await fetch(uploadPrintFileUrl, { // 使用动态获取的 URL\r\n        method: 'POST',\r\n        body: formData,\r\n        // 修复：不设置Content-Type，让浏览器自动处理multipart/form-data\r\n        headers: {\r\n          'Accept': 'application/json',\r\n        },\r\n        // 增加超时设置\r\n        timeout: 30000\r\n      });\r\n\r\n      // 读取响应文本（无论成功与否）\r\n      const responseText = await response.text();\r\n      console.log(`上传响应 (状态码: ${response.status}):`, responseText);\r\n\r\n      // 尝试解析JSON\r\n      let result;\r\n      try {\r\n        result = JSON.parse(responseText);\r\n      } catch (e) {\r\n        console.error('解析响应JSON失败:', e, '响应文本:', responseText);\r\n        throw new Error(`服务器返回无效JSON: ${responseText.substring(0, 100)}`);\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(result.error || `上传失败: ${response.status}`);\r\n      }\r\n\r\n      setUploadStatus(result.message || '文件上传成功');\r\n      setFile(null);\r\n      // 清空文件输入\r\n      const fileInput = document.getElementById('file-upload');\r\n      if (fileInput) fileInput.value = '';\r\n      console.log('文件上传成功:', result);\r\n    } catch (error) {\r\n      console.error('文件发送失败:', error);\r\n      setUploadStatus(`上传失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 处理文件选择\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      setUploadStatus(`已选择: ${selectedFile.name}`);\r\n    } else {\r\n      setFile(null);\r\n      setUploadStatus('');\r\n    }\r\n  };\r\n\r\n  // 设置画布用于抠图\r\n  function setupCanvas() {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!video || !canvas) return;\r\n\r\n    const updateCanvasSize = () => {\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      console.log('画布尺寸更新为:', canvas.width, 'x', canvas.height);\r\n    };\r\n\r\n    if (video.readyState >= 2) { // HAVE_CURRENT_DATA\r\n      updateCanvasSize();\r\n    } else {\r\n      video.addEventListener('loadeddata', updateCanvasSize, { once: true });\r\n    }\r\n  };\r\n\r\n  // 开始画布绘制（抠图）\r\n  function startCanvasDrawing() {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!video || !canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctxRef.current = ctx;\r\n\r\n    const draw = () => {\r\n      if (isChromaKeyEnabled && video.readyState >= 2) {\r\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        let targetR, targetG, targetB;\r\n        switch (chromaKeyColor) {\r\n          case 'green': targetR = 0; targetG = 255; targetB = 0; break;\r\n          case 'blue': targetR = 0; targetG = 0; targetB = 255; break;\r\n          case 'red': targetR = 255; targetG = 0; targetB = 0; break;\r\n          default: targetR = 0; targetG = 255; targetB = 0;\r\n        }\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const r = data[i];\r\n          const g = data[i + 1];\r\n          const b = data[i + 2];\r\n          const diff = Math.abs(r - targetR) + Math.abs(g - targetG) + Math.abs(b - targetB);\r\n          if (diff < 100) { // 阈值可调\r\n            data[i + 3] = 0; // 设置 alpha 为 0 (透明)\r\n          }\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n      }\r\n      animationFrameIdRef.current = requestAnimationFrame(draw);\r\n    };\r\n    draw();\r\n  }\r\n\r\n  // 切换聊天框显示\r\n  function toggleChat() {\r\n    setShowChat(v => !v);\r\n  }\r\n\r\n  // 处理拖拽开始\r\n  function onDragStart(e) {\r\n    // 检查是否是输入元素，避免干扰输入\r\n    if (e.target.tagName.toLowerCase() === 'input' ||\r\n      e.target.tagName.toLowerCase() === 'textarea' ||\r\n      e.target.tagName.toLowerCase() === 'button' ||\r\n      e.target.type === 'file') {\r\n      draggingRef.current = false;\r\n      return;\r\n    }\r\n    draggingRef.current = true;\r\n    const targetRect = e.currentTarget.getBoundingClientRect();\r\n    if (e.type === 'touchstart' && e.touches?.[0]) {\r\n      dragOffsetRef.current = {\r\n        x: e.touches[0].clientX - targetRect.left,\r\n        y: e.touches[0].clientY - targetRect.top,\r\n      };\r\n      // 仅在需要时调用preventDefault，避免被动模式错误\r\n      if (e.cancelable) {\r\n        e.preventDefault();\r\n      }\r\n    } else {\r\n      dragOffsetRef.current = {\r\n        x: e.clientX - targetRect.left,\r\n        y: e.clientY - targetRect.top,\r\n      };\r\n    }\r\n    e.stopPropagation();\r\n  }\r\n\r\n  // 处理拖拽移动\r\n  function onDragMove(e) {\r\n    if (!draggingRef.current) return;\r\n    let clientX, clientY;\r\n    if (e.type === 'touchmove' && e.touches?.[0]) {\r\n      clientX = e.touches[0].clientX;\r\n      clientY = e.touches[0].clientY;\r\n      // 仅在需要时调用preventDefault，避免被动模式错误\r\n      if (e.cancelable) {\r\n        e.preventDefault();\r\n      }\r\n    } else if (e.type === 'mousemove') {\r\n      clientX = e.clientX;\r\n      clientY = e.clientY;\r\n    } else {\r\n      return;\r\n    }\r\n    if (!containerRef.current || !e.currentTarget) return;\r\n    const containerRect = containerRef.current.getBoundingClientRect();\r\n    const chatRect = e.currentTarget.getBoundingClientRect();\r\n    const chatWidth = chatRect.width;\r\n    const chatHeight = chatRect.height;\r\n\r\n    let newLeft = clientX - containerRect.left - dragOffsetRef.current.x;\r\n    let newTop = clientY - containerRect.top - dragOffsetRef.current.y;\r\n    newLeft = Math.min(Math.max(0, newLeft), containerRect.width - chatWidth);\r\n    newTop = Math.min(Math.max(0, newTop), containerRect.height - chatHeight);\r\n    setChatPos({ left: newLeft, top: newTop });\r\n    e.stopPropagation();\r\n  }\r\n\r\n  // 处理拖拽结束\r\n  function onDragEnd(e) {\r\n    if (draggingRef.current) {\r\n      draggingRef.current = false;\r\n      localStorage.setItem('chat-position', JSON.stringify(chatPos));\r\n      if (e.type === 'touchend' && e.cancelable) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  // *** 修改：处理打断说话请求，使用动态 URL ***\r\n  const handleInterruptClick = async () => {\r\n    // --- 新增：动态获取打断 URL ---\r\n    const { interruptUrl } = getDynamicUrls(); // 每次调用时获取最新 URL\r\n    // --- 新增结束 ---\r\n\r\n    try {\r\n      const resp = await fetch(interruptUrl, { // 使用动态 URL\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n      });\r\n      if (!resp.ok) throw new Error('状态码: ' + resp.status);\r\n      const result = await resp.json();\r\n      console.log('打断请求成功:', result);\r\n      // 可以在这里添加用户反馈，例如显示一个提示\r\n    } catch (error) {\r\n      console.error('打断请求失败:', error);\r\n      setErrorMessage(`打断失败: ${error.message}`);\r\n      // 可以在这里添加用户反馈\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n        backgroundColor: '#000',\r\n        overflow: 'hidden',\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      {/* 隐藏的视频元素用于标准画中画 */}\r\n      <video\r\n        ref={hiddenVideoRef}\r\n        style={{ display: 'none' }}\r\n        autoPlay\r\n        playsInline\r\n        muted\r\n      />\r\n\r\n      {/* 主视频/画布显示区域 */}\r\n      <div style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n        {isChromaKeyEnabled ? (\r\n          <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n              width: '100%',\r\n              height: '100%',\r\n              objectFit: 'cover',\r\n              display: renderVideo ? 'block' : 'none',\r\n            }}\r\n          />\r\n        ) : (\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            playsInline\r\n            muted\r\n            style={{\r\n              width: '100%',\r\n              height: '100%',\r\n              objectFit: 'cover',\r\n              display: renderVideo ? 'block' : 'none',\r\n            }}\r\n          />\r\n        )}\r\n        <audio ref={audioRef} autoPlay />\r\n      </div>\r\n\r\n      {/* 控制按钮区域 */}\r\n      <div style={{\r\n        position: 'absolute',\r\n        bottom: 10,\r\n        left: 10,\r\n        display: 'flex',\r\n        gap: 8,\r\n        zIndex: 10,\r\n      }}>\r\n        <button\r\n          onClick={() => {\r\n            if (!isStartedRef.current) {\r\n              start();\r\n            }\r\n          }}\r\n          disabled={isStartedRef.current}\r\n          style={{\r\n            ...(!isStartedRef.current ? frostedGlassBtnStyle : disabledBtnStyle),\r\n            ...(startBtnHover && !isStartedRef.current ? getBtnHoverStyle(true) : {}),\r\n          }}\r\n          onMouseEnter={() => setStartBtnHover(true)}\r\n          onMouseLeave={() => setStartBtnHover(false)}\r\n          // 修复：添加触摸事件处理，避免被动监听器问题\r\n          onTouchStart={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n            if (!isStartedRef.current) {\r\n              start();\r\n            }\r\n          }}\r\n          onTouchEnd={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n        >\r\n          启动\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            if (isStartedRef.current) {\r\n              stop();\r\n            }\r\n          }}\r\n          disabled={!isStartedRef.current}\r\n          style={{\r\n            ...(!isStartedRef.current ? disabledBtnStyle : frostedGlassBtnStyle),\r\n            ...(stopBtnHover && isStartedRef.current ? getBtnHoverStyle(false) : {}),\r\n          }}\r\n          onMouseEnter={() => setStopBtnHover(true)}\r\n          onMouseLeave={() => setStopBtnHover(false)}\r\n          // 修复：添加触摸事件处理，避免被动监听器问题\r\n          onTouchStart={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n            if (isStartedRef.current) {\r\n              stop();\r\n            }\r\n          }}\r\n          onTouchEnd={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n        >\r\n          停止\r\n        </button>\r\n        <button\r\n          onClick={zoomIn}\r\n          style={{\r\n            ...frostedGlassBtnStyle,\r\n            ...(zoomInHover ? getBtnHoverStyle(false) : {}),\r\n          }}\r\n          onMouseEnter={() => setZoomInHover(true)}\r\n          onMouseLeave={() => setZoomInHover(false)}\r\n          // 修复：添加触摸事件处理，避免被动监听器问题\r\n          onTouchStart={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n            zoomIn();\r\n          }}\r\n          onTouchEnd={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n        >\r\n          放大\r\n        </button>\r\n        <button\r\n          onClick={zoomOut}\r\n          style={{\r\n            ...frostedGlassBtnStyle,\r\n            ...(zoomOutHover ? getBtnHoverStyle(false) : {}),\r\n          }}\r\n          onMouseEnter={() => setZoomOutHover(true)}\r\n          onMouseLeave={() => setZoomOutHover(false)}\r\n          // 修复：添加触摸事件处理，避免被动监听器问题\r\n          onTouchStart={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n            zoomOut();\r\n          }}\r\n          onTouchEnd={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n        >\r\n          缩小\r\n        </button>\r\n        <button\r\n          onClick={resetZoom}\r\n          style={{\r\n            ...frostedGlassBtnStyle,\r\n            ...(resetHover ? getBtnHoverStyle(false) : {}),\r\n          }}\r\n          onMouseEnter={() => setResetHover(true)}\r\n          onMouseLeave={() => setResetHover(false)}\r\n          // 修复：添加触摸事件处理，避免被动监听器问题\r\n          onTouchStart={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n            resetZoom();\r\n          }}\r\n          onTouchEnd={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n        >\r\n          重置\r\n        </button>\r\n        {pipSupported && (\r\n          <button\r\n            onClick={togglePiP}\r\n            style={{\r\n              ...frostedGlassBtnStyle,\r\n              backgroundColor: isPiPMode ? 'rgba(255, 152, 0, 0.3)' : frostedGlassBtnStyle.backgroundColor,\r\n              borderColor: isPiPMode ? '#ff9800' : frostedGlassBtnStyle.borderColor,\r\n              ...(pipBtnHover ? getBtnHoverStyle(isPiPMode ? false : true) : {}),\r\n            }}\r\n            onMouseEnter={() => setPipBtnHover(true)}\r\n            onMouseLeave={() => setPipBtnHover(false)}\r\n            // 修复：添加触摸事件处理，避免被动监听器问题\r\n            onTouchStart={(e) => {\r\n              if (e.cancelable) {\r\n                e.preventDefault();\r\n              }\r\n              togglePiP();\r\n            }}\r\n            onTouchEnd={(e) => {\r\n              if (e.cancelable) {\r\n                e.preventDefault();\r\n              }\r\n            }}\r\n          >\r\n            画中画\r\n          </button>\r\n        )}\r\n        <button\r\n          onClick={toggleChat}\r\n          style={{\r\n            ...frostedGlassBtnStyle,\r\n            backgroundColor: showChat ? 'rgba(33, 150, 243, 0.3)' : frostedGlassBtnStyle.backgroundColor,\r\n            borderColor: showChat ? '#2196f3' : frostedGlassBtnStyle.borderColor,\r\n            ...(chatBtnHover ? getBtnHoverStyle(showChat ? false : true) : {}),\r\n          }}\r\n          onMouseEnter={() => setChatBtnHover(true)}\r\n          onMouseLeave={() => setChatBtnHover(false)}\r\n          // 修复：添加触摸事件处理，避免被动监听器问题\r\n          onTouchStart={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n            toggleChat();\r\n          }}\r\n          onTouchEnd={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n        >\r\n          聊天\r\n        </button>\r\n        {/* 新增：打断说话按钮 */}\r\n        <button\r\n          onClick={handleInterruptClick}\r\n          style={frostedGlassBtnStyle}\r\n          // 修复：添加触摸事件处理，避免被动监听器问题\r\n          onTouchStart={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n            handleInterruptClick();\r\n          }}\r\n          onTouchEnd={(e) => {\r\n            if (e.cancelable) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n        >\r\n          ⏹\r\n        </button>\r\n      </div>\r\n\r\n      {/* 错误消息显示 */}\r\n      {errorMessage && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: 10,\r\n          left: 10,\r\n          right: 10,\r\n          padding: '8px 12px',\r\n          backgroundColor: 'rgba(244, 67, 54, 0.9)',\r\n          color: 'white',\r\n          borderRadius: 4,\r\n          zIndex: 10,\r\n          fontSize: 14,\r\n          wordWrap: 'break-word',\r\n        }}>\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n\r\n      {/* 自定义画中画窗口 */}\r\n      {!isPiPMode && (\r\n        <video\r\n          ref={pipVideoRef}\r\n          style={{\r\n            position: 'fixed',\r\n            bottom: 10,\r\n            right: 10,\r\n            width: 160,\r\n            height: 'auto',\r\n            backgroundColor: 'transparent',\r\n            zIndex: 10000,\r\n            border: 'none',\r\n            boxShadow: '0 0 15px rgba(255, 255, 255, 0.5)',\r\n            borderRadius: 4,\r\n          }}\r\n          muted\r\n          playsInline\r\n          autoPlay\r\n        />\r\n      )}\r\n\r\n      {/* 聊天框 */}\r\n      {showChat && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            left: chatPos.left,\r\n            top: chatPos.top,\r\n            width: 320,\r\n            borderRadius: 6,\r\n            padding: 12,\r\n            color: 'white',\r\n            userSelect: 'none',\r\n            cursor: draggingRef.current ? 'grabbing' : 'grab',\r\n            zIndex: 9999,\r\n            backdropFilter: 'blur(10px)',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n            border: '1px solid rgba(255, 255, 255, 0.2)',\r\n          }}\r\n          onMouseDown={onDragStart}\r\n          onMouseMove={onDragMove}\r\n          onMouseUp={onDragEnd}\r\n          onMouseLeave={onDragEnd}\r\n          onTouchStart={onDragStart}\r\n          onTouchMove={onDragMove}\r\n          onTouchEnd={onDragEnd}\r\n        >\r\n          <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            marginBottom: 10,\r\n            fontWeight: 'bold',\r\n            fontSize: 16,\r\n          }}>\r\n            聊天室\r\n            <div style={{ position: 'relative' }}>\r\n              <button\r\n                onClick={() => setUsePresetColorOpen(v => !v)}\r\n                style={{\r\n                  background: 'none',\r\n                  border: '1px solid rgba(255,255,255,0.3)',\r\n                  color: 'white',\r\n                  padding: '2px 6px',\r\n                  borderRadius: 4,\r\n                  cursor: 'pointer',\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                {presetColors.find(c => c.value === chromaKeyColor)?.label || '请选择'}\r\n                <svg\r\n                  style={{ width: 16, height: 16, transform: usePresetColorOpen ? 'rotate(180deg)' : undefined, transition: 'transform 0.3s' }}\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <polyline points=\"6 9 12 15 18 9\" />\r\n                </svg>\r\n              </button>\r\n              {usePresetColorOpen && (\r\n                <div style={{\r\n                  position: 'absolute',\r\n                  top: '100%',\r\n                  right: 0,\r\n                  backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n                  border: '1px solid rgba(255,255,255,0.3)',\r\n                  borderRadius: 4,\r\n                  zIndex: 100,\r\n                  minWidth: 120,\r\n                }}>\r\n                  {presetColors.map(color => (\r\n                    <div\r\n                      key={color.value}\r\n                      onClick={() => {\r\n                        setChromaKeyColor(color.value);\r\n                        setUsePresetColorOpen(false);\r\n                      }}\r\n                      style={{\r\n                        padding: '6px 10px',\r\n                        cursor: 'pointer',\r\n                        color: 'white',\r\n                        backgroundColor: chromaKeyColor === color.value ? 'rgba(0, 229, 255, 0.3)' : 'transparent',\r\n                      }}\r\n                    >\r\n                      {color.label}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div style={{ marginBottom: 10 }}>\r\n            <textarea\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              placeholder=\"输入消息...\"\r\n              style={{\r\n                width: '100%',\r\n                padding: 8,\r\n                borderRadius: 4,\r\n                border: '1px solid rgba(255,255,255,0.3)',\r\n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n                color: 'white',\r\n                fontSize: 14,\r\n                resize: 'none',\r\n              }}\r\n              rows={3}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' && !e.shiftKey) {\r\n                  e.preventDefault();\r\n                  sendTextMessage(); // 使用修改后的函数名\r\n                }\r\n              }}\r\n            />\r\n            <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 8 }}>\r\n              <button\r\n                onClick={sendTextMessage} // 使用修改后的函数名\r\n                disabled={!message.trim() || isSending}\r\n                style={{\r\n                  ...frostedGlassBtnStyle,\r\n                  padding: '4px 12px',\r\n                  fontSize: 12,\r\n                  backgroundColor: (!message.trim() || isSending) ? 'rgba(100, 100, 100, 0.3)' : frostedGlassBtnStyle.backgroundColor,\r\n                  borderColor: (!message.trim() || isSending) ? 'rgba(100, 100, 100, 0.5)' : frostedGlassBtnStyle.borderColor,\r\n                  color: (!message.trim() || isSending) ? 'rgba(200, 200, 200, 0.7)' : 'white',\r\n                  cursor: (!message.trim() || isSending) ? 'not-allowed' : 'pointer',\r\n                }}\r\n              >\r\n                {isSending ? '发送中...' : '发送'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 8 }}>\r\n              <label\r\n                style={{\r\n                  ...frostedGlassBtnStyle,\r\n                  padding: '4px 12px',\r\n                  fontSize: 12,\r\n                  cursor: 'pointer',\r\n                  flex: 1,\r\n                  textAlign: 'center',\r\n                }}\r\n                onClickCapture={(e) => e.stopPropagation()}\r\n                // 修复：添加触摸事件处理，避免被动监听器问题\r\n                onTouchStart={(e) => {\r\n                  if (e.cancelable) {\r\n                    e.preventDefault();\r\n                  }\r\n                  e.stopPropagation();\r\n                  // 触发文件输入的点击\r\n                  const fileInput = document.getElementById('file-upload');\r\n                  if (fileInput) {\r\n                    fileInput.click();\r\n                  }\r\n                }}\r\n                onTouchEnd={(e) => {\r\n                  if (e.cancelable) {\r\n                    e.preventDefault();\r\n                  }\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                选择文件\r\n              </label>\r\n              <input\r\n                id=\"file-upload\"\r\n                type=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n              />\r\n              <button\r\n                onClick={sendFile}\r\n                disabled={!file}\r\n                style={{\r\n                  ...frostedGlassBtnStyle,\r\n                  padding: '4px 12px',\r\n                  fontSize: 12,\r\n                  backgroundColor: !file ? 'rgba(100, 100, 100, 0.3)' : frostedGlassBtnStyle.backgroundColor,\r\n                  borderColor: !file ? 'rgba(100, 100, 100, 0.5)' : frostedGlassBtnStyle.borderColor,\r\n                  color: !file ? 'rgba(200, 200, 200, 0.7)' : 'white',\r\n                  cursor: !file ? 'not-allowed' : 'pointer',\r\n                }}\r\n                // 修复：添加触摸事件处理，避免被动监听器问题\r\n                onTouchStart={(e) => {\r\n                  if (e.cancelable) {\r\n                    e.preventDefault();\r\n                  }\r\n                  if (file) {\r\n                    sendFile();\r\n                  }\r\n                }}\r\n                onTouchEnd={(e) => {\r\n                  if (e.cancelable) {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                上传\r\n              </button>\r\n            </div>\r\n            {uploadStatus && (\r\n              <div style={{ marginTop: '8px', color: uploadStatus.includes('失败') ? 'red' : 'white', fontSize: 13 }}>\r\n                {uploadStatus}\r\n              </div>\r\n            )}\r\n            {file && (\r\n              <div style={{\r\n                marginTop: 8,\r\n                padding: 8,\r\n                border: '1px solid rgba(255,255,255,0.3)',\r\n                borderRadius: 4,\r\n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n                color: 'white',\r\n                wordBreak: 'break-all',\r\n              }}>\r\n                <p style={{ margin: '0 0 8px 0', fontWeight: '600' }}>已选择文件: {file.name}</p>\r\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setFile(null)}\r\n                    style={{\r\n                      background: 'none',\r\n                      border: '1px solid rgba(255, 0, 0, 0.5)',\r\n                      color: 'white',\r\n                      padding: '4px 8px',\r\n                      cursor: 'pointer',\r\n                      borderRadius: 4,\r\n                      fontSize: 12,\r\n                      backgroundColor: 'rgba(255, 0, 0, 0.3)',\r\n                    }}\r\n                    onClickCapture={(e) => e.stopPropagation()}\r\n                    // 修复：添加触摸事件处理，避免被动监听器问题\r\n                    onTouchStart={(e) => {\r\n                      if (e.cancelable) {\r\n                        e.preventDefault();\r\n                      }\r\n                      e.stopPropagation();\r\n                      setFile(null);\r\n                    }}\r\n                    onTouchEnd={(e) => {\r\n                      if (e.cancelable) {\r\n                        e.preventDefault();\r\n                      }\r\n                      e.stopPropagation();\r\n                    }}\r\n                  >\r\n                    移除\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 绿幕抠图开关 */}\r\n      <div style={{\r\n        position: 'absolute',\r\n        bottom: 10,\r\n        right: 10,\r\n        zIndex: 10,\r\n      }}>\r\n        <label style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 6,\r\n          color: 'white',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n          padding: '4px 8px',\r\n          borderRadius: 4,\r\n          fontSize: 12,\r\n          cursor: 'pointer',\r\n        }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isChromaKeyEnabled}\r\n            onChange={(e) => setIsChromaKeyEnabled(e.target.checked)}\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n          绿幕抠图\r\n        </label>\r\n        {isChromaKeyEnabled && (\r\n          <div style={{\r\n            marginTop: 4,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 6,\r\n          }}>\r\n            <label style={{ color: 'white', fontSize: 12 }}>颜色:</label>\r\n            <select\r\n              value={chromaKeyColor}\r\n              onChange={(e) => setChromaKeyColor(e.target.value)}\r\n              style={{\r\n                padding: '2px 4px',\r\n                borderRadius: 4,\r\n                border: '1px solid rgba(255,255,255,0.3)',\r\n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n                color: 'white',\r\n                fontSize: 12,\r\n              }}\r\n            >\r\n              {presetColors.map(color => (\r\n                <option key={color.value} value={color.value}>{color.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}