{"ast":null,"code":"import React,{createContext,useState,useRef,useEffect,useContext}from'react';import{useRecorder}from'../hooks/useRecorder';import{useButler}from'../components/ButlersContext';import{jsx as _jsx}from\"react/jsx-runtime\";const RecorderContext=/*#__PURE__*/createContext(null);export function RecorderProvider(_ref){let{children}=_ref;const{activeButlerId,setActiveButlerId}=useButler();const[isRecording,setIsRecording]=useState(false);const[transcription,setTranscription]=useState('');const[lang,setLang]=useState(()=>{try{return localStorage.getItem('audioTranscriberLang')||'auto';}catch(_unused){return'auto';}});const[speakerVerification,setSpeakerVerification]=useState(()=>{try{return localStorage.getItem('audioTranscriberSpeakerVerification')==='true';}catch(_unused2){return false;}});const[wakeWordEnabled,setWakeWordEnabled]=useState(()=>{try{const stored=localStorage.getItem('wakeWordEnabled');return stored===null?true:stored==='true';}catch(_unused3){return true;}});const[wakeWords,setWakeWords]=useState(()=>{try{const stored=localStorage.getItem('wakeWords');return stored?stored:'xiao li';}catch(_unused4){return'xiao li';}});// 新增：ASR面板可见性状态（持久化到localStorage）\nconst[asrPanelVisible,setAsrPanelVisible]=useState(()=>{try{const stored=localStorage.getItem('asrPanelVisible');return stored===null?false:stored==='true';}catch(_unused5){return false;}});const recorder=useRecorder();const wsRef=useRef(null);const intervalRef=useRef(null);const unmountedRef=useRef(false);// 后台数字人说话打断关键词列表\nconst interruptKeywords=['先说','你停一下','等等','暂停','打断'];// 统一切换管家函数\nconst activateButler=async id=>{if(!id)return;if(id===activeButlerId)return;try{const resp=await fetch('http://192.168.168.77:6010/api/switch_avatar',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({butler_id:id})});if(!resp.ok)throw new Error('后端错误，状态码: '+resp.status);const data=await resp.json();if(data.error)throw new Error(data.error);setActiveButlerId(id);console.log('[activateButler] 成功切换管家:',id);}catch(e){alert('切换管家失败: '+e.message);console.error('[activateButler] 切换失败:',e);}};// 通知后台停止数字人当前说话\nconst interruptSpeaking=async()=>{try{const resp=await fetch('http://192.168.168.77:6010/api/interrupt_speaking',{method:'POST',headers:{'Content-Type':'application/json'}});if(!resp.ok){console.warn('[interruptSpeaking] 后端停止接口调用失败，状态码:',resp.status);}else{console.log('[interruptSpeaking] 成功通知后台打断数字人说话');}}catch(e){console.error('[interruptSpeaking] 调用停止接口异常:',e);}};// 发送文本消息到服务器\nconst sendTextMessage=async text=>{if(!text.trim())return;try{const response=await fetch('http://192.168.168.77:6010/qwener',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({text})});if(!response.ok)throw new Error('网络响应失败，状态码: '+response.status);const data=await response.json();console.log('文本发送成功，服务器返回：',data);}catch(error){console.error('文本发送失败：',error);}};// 停止录音\nconst stopRecording=()=>{if(!isRecording){console.log('[stopRecording] 当前非录音状态，忽略重复调用');return;}if(wsRef.current){wsRef.current.onclose=null;wsRef.current.close();wsRef.current=null;}recorder.stop();if(intervalRef.current){clearInterval(intervalRef.current);intervalRef.current=null;}setIsRecording(false);};// 开始录音\nconst startRecording=()=>{if(isRecording){console.log('[startRecording] 已经在录音中，忽略重复调用');return;}setIsRecording(true);navigator.mediaDevices.getUserMedia({audio:true}).then(()=>{if(unmountedRef.current){stopRecording();return;}let params=[];if(lang)params.push(\"lang=\".concat(encodeURIComponent(lang)));if(speakerVerification)params.push('sv=1');if(wakeWordEnabled)params.push('wakeword=1');if(wakeWords){const cleanedWakeWords=wakeWords.split(',').map(w=>w.trim()).filter(w=>w.length>0).join(',');if(cleanedWakeWords.length>0){params.push(\"wakewords=\".concat(encodeURIComponent(cleanedWakeWords)));}}const queryStr=params.length>0?\"?\".concat(params.join('&')):'';const wsUrl=\"ws://192.168.168.77:6007/ws/transcribe\".concat(queryStr);console.log('[startRecording] 创建 WebSocket 连接',wsUrl);const ws=new WebSocket(wsUrl);ws.binaryType='arraybuffer';ws.onmessage=evt=>{try{const resJson=JSON.parse(evt.data);if(resJson.code===0){const recognizedText=resJson.data||'无识别结果';console.log('【原始识别文本】',recognizedText);const cleanedText=recognizedText.replace(/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g,'').trim();console.log('【清洗后文本】',cleanedText);setTranscription(prev=>prev?prev+'\\n'+recognizedText:recognizedText);if(cleanedText){// 检测打断关键词\nif(interruptKeywords.some(kw=>cleanedText.includes(kw))){console.log('【检测到打断关键词】',cleanedText);interruptSpeaking();stopRecording();}// 语音指令切换管家\nif(cleanedText.includes('切换小丽')){console.log('【匹配成功】切换到小丽');activateButler('xl');}else if(cleanedText.includes('切换法师')){activateButler('cs');}else if(cleanedText.includes('小贾')){activateButler('butler3');}else if(cleanedText.includes('星期天')){activateButler('butler4');}sendTextMessage(recognizedText);}}}catch(e){console.error('【解析失败】',e);}};ws.onopen=()=>{console.log('[WebSocket] 连接已打开');recorder.start().then(()=>{console.log('[Recorder] 录音开始');intervalRef.current=setInterval(()=>{if(ws.readyState===1){const audioBlob=recorder.getAudioBlob();if(audioBlob.size>0){console.log('[WebSocket] 发送音频数据，大小：',audioBlob.size);ws.send(audioBlob);recorder.clearBuffer();}}},500);}).catch(e=>{alert('启动录音失败: '+e.message);console.error('[Recorder] 启动失败',e);ws.close();setIsRecording(false);});};ws.onclose=event=>{console.log('[WebSocket] 连接关闭，代码:',event.code,'原因:',event.reason);setIsRecording(false);if(intervalRef.current){clearInterval(intervalRef.current);intervalRef.current=null;}wsRef.current=null;};ws.onerror=e=>{console.error('[WebSocket] 错误',e);alert('WebSocket 连接出错，请检查服务器状态和网络连接。');};wsRef.current=ws;}).catch(error=>{alert('请求麦克风权限失败: '+error.message);console.error('[startRecording] 获取麦克风权限失败',error);setIsRecording(false);});};// 组件卸载清理\nuseEffect(()=>{unmountedRef.current=false;return()=>{unmountedRef.current=true;stopRecording();};},[]);// 持久化设置\nuseEffect(()=>{try{localStorage.setItem('audioTranscriberLang',lang);}catch(_unused6){}},[lang]);useEffect(()=>{try{localStorage.setItem('audioTranscriberSpeakerVerification',speakerVerification.toString());}catch(_unused7){}},[speakerVerification]);useEffect(()=>{try{localStorage.setItem('wakeWordEnabled',wakeWordEnabled.toString());}catch(_unused8){}},[wakeWordEnabled]);useEffect(()=>{try{localStorage.setItem('wakeWords',wakeWords);}catch(_unused9){}},[wakeWords]);// 新增：持久化ASR面板可见性状态\nuseEffect(()=>{try{localStorage.setItem('asrPanelVisible',asrPanelVisible.toString());}catch(_unused0){}},[asrPanelVisible]);// 暴露所有状态和方法（包含新增的ASR面板状态）\nreturn/*#__PURE__*/_jsx(RecorderContext.Provider,{value:{isRecording,transcription,lang,speakerVerification,wakeWordEnabled,wakeWords,setLang,setSpeakerVerification,setWakeWordEnabled,setWakeWords,startRecording,stopRecording,setTranscription,activateButler,interruptSpeaking,// 新增：ASR面板可见性状态及更新方法\nasrPanelVisible,setAsrPanelVisible},children:children});}export function useRecorderContext(){const context=useContext(RecorderContext);if(!context){throw new Error('useRecorderContext 必须在 RecorderProvider 内使用');}return context;}","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","useContext","useRecorder","useButler","jsx","_jsx","RecorderContext","RecorderProvider","_ref","children","activeButlerId","setActiveButlerId","isRecording","setIsRecording","transcription","setTranscription","lang","setLang","localStorage","getItem","_unused","speakerVerification","setSpeakerVerification","_unused2","wakeWordEnabled","setWakeWordEnabled","stored","_unused3","wakeWords","setWakeWords","_unused4","asrPanelVisible","setAsrPanelVisible","_unused5","recorder","wsRef","intervalRef","unmountedRef","interruptKeywords","activateButler","id","resp","fetch","method","headers","body","JSON","stringify","butler_id","ok","Error","status","data","json","error","console","log","e","alert","message","interruptSpeaking","warn","sendTextMessage","text","trim","response","stopRecording","current","onclose","close","stop","clearInterval","startRecording","navigator","mediaDevices","getUserMedia","audio","then","params","push","concat","encodeURIComponent","cleanedWakeWords","split","map","w","filter","length","join","queryStr","wsUrl","ws","WebSocket","binaryType","onmessage","evt","resJson","parse","code","recognizedText","cleanedText","replace","prev","some","kw","includes","onopen","start","setInterval","readyState","audioBlob","getAudioBlob","size","send","clearBuffer","catch","event","reason","onerror","setItem","_unused6","toString","_unused7","_unused8","_unused9","_unused0","Provider","value","useRecorderContext","context"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/contexts/RecorderProvider.jsx"],"sourcesContent":["import React, { createContext, useState, useRef, useEffect, useContext } from 'react';\r\nimport { useRecorder } from '../hooks/useRecorder';\r\nimport { useButler } from '../components/ButlersContext';\r\n\r\nconst RecorderContext = createContext(null);\r\n\r\nexport function RecorderProvider({ children }) {\r\n  const { activeButlerId, setActiveButlerId } = useButler();\r\n\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcription, setTranscription] = useState('');\r\n  const [lang, setLang] = useState(() => {\r\n    try {\r\n      return localStorage.getItem('audioTranscriberLang') || 'auto';\r\n    } catch {\r\n      return 'auto';\r\n    }\r\n  });\r\n  const [speakerVerification, setSpeakerVerification] = useState(() => {\r\n    try {\r\n      return localStorage.getItem('audioTranscriberSpeakerVerification') === 'true';\r\n    } catch {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  const [wakeWordEnabled, setWakeWordEnabled] = useState(() => {\r\n    try {\r\n      const stored = localStorage.getItem('wakeWordEnabled');\r\n      return stored === null ? true : stored === 'true';\r\n    } catch {\r\n      return true;\r\n    }\r\n  });\r\n  const [wakeWords, setWakeWords] = useState(() => {\r\n    try {\r\n      const stored = localStorage.getItem('wakeWords');\r\n      return stored ? stored : 'xiao li';\r\n    } catch {\r\n      return 'xiao li';\r\n    }\r\n  });\r\n\r\n  // 新增：ASR面板可见性状态（持久化到localStorage）\r\n  const [asrPanelVisible, setAsrPanelVisible] = useState(() => {\r\n    try {\r\n      const stored = localStorage.getItem('asrPanelVisible');\r\n      return stored === null ? false : stored === 'true';\r\n    } catch {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  const recorder = useRecorder();\r\n\r\n  const wsRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n  const unmountedRef = useRef(false);\r\n\r\n  // 后台数字人说话打断关键词列表\r\n  const interruptKeywords = ['先说', '你停一下', '等等', '暂停', '打断'];\r\n\r\n  // 统一切换管家函数\r\n  const activateButler = async (id) => {\r\n    if (!id) return;\r\n    if (id === activeButlerId) return;\r\n\r\n    try {\r\n      const resp = await fetch('http://192.168.168.77:6010/api/switch_avatar', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ butler_id: id }),\r\n      });\r\n      if (!resp.ok) throw new Error('后端错误，状态码: ' + resp.status);\r\n      const data = await resp.json();\r\n      if (data.error) throw new Error(data.error);\r\n      setActiveButlerId(id);\r\n      console.log('[activateButler] 成功切换管家:', id);\r\n    } catch (e) {\r\n      alert('切换管家失败: ' + e.message);\r\n      console.error('[activateButler] 切换失败:', e);\r\n    }\r\n  };\r\n\r\n  // 通知后台停止数字人当前说话\r\n  const interruptSpeaking = async () => {\r\n    try {\r\n      const resp = await fetch('http://192.168.168.77:6010/api/interrupt_speaking', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      if (!resp.ok) {\r\n        console.warn('[interruptSpeaking] 后端停止接口调用失败，状态码:', resp.status);\r\n      } else {\r\n        console.log('[interruptSpeaking] 成功通知后台打断数字人说话');\r\n      }\r\n    } catch (e) {\r\n      console.error('[interruptSpeaking] 调用停止接口异常:', e);\r\n    }\r\n  };\r\n\r\n  // 发送文本消息到服务器\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n    try {\r\n      const response = await fetch('http://192.168.168.77:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n      if (!response.ok) throw new Error('网络响应失败，状态码: ' + response.status);\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 停止录音\r\n  const stopRecording = () => {\r\n    if (!isRecording) {\r\n      console.log('[stopRecording] 当前非录音状态，忽略重复调用');\r\n      return;\r\n    }\r\n    if (wsRef.current) {\r\n      wsRef.current.onclose = null;\r\n      wsRef.current.close();\r\n      wsRef.current = null;\r\n    }\r\n    recorder.stop();\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n    setIsRecording(false);\r\n  };\r\n\r\n  // 开始录音\r\n  const startRecording = () => {\r\n    if (isRecording) {\r\n      console.log('[startRecording] 已经在录音中，忽略重复调用');\r\n      return;\r\n    }\r\n\r\n    setIsRecording(true);\r\n\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(() => {\r\n        if (unmountedRef.current) {\r\n          stopRecording();\r\n          return;\r\n        }\r\n        let params = [];\r\n        if (lang) params.push(`lang=${encodeURIComponent(lang)}`);\r\n        if (speakerVerification) params.push('sv=1');\r\n        if (wakeWordEnabled) params.push('wakeword=1');\r\n        if (wakeWords) {\r\n          const cleanedWakeWords = wakeWords.split(',').map(w => w.trim()).filter(w => w.length > 0).join(',');\r\n          if (cleanedWakeWords.length > 0) {\r\n            params.push(`wakewords=${encodeURIComponent(cleanedWakeWords)}`);\r\n          }\r\n        }\r\n        const queryStr = params.length > 0 ? `?${params.join('&')}` : '';\r\n\r\n        const wsUrl = `ws://192.168.168.77:6007/ws/transcribe${queryStr}`;\r\n        console.log('[startRecording] 创建 WebSocket 连接', wsUrl);\r\n        const ws = new WebSocket(wsUrl);\r\n        ws.binaryType = 'arraybuffer';\r\n\r\n        ws.onmessage = (evt) => {\r\n          try {\r\n            const resJson = JSON.parse(evt.data);\r\n            if (resJson.code === 0) {\r\n              const recognizedText = resJson.data || '无识别结果';\r\n              console.log('【原始识别文本】', recognizedText);\r\n\r\n              const cleanedText = recognizedText.replace(/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g, '').trim();\r\n              console.log('【清洗后文本】', cleanedText);\r\n\r\n              setTranscription(prev => (prev ? prev + '\\n' + recognizedText : recognizedText));\r\n\r\n              if (cleanedText) {\r\n                // 检测打断关键词\r\n                if (interruptKeywords.some(kw => cleanedText.includes(kw))) {\r\n                  console.log('【检测到打断关键词】', cleanedText);\r\n                  interruptSpeaking();\r\n                  stopRecording();\r\n                }\r\n\r\n                // 语音指令切换管家\r\n                if (cleanedText.includes('切换小丽')) {\r\n                  console.log('【匹配成功】切换到小丽');\r\n                  activateButler('xl');\r\n                } else if (cleanedText.includes('切换法师')) {\r\n                  activateButler('cs');\r\n                } else if (cleanedText.includes('小贾')) {\r\n                  activateButler('butler3');\r\n                } else if (cleanedText.includes('星期天')) {\r\n                  activateButler('butler4');\r\n                }\r\n\r\n                sendTextMessage(recognizedText);\r\n              }\r\n            }\r\n          } catch (e) {\r\n            console.error('【解析失败】', e);\r\n          }\r\n        };\r\n\r\n        ws.onopen = () => {\r\n          console.log('[WebSocket] 连接已打开');\r\n          recorder.start()\r\n            .then(() => {\r\n              console.log('[Recorder] 录音开始');\r\n              intervalRef.current = setInterval(() => {\r\n                if (ws.readyState === 1) {\r\n                  const audioBlob = recorder.getAudioBlob();\r\n                  if (audioBlob.size > 0) {\r\n                    console.log('[WebSocket] 发送音频数据，大小：', audioBlob.size);\r\n                    ws.send(audioBlob);\r\n                    recorder.clearBuffer();\r\n                  }\r\n                }\r\n              }, 500);\r\n            })\r\n            .catch(e => {\r\n              alert('启动录音失败: ' + e.message);\r\n              console.error('[Recorder] 启动失败', e);\r\n              ws.close();\r\n              setIsRecording(false);\r\n            });\r\n        };\r\n\r\n        ws.onclose = (event) => {\r\n          console.log('[WebSocket] 连接关闭，代码:', event.code, '原因:', event.reason);\r\n          setIsRecording(false);\r\n          if (intervalRef.current) {\r\n            clearInterval(intervalRef.current);\r\n            intervalRef.current = null;\r\n          }\r\n          wsRef.current = null;\r\n        };\r\n\r\n        ws.onerror = (e) => {\r\n          console.error('[WebSocket] 错误', e);\r\n          alert('WebSocket 连接出错，请检查服务器状态和网络连接。');\r\n        };\r\n\r\n        wsRef.current = ws;\r\n      })\r\n      .catch(error => {\r\n        alert('请求麦克风权限失败: ' + error.message);\r\n        console.error('[startRecording] 获取麦克风权限失败', error);\r\n        setIsRecording(false);\r\n      });\r\n  };\r\n\r\n  // 组件卸载清理\r\n  useEffect(() => {\r\n    unmountedRef.current = false;\r\n    return () => {\r\n      unmountedRef.current = true;\r\n      stopRecording();\r\n    };\r\n  }, []);\r\n\r\n  // 持久化设置\r\n  useEffect(() => {\r\n    try { localStorage.setItem('audioTranscriberLang', lang); } catch {}\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    try { localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString()); } catch {}\r\n  }, [speakerVerification]);\r\n\r\n  useEffect(() => {\r\n    try { localStorage.setItem('wakeWordEnabled', wakeWordEnabled.toString()); } catch {}\r\n  }, [wakeWordEnabled]);\r\n\r\n  useEffect(() => {\r\n    try { localStorage.setItem('wakeWords', wakeWords); } catch {}\r\n  }, [wakeWords]);\r\n\r\n  // 新增：持久化ASR面板可见性状态\r\n  useEffect(() => {\r\n    try { localStorage.setItem('asrPanelVisible', asrPanelVisible.toString()); } catch {}\r\n  }, [asrPanelVisible]);\r\n\r\n  // 暴露所有状态和方法（包含新增的ASR面板状态）\r\n  return (\r\n    <RecorderContext.Provider value={{\r\n      isRecording,\r\n      transcription,\r\n      lang,\r\n      speakerVerification,\r\n      wakeWordEnabled,\r\n      wakeWords,\r\n      setLang,\r\n      setSpeakerVerification,\r\n      setWakeWordEnabled,\r\n      setWakeWords,\r\n      startRecording,\r\n      stopRecording,\r\n      setTranscription,\r\n      activateButler,\r\n      interruptSpeaking,\r\n      // 新增：ASR面板可见性状态及更新方法\r\n      asrPanelVisible,\r\n      setAsrPanelVisible\r\n    }}>\r\n      {children}\r\n    </RecorderContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useRecorderContext() {\r\n  const context = useContext(RecorderContext);\r\n  if (!context) {\r\n    throw new Error('useRecorderContext 必须在 RecorderProvider 内使用');\r\n  }\r\n  return context;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}