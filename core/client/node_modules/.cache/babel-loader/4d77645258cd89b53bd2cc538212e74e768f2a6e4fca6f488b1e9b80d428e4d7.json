{"ast":null,"code":"// ButlersContext.js\nimport React,{createContext,useState,useContext}from'react';// 你的管家数据\nimport{jsx as _jsx}from\"react/jsx-runtime\";const butlers=[{id:'cs',name:'管家禅师',type:'video',src:'/core/client/ai-butler/video/豆包禅师.mp4'},{id:'xl',name:'管家小粒',type:'video',src:'/core/client/ai-butler/video/小粒.mp4'},{id:'butler3',name:'管家小贾',type:'video',src:'/core/client/ai-butler/video/小贾.mp4'},{id:'butler4',name:'管家星期天',type:'video',src:'/core/client/ai-butler/video/星期天.mp4'}];// 创建Context，默认值为管家列表和第一个管家激活ID\nconst ButlerContext=/*#__PURE__*/createContext({activeButlerId:butlers[0].id,setActiveButlerId:()=>{},butlers});// Provider组件，包裹App根组件\nexport function ButlerProvider(_ref){let{children}=_ref;const[activeButlerId,setActiveButlerId]=useState(butlers[0].id);return/*#__PURE__*/_jsx(ButlerContext.Provider,{value:{activeButlerId,setActiveButlerId,butlers},children:children});}// 自定义hook方便使用\nexport function useButler(){return useContext(ButlerContext);}","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","butlers","id","name","type","src","ButlerContext","activeButlerId","setActiveButlerId","ButlerProvider","_ref","children","Provider","value","useButler"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/ButlersContext.js"],"sourcesContent":["// ButlersContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\n// 你的管家数据\r\nconst butlers = [\r\n  {\r\n    id: 'cs',\r\n    name: '管家禅师',\r\n    type: 'video',\r\n    src: '/core/client/ai-butler/video/豆包禅师.mp4',\r\n  },\r\n  {\r\n    id: 'xl',\r\n    name: '管家小粒',\r\n    type: 'video',\r\n    src: '/core/client/ai-butler/video/小粒.mp4',\r\n  },\r\n  {\r\n    id: 'butler3',\r\n    name: '管家小贾',\r\n    type: 'video',\r\n    src: '/core/client/ai-butler/video/小贾.mp4',\r\n  },\r\n  {\r\n    id: 'butler4',\r\n    name: '管家星期天',\r\n    type: 'video',\r\n    src: '/core/client/ai-butler/video/星期天.mp4',\r\n  },\r\n];\r\n\r\n// 创建Context，默认值为管家列表和第一个管家激活ID\r\nconst ButlerContext = createContext({\r\n  activeButlerId: butlers[0].id,\r\n  setActiveButlerId: () => {},\r\n  butlers,\r\n});\r\n\r\n// Provider组件，包裹App根组件\r\nexport function ButlerProvider({ children }) {\r\n  const [activeButlerId, setActiveButlerId] = useState(butlers[0].id);\r\n\r\n  return (\r\n    <ButlerContext.Provider value={{ activeButlerId, setActiveButlerId, butlers }}>\r\n      {children}\r\n    </ButlerContext.Provider>\r\n  );\r\n}\r\n\r\n// 自定义hook方便使用\r\nexport function useButler() {\r\n  return useContext(ButlerContext);\r\n}\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAElE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,OAAO,CAAG,CACd,CACEC,EAAE,CAAE,IAAI,CACRC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,OAAO,CACbC,GAAG,CAAE,uCACP,CAAC,CACD,CACEH,EAAE,CAAE,IAAI,CACRC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,OAAO,CACbC,GAAG,CAAE,qCACP,CAAC,CACD,CACEH,EAAE,CAAE,SAAS,CACbC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,OAAO,CACbC,GAAG,CAAE,qCACP,CAAC,CACD,CACEH,EAAE,CAAE,SAAS,CACbC,IAAI,CAAE,OAAO,CACbC,IAAI,CAAE,OAAO,CACbC,GAAG,CAAE,sCACP,CAAC,CACF,CAED;AACA,KAAM,CAAAC,aAAa,cAAGV,aAAa,CAAC,CAClCW,cAAc,CAAEN,OAAO,CAAC,CAAC,CAAC,CAACC,EAAE,CAC7BM,iBAAiB,CAAEA,CAAA,GAAM,CAAC,CAAC,CAC3BP,OACF,CAAC,CAAC,CAEF;AACA,MAAO,SAAS,CAAAQ,cAAcA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACH,cAAc,CAAEC,iBAAiB,CAAC,CAAGX,QAAQ,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC,CAEnE,mBACEF,IAAA,CAACM,aAAa,CAACM,QAAQ,EAACC,KAAK,CAAE,CAAEN,cAAc,CAAEC,iBAAiB,CAAEP,OAAQ,CAAE,CAAAU,QAAA,CAC3EA,QAAQ,CACa,CAAC,CAE7B,CAEA;AACA,MAAO,SAAS,CAAAG,SAASA,CAAA,CAAG,CAC1B,MAAO,CAAAhB,UAAU,CAACQ,aAAa,CAAC,CAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}