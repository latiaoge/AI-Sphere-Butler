{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\AudioTranscriber.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AudioTranscriber() {\n  _s();\n  // 从全局录音上下文中取状态和操作\n  const {\n    isRecording,\n    transcription,\n    lang,\n    speakerVerification,\n    wakeWordEnabled,\n    wakeWords,\n    setLang,\n    setSpeakerVerification,\n    setWakeWordEnabled,\n    setWakeWords,\n    startRecording,\n    stopRecording,\n    setTranscription\n  } = useRecorderContext();\n\n  // 新增：控制面板显示/隐藏状态\n  const [panelVisible, setPanelVisible] = useState(false);\n  const doubleClickTimeoutRef = useRef(null);\n\n  // 拖拽相关引用\n  const micButtonRef = useRef(null);\n  const wrapperRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const offsetXRef = useRef(0);\n  const offsetYRef = useRef(0);\n\n  // localStorage 保存位置的 key\n  const storageKey = 'audioTranscriberMicButtonPosition';\n  const panelStateKey = 'audioTranscriberPanelState';\n\n  // 新增声纹识别录音状态和上传状态\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\n  const speakerRecorderRef = useRef(null);\n  const speakerAudioChunksRef = useRef([]);\n\n  // 发送文本消息到 LLM 服务\n  const sendTextMessage = async text => {\n    if (!text.trim()) return;\n    try {\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('网络响应失败，状态码: ' + response.status);\n      }\n      const data = await response.json();\n      console.log('文本发送成功，服务器返回：', data);\n    } catch (error) {\n      console.error('文本发送失败：', error);\n    }\n  };\n\n  // 组件卸载清理\n  useEffect(() => {\n    return () => {\n      stopRecording();\n      stopSpeakerRecording();\n      if (doubleClickTimeoutRef.current) {\n        clearTimeout(doubleClickTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // 监听语言和声纹识别开关变化存localStorage\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberLang', lang);\n    } catch {}\n  }, [lang]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString());\n    } catch {}\n  }, [speakerVerification]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('wakeWordEnabled', wakeWordEnabled.toString());\n    } catch {}\n  }, [wakeWordEnabled]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('wakeWords', wakeWords);\n    } catch {}\n  }, [wakeWords]);\n\n  // 从localStorage加载面板状态\n  useEffect(() => {\n    try {\n      const savedState = localStorage.getItem(panelStateKey);\n      if (savedState) {\n        setPanelVisible(JSON.parse(savedState));\n      }\n    } catch (e) {\n      console.warn('加载面板状态失败', e);\n    }\n  }, []);\n\n  // 保存面板状态到localStorage\n  useEffect(() => {\n    try {\n      localStorage.setItem(panelStateKey, JSON.stringify(panelVisible));\n    } catch (e) {\n      console.warn('保存面板状态失败', e);\n    }\n  }, [panelVisible]);\n\n  // 录制声纹相关函数\n  function startSpeakerRecording() {\n    if (isSpeakerRecording) return;\n    setSpeakerUploadStatus('请求麦克风权限...');\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      setSpeakerUploadStatus('开始录音2秒...');\n      speakerAudioChunksRef.current = [];\n      let mediaRecorder;\n      try {\n        mediaRecorder = new MediaRecorder(stream, {\n          mimeType: 'audio/wav'\n        });\n      } catch (e) {\n        mediaRecorder = new MediaRecorder(stream);\n      }\n      speakerRecorderRef.current = mediaRecorder;\n      mediaRecorder.ondataavailable = event => {\n        if (event.data && event.data.size > 0) {\n          speakerAudioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = async () => {\n        setSpeakerUploadStatus('录音结束，准备上传...');\n        const blob = new Blob(speakerAudioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        try {\n          const formData = new FormData();\n          formData.append('file', blob, 'speaker.wav');\n          const uploadUrl = 'http://192.168.168.77:6007/api/uploadSpeaker';\n          const res = await fetch(uploadUrl, {\n            method: 'POST',\n            body: formData\n          });\n          if (!res.ok) throw new Error(`上传失败，状态码: ${res.status}`);\n          const result = await res.json();\n          setSpeakerUploadStatus('上传成功');\n          console.log('上传成功，服务器返回：', result);\n        } catch (err) {\n          setSpeakerUploadStatus('上传失败: ' + err.message);\n          console.error('上传失败', err);\n        }\n        stream.getTracks().forEach(track => track.stop());\n        setTimeout(() => setSpeakerUploadStatus(''), 3000);\n        setIsSpeakerRecording(false);\n      };\n      mediaRecorder.start();\n      setIsSpeakerRecording(true);\n      setTimeout(() => {\n        if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\n          speakerRecorderRef.current.stop();\n        }\n      }, 2000);\n    }).catch(err => {\n      setSpeakerUploadStatus('获取麦克风权限失败: ' + err.message);\n      console.error('获取麦克风权限失败', err);\n    });\n  }\n  function stopSpeakerRecording() {\n    if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\n      speakerRecorderRef.current.stop();\n      setIsSpeakerRecording(false);\n    }\n  }\n\n  // 拖拽逻辑\n  useEffect(() => {\n    if (!micButtonRef.current || !wrapperRef.current) return;\n    const button = micButtonRef.current;\n    const wrapper = wrapperRef.current;\n\n    // 读取存储位置，默认左上角26/26px\n    const savedPosStr = localStorage.getItem(storageKey);\n    let left = 26;\n    let top = 26;\n    if (savedPosStr) {\n      try {\n        const pos = JSON.parse(savedPosStr);\n        if (typeof pos.left === 'number' && typeof pos.top === 'number' && pos.left >= 0 && pos.top >= 0) {\n          left = pos.left;\n          top = pos.top;\n        }\n      } catch {}\n    }\n    button.style.position = 'absolute';\n    button.style.left = `${left}px`;\n    button.style.top = `${top}px`;\n    button.style.zIndex = '10000';\n    button.style.cursor = 'grab';\n    isDraggingRef.current = false;\n    offsetXRef.current = 0;\n    offsetYRef.current = 0;\n\n    // 鼠标事件\n    const onMouseDown = e => {\n      if (e.button !== 0) return;\n      isDraggingRef.current = true;\n      // 计算相对wrapper的偏移\n      const wrapperRect = wrapper.getBoundingClientRect();\n      offsetXRef.current = e.clientX - wrapperRect.left - button.offsetLeft;\n      offsetYRef.current = e.clientY - wrapperRect.top - button.offsetTop;\n      button.style.cursor = 'grabbing';\n      e.preventDefault();\n    };\n    const onMouseMove = e => {\n      if (!isDraggingRef.current) return;\n      const wrapperRect = wrapper.getBoundingClientRect();\n      let newLeft = e.clientX - wrapperRect.left - offsetXRef.current;\n      let newTop = e.clientY - wrapperRect.top - offsetYRef.current;\n\n      // 限制范围在可视区域内\n      newLeft = Math.min(Math.max(0, newLeft), window.innerWidth - button.offsetWidth);\n      newTop = Math.min(Math.max(0, newTop), window.innerHeight - button.offsetHeight);\n      button.style.left = `${newLeft}px`;\n      button.style.top = `${newTop}px`;\n    };\n    const onMouseUp = () => {\n      if (!isDraggingRef.current) return;\n      isDraggingRef.current = false;\n      button.style.cursor = 'grab';\n      localStorage.setItem(storageKey, JSON.stringify({\n        left: button.offsetLeft,\n        top: button.offsetTop\n      }));\n    };\n\n    // 触摸事件\n    const onTouchStart = e => {\n      if (e.touches.length === 0) return;\n      isDraggingRef.current = true;\n      const wrapperRect = wrapper.getBoundingClientRect();\n      const touch = e.touches[0];\n      offsetXRef.current = touch.clientX - wrapperRect.left - button.offsetLeft;\n      offsetYRef.current = touch.clientY - wrapperRect.top - button.offsetTop;\n      button.style.cursor = 'grabbing';\n    };\n    const onTouchMove = e => {\n      if (!isDraggingRef.current || e.touches.length === 0) return;\n      const wrapperRect = wrapper.getBoundingClientRect();\n      const touch = e.touches[0];\n      let newLeft = touch.clientX - wrapperRect.left - offsetXRef.current;\n      let newTop = touch.clientY - wrapperRect.top - offsetYRef.current;\n      newLeft = Math.min(Math.max(0, newLeft), window.innerWidth - button.offsetWidth);\n      newTop = Math.min(Math.max(0, newTop), window.innerHeight - button.offsetHeight);\n      button.style.left = `${newLeft}px`;\n      button.style.top = `${newTop}px`;\n      e.preventDefault();\n    };\n    const onTouchEnd = () => {\n      if (!isDraggingRef.current) return;\n      isDraggingRef.current = false;\n      button.style.cursor = 'grab';\n      localStorage.setItem(storageKey, JSON.stringify({\n        left: button.offsetLeft,\n        top: button.offsetTop\n      }));\n    };\n    button.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    button.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    document.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onTouchEnd);\n\n    // 清理事件监听\n    return () => {\n      button.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      button.removeEventListener('touchstart', onTouchStart);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    };\n  }, []);\n\n  // 双击事件处理 - 切换面板显示/隐藏\n  const handleDoubleClick = () => {\n    setPanelVisible(!panelVisible);\n  };\n\n  // 单击事件处理 - 开始/停止录音\n  const handleSingleClick = () => {\n    if (isRecording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n\n  // 区分单击和双击事件\n  const handleClick = e => {\n    e.preventDefault();\n    if (doubleClickTimeoutRef.current) {\n      // 双击事件\n      clearTimeout(doubleClickTimeoutRef.current);\n      doubleClickTimeoutRef.current = null;\n      handleDoubleClick();\n    } else {\n      // 单击事件，等待确认是否会成为双击\n      doubleClickTimeoutRef.current = setTimeout(() => {\n        handleSingleClick();\n        doubleClickTimeoutRef.current = null;\n      }, 300); // 300ms内再次点击视为双击\n    }\n  };\n\n  // 声纹录制波纹效果\n  const [ripples, setRipples] = useState([]);\n  const rippleCountRef = useRef(0);\n  const speakerButtonRef = useRef(null);\n  const handleSpeakerRecordClick = event => {\n    if (isRecording || isSpeakerRecording) return;\n    createRipple(event);\n    startSpeakerRecording();\n  };\n  const createRipple = event => {\n    if (!speakerButtonRef.current) return;\n    const rect = speakerButtonRef.current.getBoundingClientRect();\n    const size = Math.max(rect.width, rect.height);\n    const x = event.clientX - rect.left - size / 2;\n    const y = event.clientY - rect.top - size / 2;\n    const newRipple = {\n      key: rippleCountRef.current,\n      size,\n      x,\n      y\n    };\n    rippleCountRef.current += 1;\n    setRipples(oldRipples => [...oldRipples, newRipple]);\n    setTimeout(() => {\n      setRipples(oldRipples => oldRipples.filter(r => r.key !== newRipple.key));\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* 麦克风按钮及容器样式 */\n        #mic-button-wrapper {\n          position: fixed; /* 改为fixed使在所有页面可见 */\n          z-index: 10000;\n          user-select: none;\n          pointer-events: auto;\n          overflow: visible;\n        }\n\n        #listening-text {\n          font-size: 12px;\n          color: rgba(128, 128, 128, 0.7);\n          user-select: none;\n          pointer-events: none;\n          font-weight: 500;\n          opacity: 0;\n          transition: opacity 0.3s ease;\n          height: 16px;\n          line-height: 16px;\n        }\n        #listening-text.visible {\n          opacity: 1;\n        }\n\n        #mic-button {\n          background: none;\n          border: none;\n          padding: 0;\n          outline: none;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          filter: none;\n          transition: filter 0.3s ease;\n\n          width: 68px;\n          height: 68px;\n          cursor: grab;\n          position: absolute;\n        }\n        #mic-button.recording {\n          filter: drop-shadow(0 0 5px red);\n        }\n        #mic-button img {\n          width: 48px;\n          height: 48px;\n          user-select: none;\n          pointer-events: none;\n          -webkit-user-drag: none;\n        }\n\n        /* 面板容器样式 */\n        #audio-panel-container {\n          transition: all 0.3s ease;\n          max-width: 700px;\n          width: 100%;\n          background-color: rgba(0, 0, 0, 0.7);\n          backdrop-filter: blur(10px);\n          -webkit-backdrop-filter: blur(10px);\n          border-radius: 8px;\n          padding: 15px;\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n          overflow: hidden;\n        }\n        #audio-panel-container.hidden {\n          display: none;\n        }\n\n        /* 语言和声纹识别区域样式 */\n        #controls-container {\n          margin: 20px auto 12px auto;\n          font-family: Arial, sans-serif;\n          color: white;\n          display: flex;\n          align-items: center;\n          gap: 20px;\n          user-select: none;\n          flex-wrap: wrap;\n        }\n        #controls-container label {\n          font-size: 14px;\n          user-select: none;\n          display: flex;\n          align-items: center;\n          gap: 6px;\n        }\n        #langInput, #wakeWordsInput {\n          padding: 6px;\n          font-size: 12px;\n          width: 140px;\n          background-color: #333;\n          border: 1px solid #666;\n          border-radius: 3px;\n          color: white;\n          user-select: text;\n        }\n        #speakerVerificationLabel {\n          font-size: 14px;\n        }\n        #wakeWordToggleLabel {\n          font-size: 14px;\n          display: flex;\n          align-items: center;\n          gap: 6px;\n        }\n\n        /* 纯 CSS 玻璃态录制声纹按钮 */\n        #speaker-record-button {\n          position: relative;\n          overflow: hidden;\n          background: rgba(255, 255, 255, 0.1);\n          border-radius: 16px;\n          border: 1px solid rgba(255, 255, 255, 0.3);\n          color: white;\n          padding: 3px 10px;\n          font-size: 13px;\n          font-weight: 600;\n          cursor: pointer;\n          user-select: none;\n          box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n          backdrop-filter: blur(10px);\n          -webkit-backdrop-filter: blur(12px);\n          WebkitBackdropFilter: 'blur(10px)',\n          transition: all 0.3s ease;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          outline: none;\n          border-image: none;\n        }\n        #speaker-record-button:hover:not(:disabled) {\n          background: rgba(255, 255, 255, 0.2);\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\n          transform: scale(1.05);\n          filter: brightness(1.1);\n        }\n        #speaker-record-button:disabled {\n          opacity: 0.4;\n          cursor: not-allowed;\n          box-shadow: none;\n          background: rgba(255, 255, 255, 0.05);\n          filter: none;\n          transform: none;\n        }\n\n        /* 额外光泽层 */\n        #speaker-record-button::before {\n          content: '';\n          position: absolute;\n          top: -100%;\n          left: -100%;\n          width: 100%;\n          height: 100%;\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\n          pointer-events: none;\n          filter: blur(10px);\n          opacity: 0.6;\n          transition: opacity 0.3s ease;\n          border-radius: inherit;\n          z-index: 0;\n        }\n\n        /* 保留波纹效果的样式 */\n        .ripple {\n          position: absolute;\n          border-radius: 150%;\n          background: rgba(91, 155, 255, 0.7);\n          animation: rippleEffect 1s ease-out;\n          pointer-events: none;\n          transform: scale(0);\n          opacity: 0.75;\n          z-index: 1;\n        }\n\n        @keyframes rippleEffect {\n          to {\n            transform: scale(4);\n            opacity: 0;\n          }\n        }\n\n        /* 转录结果区域 */\n        #transcriptionResult {\n          white-space: pre-wrap;\n          background-color: transparent;\n          padding: 10px;\n          border: 1px solid transparent;\n          border-radius: 5px;\n          min-height: 150px;\n          font-family: 'monospace';\n          font-size: 14px;\n          overflow-y: 'auto';\n          max-height: 300px;\n          user-select: 'text';\n          color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)';\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mic-button-wrapper\",\n      ref: wrapperRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"listening-text\",\n        className: isRecording ? 'visible' : '',\n        \"aria-live\": \"polite\",\n        role: \"status\",\n        children: \"\\u8046\\u542C\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"mic-button\",\n        ref: micButtonRef,\n        className: isRecording ? 'recording' : '',\n        onClick: handleClick,\n        onDoubleClick: e => e.preventDefault() // 防止默认双击行为\n        ,\n        \"aria-label\": isRecording ? '停止录音' : '开始录音',\n        title: isRecording ? '点击停止录音，双击隐藏面板' : '点击开始录音，双击显示面板',\n        type: \"button\",\n        disabled: isSpeakerRecording,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/core/client/ai-butler/image/mic-icon.png\",\n          alt: \"\\u9EA6\\u514B\\u98CE\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"audio-panel-container\",\n        className: panelVisible ? '' : 'hidden',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"controls-container\",\n          \"aria-label\": \"\\u8BED\\u97F3\\u8BC6\\u522B\\u8BBE\\u7F6E\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"langInput\",\n            children: \"\\u8BED\\u8A00\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"langInput\",\n            type: \"text\",\n            value: lang,\n            onChange: e => setLang(e.target.value),\n            disabled: isRecording || isSpeakerRecording,\n            placeholder: \"auto\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"speakerVerificationLabel\",\n            htmlFor: \"speakerVerificationCheckbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"speakerVerificationCheckbox\",\n              type: \"checkbox\",\n              checked: speakerVerification,\n              disabled: isRecording || isSpeakerRecording,\n              onChange: e => setSpeakerVerification(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this), \"\\u58F0\\u7EB9\\u8BC6\\u522B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"wakeWordToggleLabel\",\n            htmlFor: \"wakeWordToggleCheckbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"wakeWordToggleCheckbox\",\n              type: \"checkbox\",\n              checked: wakeWordEnabled,\n              disabled: isRecording || isSpeakerRecording,\n              onChange: e => setWakeWordEnabled(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this), \"\\u8BED\\u97F3\\u5524\\u9192\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"wakeWordsInput\",\n            style: {\n              flexGrow: 1\n            },\n            children: [\"\\u5524\\u9192\\u8BCD\\uFF08\\u62FC\\u97F3\\uFF0C\\u591A\\u4E2A\\u7528\\u9017\\u53F7\\u5206\\u9694\\uFF09\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"wakeWordsInput\",\n              type: \"text\",\n              value: wakeWords,\n              onChange: e => setWakeWords(e.target.value),\n              disabled: isRecording || isSpeakerRecording || !wakeWordEnabled,\n              placeholder: \"\\u5982\\uFF1Azhan qi lai, ni hao xiao qian\",\n              autoComplete: \"off\",\n              style: {\n                marginLeft: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"speaker-record-button\",\n            ref: speakerButtonRef,\n            onClick: handleSpeakerRecordClick,\n            disabled: isRecording || isSpeakerRecording,\n            type: \"button\",\n            \"aria-live\": \"polite\",\n            \"aria-label\": \"\\u5F55\\u5236\\u58F0\\u7EB9\",\n            title: \"\\u5F55\\u5236\\u7EA62\\u79D2\\u58F0\\u97F3\\u7528\\u4E8E\\u58F0\\u7EB9\\u8BC6\\u522B\\uFF0C\\u5F55\\u5236\\u5B8C\\u6210\\u81EA\\u52A8\\u4E0A\\u4F20\",\n            children: [\"\\u5F55\\u5236\\u58F0\\u7EB9 (2\\u79D2)\", ripples.map(({\n              key,\n              size,\n              x,\n              y\n            }) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ripple\",\n              style: {\n                width: size,\n                height: size,\n                top: y,\n                left: x\n              }\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this), speakerUploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"speaker-record-status\",\n          role: \"alert\",\n          \"aria-live\": \"polite\",\n          \"aria-atomic\": \"true\",\n          style: {\n            margin: '4px 0 0 0'\n          },\n          children: speakerUploadStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"transcriptionResult\",\n          children: transcription || '识别文字展示区...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioTranscriber, \"MUy1A98mMaITu/XnEYku1XLJRWQ=\", false, function () {\n  return [useRecorderContext];\n});\n_c = AudioTranscriber;\nvar _c;\n$RefreshReg$(_c, \"AudioTranscriber\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useRecorderContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioTranscriber","_s","isRecording","transcription","lang","speakerVerification","wakeWordEnabled","wakeWords","setLang","setSpeakerVerification","setWakeWordEnabled","setWakeWords","startRecording","stopRecording","setTranscription","panelVisible","setPanelVisible","doubleClickTimeoutRef","micButtonRef","wrapperRef","isDraggingRef","offsetXRef","offsetYRef","storageKey","panelStateKey","isSpeakerRecording","setIsSpeakerRecording","speakerUploadStatus","setSpeakerUploadStatus","speakerRecorderRef","speakerAudioChunksRef","sendTextMessage","text","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","stopSpeakerRecording","current","clearTimeout","localStorage","setItem","toString","savedState","getItem","parse","e","warn","startSpeakerRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","mimeType","ondataavailable","event","size","push","onstop","blob","Blob","type","formData","FormData","append","uploadUrl","res","result","err","message","getTracks","forEach","track","stop","setTimeout","start","state","catch","button","wrapper","savedPosStr","left","top","pos","style","position","zIndex","cursor","onMouseDown","wrapperRect","getBoundingClientRect","clientX","offsetLeft","clientY","offsetTop","preventDefault","onMouseMove","newLeft","newTop","Math","min","max","window","innerWidth","offsetWidth","innerHeight","offsetHeight","onMouseUp","onTouchStart","touches","length","touch","onTouchMove","onTouchEnd","addEventListener","document","passive","removeEventListener","handleDoubleClick","handleSingleClick","handleClick","ripples","setRipples","rippleCountRef","speakerButtonRef","handleSpeakerRecordClick","createRipple","rect","width","height","x","y","newRipple","key","oldRipples","filter","r","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","className","role","onClick","onDoubleClick","title","disabled","src","alt","draggable","htmlFor","value","onChange","target","placeholder","autoComplete","checked","flexGrow","marginLeft","map","margin","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\r\n\r\nexport default function AudioTranscriber() {\r\n  // 从全局录音上下文中取状态和操作\r\n  const {\r\n    isRecording,\r\n    transcription,\r\n    lang,\r\n    speakerVerification,\r\n    wakeWordEnabled,\r\n    wakeWords,\r\n    setLang,\r\n    setSpeakerVerification,\r\n    setWakeWordEnabled,\r\n    setWakeWords,\r\n    startRecording,\r\n    stopRecording,\r\n    setTranscription,\r\n  } = useRecorderContext();\r\n\r\n  // 新增：控制面板显示/隐藏状态\r\n  const [panelVisible, setPanelVisible] = useState(false);\r\n  const doubleClickTimeoutRef = useRef(null);\r\n\r\n  // 拖拽相关引用\r\n  const micButtonRef = useRef(null);\r\n  const wrapperRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  // localStorage 保存位置的 key\r\n  const storageKey = 'audioTranscriberMicButtonPosition';\r\n  const panelStateKey = 'audioTranscriberPanelState';\r\n\r\n  // 新增声纹识别录音状态和上传状态\r\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\r\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\r\n  const speakerRecorderRef = useRef(null);\r\n  const speakerAudioChunksRef = useRef([]);\r\n\r\n  // 发送文本消息到 LLM 服务\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n    try {\r\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 组件卸载清理\r\n  useEffect(() => {\r\n    return () => {\r\n      stopRecording();\r\n      stopSpeakerRecording();\r\n      if (doubleClickTimeoutRef.current) {\r\n        clearTimeout(doubleClickTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 监听语言和声纹识别开关变化存localStorage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberLang', lang);\r\n    } catch {}\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString());\r\n    } catch {}\r\n  }, [speakerVerification]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWordEnabled', wakeWordEnabled.toString());\r\n    } catch {}\r\n  }, [wakeWordEnabled]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWords', wakeWords);\r\n    } catch {}\r\n  }, [wakeWords]);\r\n\r\n  // 从localStorage加载面板状态\r\n  useEffect(() => {\r\n    try {\r\n      const savedState = localStorage.getItem(panelStateKey);\r\n      if (savedState) {\r\n        setPanelVisible(JSON.parse(savedState));\r\n      }\r\n    } catch (e) {\r\n      console.warn('加载面板状态失败', e);\r\n    }\r\n  }, []);\r\n\r\n  // 保存面板状态到localStorage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(panelStateKey, JSON.stringify(panelVisible));\r\n    } catch (e) {\r\n      console.warn('保存面板状态失败', e);\r\n    }\r\n  }, [panelVisible]);\r\n\r\n  // 录制声纹相关函数\r\n  function startSpeakerRecording() {\r\n    if (isSpeakerRecording) return;\r\n    setSpeakerUploadStatus('请求麦克风权限...');\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then((stream) => {\r\n        setSpeakerUploadStatus('开始录音2秒...');\r\n        speakerAudioChunksRef.current = [];\r\n        let mediaRecorder;\r\n        try {\r\n          mediaRecorder = new MediaRecorder(stream, { mimeType: 'audio/wav' });\r\n        } catch (e) {\r\n          mediaRecorder = new MediaRecorder(stream);\r\n        }\r\n        speakerRecorderRef.current = mediaRecorder;\r\n        mediaRecorder.ondataavailable = (event) => {\r\n          if (event.data && event.data.size > 0) {\r\n            speakerAudioChunksRef.current.push(event.data);\r\n          }\r\n        };\r\n        mediaRecorder.onstop = async () => {\r\n          setSpeakerUploadStatus('录音结束，准备上传...');\r\n          const blob = new Blob(speakerAudioChunksRef.current, { type: 'audio/wav' });\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('file', blob, 'speaker.wav');\r\n            const uploadUrl = 'http://192.168.168.77:6007/api/uploadSpeaker';\r\n            const res = await fetch(uploadUrl, {\r\n              method: 'POST',\r\n              body: formData,\r\n            });\r\n            if (!res.ok) throw new Error(`上传失败，状态码: ${res.status}`);\r\n            const result = await res.json();\r\n            setSpeakerUploadStatus('上传成功');\r\n            console.log('上传成功，服务器返回：', result);\r\n          } catch (err) {\r\n            setSpeakerUploadStatus('上传失败: ' + err.message);\r\n            console.error('上传失败', err);\r\n          }\r\n          stream.getTracks().forEach(track => track.stop());\r\n          setTimeout(() => setSpeakerUploadStatus(''), 3000);\r\n          setIsSpeakerRecording(false);\r\n        };\r\n        mediaRecorder.start();\r\n        setIsSpeakerRecording(true);\r\n        setTimeout(() => {\r\n          if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\r\n            speakerRecorderRef.current.stop();\r\n          }\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        setSpeakerUploadStatus('获取麦克风权限失败: ' + err.message);\r\n        console.error('获取麦克风权限失败', err);\r\n      });\r\n  }\r\n  \r\n  function stopSpeakerRecording() {\r\n    if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\r\n      speakerRecorderRef.current.stop();\r\n      setIsSpeakerRecording(false);\r\n    }\r\n  }\r\n\r\n  // 拖拽逻辑\r\n  useEffect(() => {\r\n    if (!micButtonRef.current || !wrapperRef.current) return;\r\n    const button = micButtonRef.current;\r\n    const wrapper = wrapperRef.current;\r\n\r\n    // 读取存储位置，默认左上角26/26px\r\n    const savedPosStr = localStorage.getItem(storageKey);\r\n    let left = 26;\r\n    let top = 26;\r\n    if (savedPosStr) {\r\n      try {\r\n        const pos = JSON.parse(savedPosStr);\r\n        if (\r\n          typeof pos.left === 'number' &&\r\n          typeof pos.top === 'number' &&\r\n          pos.left >= 0 &&\r\n          pos.top >= 0\r\n        ) {\r\n          left = pos.left;\r\n          top = pos.top;\r\n        }\r\n      } catch {}\r\n    }\r\n\r\n    button.style.position = 'absolute';\r\n    button.style.left = `${left}px`;\r\n    button.style.top = `${top}px`;\r\n    button.style.zIndex = '10000';\r\n    button.style.cursor = 'grab';\r\n\r\n    isDraggingRef.current = false;\r\n    offsetXRef.current = 0;\r\n    offsetYRef.current = 0;\r\n\r\n    // 鼠标事件\r\n    const onMouseDown = (e) => {\r\n      if (e.button !== 0) return;\r\n      isDraggingRef.current = true;\r\n      // 计算相对wrapper的偏移\r\n      const wrapperRect = wrapper.getBoundingClientRect();\r\n      offsetXRef.current = e.clientX - wrapperRect.left - button.offsetLeft;\r\n      offsetYRef.current = e.clientY - wrapperRect.top - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n      e.preventDefault();\r\n    };\r\n    const onMouseMove = (e) => {\r\n      if (!isDraggingRef.current) return;\r\n      const wrapperRect = wrapper.getBoundingClientRect();\r\n      let newLeft = e.clientX - wrapperRect.left - offsetXRef.current;\r\n      let newTop = e.clientY - wrapperRect.top - offsetYRef.current;\r\n\r\n      // 限制范围在可视区域内\r\n      newLeft = Math.min(Math.max(0, newLeft), window.innerWidth - button.offsetWidth);\r\n      newTop = Math.min(Math.max(0, newTop), window.innerHeight - button.offsetHeight);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n    };\r\n    const onMouseUp = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      localStorage.setItem(\r\n        storageKey,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n    };\r\n\r\n    // 触摸事件\r\n    const onTouchStart = (e) => {\r\n      if (e.touches.length === 0) return;\r\n      isDraggingRef.current = true;\r\n      const wrapperRect = wrapper.getBoundingClientRect();\r\n      const touch = e.touches[0];\r\n      offsetXRef.current = touch.clientX - wrapperRect.left - button.offsetLeft;\r\n      offsetYRef.current = touch.clientY - wrapperRect.top - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n    };\r\n    const onTouchMove = (e) => {\r\n      if (!isDraggingRef.current || e.touches.length === 0) return;\r\n      const wrapperRect = wrapper.getBoundingClientRect();\r\n      const touch = e.touches[0];\r\n      let newLeft = touch.clientX - wrapperRect.left - offsetXRef.current;\r\n      let newTop = touch.clientY - wrapperRect.top - offsetYRef.current;\r\n\r\n      newLeft = Math.min(Math.max(0, newLeft), window.innerWidth - button.offsetWidth);\r\n      newTop = Math.min(Math.max(0, newTop), window.innerHeight - button.offsetHeight);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n\r\n      e.preventDefault();\r\n    };\r\n    const onTouchEnd = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      localStorage.setItem(\r\n        storageKey,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n    };\r\n\r\n    button.addEventListener('mousedown', onMouseDown);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    button.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    // 清理事件监听\r\n    return () => {\r\n      button.removeEventListener('mousedown', onMouseDown);\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      button.removeEventListener('touchstart', onTouchStart);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  // 双击事件处理 - 切换面板显示/隐藏\r\n  const handleDoubleClick = () => {\r\n    setPanelVisible(!panelVisible);\r\n  };\r\n\r\n  // 单击事件处理 - 开始/停止录音\r\n  const handleSingleClick = () => {\r\n    if (isRecording) {\r\n      stopRecording();\r\n    } else {\r\n      startRecording();\r\n    }\r\n  };\r\n\r\n  // 区分单击和双击事件\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    if (doubleClickTimeoutRef.current) {\r\n      // 双击事件\r\n      clearTimeout(doubleClickTimeoutRef.current);\r\n      doubleClickTimeoutRef.current = null;\r\n      handleDoubleClick();\r\n    } else {\r\n      // 单击事件，等待确认是否会成为双击\r\n      doubleClickTimeoutRef.current = setTimeout(() => {\r\n        handleSingleClick();\r\n        doubleClickTimeoutRef.current = null;\r\n      }, 300); // 300ms内再次点击视为双击\r\n    }\r\n  };\r\n\r\n  // 声纹录制波纹效果\r\n  const [ripples, setRipples] = useState([]);\r\n  const rippleCountRef = useRef(0);\r\n  const speakerButtonRef = useRef(null);\r\n\r\n  const handleSpeakerRecordClick = (event) => {\r\n    if (isRecording || isSpeakerRecording) return;\r\n    createRipple(event);\r\n    startSpeakerRecording();\r\n  };\r\n\r\n  const createRipple = (event) => {\r\n    if (!speakerButtonRef.current) return;\r\n    const rect = speakerButtonRef.current.getBoundingClientRect();\r\n    const size = Math.max(rect.width, rect.height);\r\n    const x = event.clientX - rect.left - size / 2;\r\n    const y = event.clientY - rect.top - size / 2;\r\n\r\n    const newRipple = {\r\n      key: rippleCountRef.current,\r\n      size,\r\n      x,\r\n      y,\r\n    };\r\n    rippleCountRef.current += 1;\r\n\r\n    setRipples((oldRipples) => [...oldRipples, newRipple]);\r\n\r\n    setTimeout(() => {\r\n      setRipples((oldRipples) => oldRipples.filter(r => r.key !== newRipple.key));\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        /* 麦克风按钮及容器样式 */\r\n        #mic-button-wrapper {\r\n          position: fixed; /* 改为fixed使在所有页面可见 */\r\n          z-index: 10000;\r\n          user-select: none;\r\n          pointer-events: auto;\r\n          overflow: visible;\r\n        }\r\n\r\n        #listening-text {\r\n          font-size: 12px;\r\n          color: rgba(128, 128, 128, 0.7);\r\n          user-select: none;\r\n          pointer-events: none;\r\n          font-weight: 500;\r\n          opacity: 0;\r\n          transition: opacity 0.3s ease;\r\n          height: 16px;\r\n          line-height: 16px;\r\n        }\r\n        #listening-text.visible {\r\n          opacity: 1;\r\n        }\r\n\r\n        #mic-button {\r\n          background: none;\r\n          border: none;\r\n          padding: 0;\r\n          outline: none;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          filter: none;\r\n          transition: filter 0.3s ease;\r\n\r\n          width: 68px;\r\n          height: 68px;\r\n          cursor: grab;\r\n          position: absolute;\r\n        }\r\n        #mic-button.recording {\r\n          filter: drop-shadow(0 0 5px red);\r\n        }\r\n        #mic-button img {\r\n          width: 48px;\r\n          height: 48px;\r\n          user-select: none;\r\n          pointer-events: none;\r\n          -webkit-user-drag: none;\r\n        }\r\n\r\n        /* 面板容器样式 */\r\n        #audio-panel-container {\r\n          transition: all 0.3s ease;\r\n          max-width: 700px;\r\n          width: 100%;\r\n          background-color: rgba(0, 0, 0, 0.7);\r\n          backdrop-filter: blur(10px);\r\n          -webkit-backdrop-filter: blur(10px);\r\n          border-radius: 8px;\r\n          padding: 15px;\r\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n          overflow: hidden;\r\n        }\r\n        #audio-panel-container.hidden {\r\n          display: none;\r\n        }\r\n\r\n        /* 语言和声纹识别区域样式 */\r\n        #controls-container {\r\n          margin: 20px auto 12px auto;\r\n          font-family: Arial, sans-serif;\r\n          color: white;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 20px;\r\n          user-select: none;\r\n          flex-wrap: wrap;\r\n        }\r\n        #controls-container label {\r\n          font-size: 14px;\r\n          user-select: none;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n        #langInput, #wakeWordsInput {\r\n          padding: 6px;\r\n          font-size: 12px;\r\n          width: 140px;\r\n          background-color: #333;\r\n          border: 1px solid #666;\r\n          border-radius: 3px;\r\n          color: white;\r\n          user-select: text;\r\n        }\r\n        #speakerVerificationLabel {\r\n          font-size: 14px;\r\n        }\r\n        #wakeWordToggleLabel {\r\n          font-size: 14px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n\r\n        /* 纯 CSS 玻璃态录制声纹按钮 */\r\n        #speaker-record-button {\r\n          position: relative;\r\n          overflow: hidden;\r\n          background: rgba(255, 255, 255, 0.1);\r\n          border-radius: 16px;\r\n          border: 1px solid rgba(255, 255, 255, 0.3);\r\n          color: white;\r\n          padding: 3px 10px;\r\n          font-size: 13px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          user-select: none;\r\n          box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\r\n          backdrop-filter: blur(10px);\r\n          -webkit-backdrop-filter: blur(12px);\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n          transition: all 0.3s ease;\r\n          display: inline-flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          outline: none;\r\n          border-image: none;\r\n        }\r\n        #speaker-record-button:hover:not(:disabled) {\r\n          background: rgba(255, 255, 255, 0.2);\r\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\r\n          transform: scale(1.05);\r\n          filter: brightness(1.1);\r\n        }\r\n        #speaker-record-button:disabled {\r\n          opacity: 0.4;\r\n          cursor: not-allowed;\r\n          box-shadow: none;\r\n          background: rgba(255, 255, 255, 0.05);\r\n          filter: none;\r\n          transform: none;\r\n        }\r\n\r\n        /* 额外光泽层 */\r\n        #speaker-record-button::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: -100%;\r\n          left: -100%;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\r\n          pointer-events: none;\r\n          filter: blur(10px);\r\n          opacity: 0.6;\r\n          transition: opacity 0.3s ease;\r\n          border-radius: inherit;\r\n          z-index: 0;\r\n        }\r\n\r\n        /* 保留波纹效果的样式 */\r\n        .ripple {\r\n          position: absolute;\r\n          border-radius: 150%;\r\n          background: rgba(91, 155, 255, 0.7);\r\n          animation: rippleEffect 1s ease-out;\r\n          pointer-events: none;\r\n          transform: scale(0);\r\n          opacity: 0.75;\r\n          z-index: 1;\r\n        }\r\n\r\n        @keyframes rippleEffect {\r\n          to {\r\n            transform: scale(4);\r\n            opacity: 0;\r\n          }\r\n        }\r\n\r\n        /* 转录结果区域 */\r\n        #transcriptionResult {\r\n          white-space: pre-wrap;\r\n          background-color: transparent;\r\n          padding: 10px;\r\n          border: 1px solid transparent;\r\n          border-radius: 5px;\r\n          min-height: 150px;\r\n          font-family: 'monospace';\r\n          font-size: 14px;\r\n          overflow-y: 'auto';\r\n          max-height: 300px;\r\n          user-select: 'text';\r\n          color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)';\r\n        }\r\n      `}</style>\r\n\r\n      {/* 麦克风按钮容器 */}\r\n      <div id=\"mic-button-wrapper\" ref={wrapperRef}>\r\n        <div\r\n          id=\"listening-text\"\r\n          className={isRecording ? 'visible' : ''}\r\n          aria-live=\"polite\"\r\n          role=\"status\"\r\n        >\r\n          聆听中...\r\n        </div>\r\n\r\n        <button\r\n          id=\"mic-button\"\r\n          ref={micButtonRef}\r\n          className={isRecording ? 'recording' : ''}\r\n          onClick={handleClick}\r\n          onDoubleClick={(e) => e.preventDefault()} // 防止默认双击行为\r\n          aria-label={isRecording ? '停止录音' : '开始录音'}\r\n          title={isRecording ? '点击停止录音，双击隐藏面板' : '点击开始录音，双击显示面板'}\r\n          type=\"button\"\r\n          disabled={isSpeakerRecording}\r\n        >\r\n          <img\r\n            src=\"/core/client/ai-butler/image/mic-icon.png\"\r\n            alt=\"麦克风\"\r\n            draggable={false}\r\n          />\r\n        </button>\r\n\r\n        {/* 面板内容 - 根据状态显示/隐藏 */}\r\n        <div \r\n          id=\"audio-panel-container\" \r\n          className={panelVisible ? '' : 'hidden'}\r\n        >\r\n          {/* 语言和声纹识别控制区域 */}\r\n          <div id=\"controls-container\" aria-label=\"语音识别设置\">\r\n            <label htmlFor=\"langInput\">语言：</label>\r\n            <input\r\n              id=\"langInput\"\r\n              type=\"text\"\r\n              value={lang}\r\n              onChange={(e) => setLang(e.target.value)}\r\n              disabled={isRecording || isSpeakerRecording}\r\n              placeholder=\"auto\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <label id=\"speakerVerificationLabel\" htmlFor=\"speakerVerificationCheckbox\">\r\n              <input\r\n                id=\"speakerVerificationCheckbox\"\r\n                type=\"checkbox\"\r\n                checked={speakerVerification}\r\n                disabled={isRecording || isSpeakerRecording}\r\n                onChange={(e) => setSpeakerVerification(e.target.checked)}\r\n              />\r\n              声纹识别\r\n            </label>\r\n            <label id=\"wakeWordToggleLabel\" htmlFor=\"wakeWordToggleCheckbox\">\r\n              <input\r\n                id=\"wakeWordToggleCheckbox\"\r\n                type=\"checkbox\"\r\n                checked={wakeWordEnabled}\r\n                disabled={isRecording || isSpeakerRecording}\r\n                onChange={(e) => setWakeWordEnabled(e.target.checked)}\r\n              />\r\n              语音唤醒\r\n            </label>\r\n            <label htmlFor=\"wakeWordsInput\" style={{ flexGrow: 1 }}>\r\n              唤醒词（拼音，多个用逗号分隔）：\r\n              <input\r\n                id=\"wakeWordsInput\"\r\n                type=\"text\"\r\n                value={wakeWords}\r\n                onChange={(e) => setWakeWords(e.target.value)}\r\n                disabled={isRecording || isSpeakerRecording || !wakeWordEnabled}\r\n                placeholder=\"如：zhan qi lai, ni hao xiao qian\"\r\n                autoComplete=\"off\"\r\n                style={{ marginLeft: 8 }}\r\n              />\r\n            </label>\r\n            <button\r\n              id=\"speaker-record-button\"\r\n              ref={speakerButtonRef}\r\n              onClick={handleSpeakerRecordClick}\r\n              disabled={isRecording || isSpeakerRecording}\r\n              type=\"button\"\r\n              aria-live=\"polite\"\r\n              aria-label=\"录制声纹\"\r\n              title=\"录制约2秒声音用于声纹识别，录制完成自动上传\"\r\n            >\r\n              录制声纹 (2秒)\r\n              {ripples.map(({ key, size, x, y }) => (\r\n                <span\r\n                  key={key}\r\n                  className=\"ripple\"\r\n                  style={{\r\n                    width: size,\r\n                    height: size,\r\n                    top: y,\r\n                    left: x,\r\n                  }}\r\n                />\r\n              ))}\r\n            </button>\r\n          </div>\r\n\r\n          {speakerUploadStatus && (\r\n            <div\r\n              id=\"speaker-record-status\"\r\n              role=\"alert\"\r\n              aria-live=\"polite\"\r\n              aria-atomic=\"true\"\r\n              style={{ margin: '4px 0 0 0' }}\r\n            >\r\n              {speakerUploadStatus}\r\n            </div>\r\n          )}\r\n\r\n          <div id=\"transcriptionResult\">\r\n            {transcription || '识别文字展示区...'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}