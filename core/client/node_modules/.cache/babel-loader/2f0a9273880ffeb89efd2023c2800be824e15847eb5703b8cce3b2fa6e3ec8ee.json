{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\SpeechRecognizer.jsx\",\n  _s = $RefreshSig$();\n// src/components/SpeechRecognizer.jsx\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SpeechRecognizer({\n  onSendText\n}) {\n  _s();\n  const [listening, setListening] = useState(false);\n  const [text, setText] = useState('');\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('请使用支持语音识别的 Chrome 浏览器');\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = 'zh-CN';\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.onstart = () => setListening(true);\n    recognition.onerror = e => {\n      console.error('语音识别错误', e);\n      setListening(false);\n    };\n    recognition.onend = () => {\n      setListening(false);\n      if (text.trim()) {\n        onSendText(text.trim());\n        setText('');\n      }\n    };\n    recognition.onresult = e => {\n      let interim = '';\n      for (let i = e.resultIndex; i < e.results.length; i++) {\n        const transcript = e.results[i][0].transcript;\n        if (e.results[i].isFinal) {\n          setText(prev => prev + transcript);\n        } else {\n          interim += transcript;\n        }\n      }\n    };\n    recognitionRef.current = recognition;\n    return () => {\n      recognition.stop();\n    };\n  }, [onSendText, text]);\n  function toggleListening() {\n    if (listening) recognitionRef.current.stop();else {\n      setText('');\n      recognitionRef.current.start();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleListening,\n      children: listening ? '停止识别' : '开始识别'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8,\n        padding: 8,\n        backgroundColor: '#fff',\n        borderRadius: 6,\n        border: '1px solid #ccc',\n        minHeight: 40,\n        fontSize: 14,\n        color: '#333'\n      },\n      children: text || /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"\\u8BC6\\u522B\\u7ED3\\u679C\\u663E\\u793A\\u4E8E\\u6B64\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechRecognizer, \"jhIS/YaBV8W0crp7cP3+dAgXYIo=\");\n_c = SpeechRecognizer;\nvar _c;\n$RefreshReg$(_c, \"SpeechRecognizer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SpeechRecognizer","onSendText","_s","listening","setListening","text","setText","recognitionRef","window","alert","recognition","webkitSpeechRecognition","lang","continuous","interimResults","onstart","onerror","e","console","error","onend","trim","onresult","interim","i","resultIndex","results","length","transcript","isFinal","prev","current","stop","toggleListening","start","style","marginTop","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","padding","backgroundColor","borderRadius","border","minHeight","fontSize","color","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/SpeechRecognizer.jsx"],"sourcesContent":["// src/components/SpeechRecognizer.jsx\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nexport default function SpeechRecognizer({ onSendText }) {\r\n  const [listening, setListening] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('请使用支持语音识别的 Chrome 浏览器');\r\n      return;\r\n    }\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.lang = 'zh-CN';\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n\r\n    recognition.onstart = () => setListening(true);\r\n    recognition.onerror = e => {\r\n      console.error('语音识别错误', e);\r\n      setListening(false);\r\n    };\r\n    recognition.onend = () => {\r\n      setListening(false);\r\n      if (text.trim()) {\r\n        onSendText(text.trim());\r\n        setText('');\r\n      }\r\n    };\r\n    recognition.onresult = e => {\r\n      let interim = '';\r\n      for (let i = e.resultIndex; i < e.results.length; i++) {\r\n        const transcript = e.results[i][0].transcript;\r\n        if (e.results[i].isFinal) {\r\n          setText(prev => prev + transcript);\r\n        } else {\r\n          interim += transcript;\r\n        }\r\n      }\r\n    };\r\n\r\n    recognitionRef.current = recognition;\r\n\r\n    return () => {\r\n      recognition.stop();\r\n    };\r\n  }, [onSendText, text]);\r\n\r\n  function toggleListening() {\r\n    if (listening) recognitionRef.current.stop();\r\n    else {\r\n      setText('');\r\n      recognitionRef.current.start();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: 20 }}>\r\n      <button onClick={toggleListening}>{listening ? '停止识别' : '开始识别'}</button>\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n          padding: 8,\r\n          backgroundColor: '#fff',\r\n          borderRadius: 6,\r\n          border: '1px solid #ccc',\r\n          minHeight: 40,\r\n          fontSize: 14,\r\n          color: '#333',\r\n        }}\r\n      >\r\n        {text || <i>识别结果显示于此</i>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}