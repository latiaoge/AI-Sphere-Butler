{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\WallpaperManager.jsx\",\n  _s = $RefreshSig$();\n// components/WallpaperManager.jsx\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const menuWallpapers = {\n  home: '/core/client/ai-butler/image/bg-home.jpeg',\n  // 这里仍留图片作为备用\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg'\n};\n\n// 视频文件路径（请替换成实际mp4路径）\nconst homeVideoSrc = '/core/client/ai-butler/video/bg-home.mp4';\nconst WallpaperManager = ({\n  selectedMenu,\n  showGlassTransition\n}) => {\n  _s();\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers.home); // 默认使用home壁纸\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // 如果是home菜单，不加载图片，显示视频\n    if (selectedMenu === 'home') {\n      setIsLoading(false);\n      setError(null);\n      return;\n    }\n\n    // 其他菜单，加载对应图片\n    const targetWallpaper = menuWallpapers[selectedMenu] || menuWallpapers.home;\n    setIsLoading(true);\n    setError(null);\n    const img = new Image();\n    img.onload = () => {\n      setCurrentWallpaper(targetWallpaper);\n      setIsLoading(false);\n    };\n    img.onerror = () => {\n      console.error('壁纸加载失败:', targetWallpaper);\n      // 尝试加载默认home壁纸\n      const homeImg = new Image();\n      homeImg.onload = () => {\n        setCurrentWallpaper(menuWallpapers.home);\n        setIsLoading(false);\n      };\n      homeImg.onerror = () => {\n        setError('默认壁纸也无法加载，请检查路径');\n        setIsLoading(false);\n      };\n      homeImg.src = menuWallpapers.home;\n    };\n    img.src = targetWallpaper;\n  }, [selectedMenu]);\n\n  // 样式：全屏铺满\n  const baseStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    zIndex: -1,\n    opacity: isLoading || error ? 0 : 1,\n    transition: 'opacity 0.5s ease-in-out',\n    pointerEvents: 'none'\n  };\n  if (selectedMenu === 'home') {\n    // 主页显示视频背景\n    return /*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      playsInline: true,\n      style: baseStyle,\n      src: homeVideoSrc,\n      \"aria-hidden\": \"true\"\n    }, \"home-video\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 其他菜单显示图片背景\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-wallpaper\",\n    style: {\n      ...baseStyle,\n      backgroundImage: `url(${currentWallpaper})`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    },\n    \"aria-hidden\": \"true\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(WallpaperManager, \"eCd7EqLS5I0HeUZZk5bZF0o2kws=\");\n_c = WallpaperManager;\nexport default WallpaperManager;\nvar _c;\n$RefreshReg$(_c, \"WallpaperManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","menuWallpapers","home","butler","car","homeassistant","ops","settings","homeVideoSrc","WallpaperManager","selectedMenu","showGlassTransition","_s","currentWallpaper","setCurrentWallpaper","isLoading","setIsLoading","error","setError","targetWallpaper","img","Image","onload","onerror","console","homeImg","src","baseStyle","position","top","left","width","height","zIndex","opacity","transition","pointerEvents","autoPlay","loop","muted","playsInline","style","fileName","_jsxFileName","lineNumber","columnNumber","className","backgroundImage","backgroundSize","backgroundPosition","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/WallpaperManager.jsx"],"sourcesContent":["// components/WallpaperManager.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport const menuWallpapers = {\r\n  home: '/core/client/ai-butler/image/bg-home.jpeg', // 这里仍留图片作为备用\r\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\r\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\r\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\r\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\r\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg',\r\n};\r\n\r\n// 视频文件路径（请替换成实际mp4路径）\r\nconst homeVideoSrc = '/core/client/ai-butler/video/bg-home.mp4';\r\n\r\nconst WallpaperManager = ({ selectedMenu, showGlassTransition }) => {\r\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers.home); // 默认使用home壁纸\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 如果是home菜单，不加载图片，显示视频\r\n    if (selectedMenu === 'home') {\r\n      setIsLoading(false);\r\n      setError(null);\r\n      return;\r\n    }\r\n\r\n    // 其他菜单，加载对应图片\r\n    const targetWallpaper = menuWallpapers[selectedMenu] || menuWallpapers.home;\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      setCurrentWallpaper(targetWallpaper);\r\n      setIsLoading(false);\r\n    };\r\n    img.onerror = () => {\r\n      console.error('壁纸加载失败:', targetWallpaper);\r\n      // 尝试加载默认home壁纸\r\n      const homeImg = new Image();\r\n      homeImg.onload = () => {\r\n        setCurrentWallpaper(menuWallpapers.home);\r\n        setIsLoading(false);\r\n      };\r\n      homeImg.onerror = () => {\r\n        setError('默认壁纸也无法加载，请检查路径');\r\n        setIsLoading(false);\r\n      };\r\n      homeImg.src = menuWallpapers.home;\r\n    };\r\n    img.src = targetWallpaper;\r\n  }, [selectedMenu]);\r\n\r\n  // 样式：全屏铺满\r\n  const baseStyle = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: -1,\r\n    opacity: isLoading || error ? 0 : 1,\r\n    transition: 'opacity 0.5s ease-in-out',\r\n    pointerEvents: 'none',\r\n  };\r\n\r\n  if (selectedMenu === 'home') {\r\n    // 主页显示视频背景\r\n    return (\r\n      <video\r\n        key=\"home-video\"\r\n        autoPlay\r\n        loop\r\n        muted\r\n        playsInline\r\n        style={baseStyle}\r\n        src={homeVideoSrc}\r\n        aria-hidden=\"true\"\r\n      />\r\n    );\r\n  }\r\n\r\n  // 其他菜单显示图片背景\r\n  return (\r\n    <div\r\n      className=\"app-wallpaper\"\r\n      style={{\r\n        ...baseStyle,\r\n        backgroundImage: `url(${currentWallpaper})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n      }}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default WallpaperManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}