{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\Clock.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 在 App 组件内部或外部定义 Clock 组件\nfunction Clock() {\n  _s();\n  const [now, setNow] = React.useState(new Date());\n  React.useEffect(() => {\n    const timer = setInterval(() => setNow(new Date()), 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // 格式化日期时间字符串，例如：2024-06-04 14:23:45\n  const formatted = now.toLocaleString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  }).replace(/\\//g, '-'); // 替换掉斜杠为短横线，符合常见格式\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 8,\n      right: 12,\n      color: 'white',\n      fontSize: 12,\n      fontWeight: 'normal',\n      userSelect: 'none',\n      zIndex: 9999,\n      fontFamily: 'sans-serif',\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: '2px 6px',\n      borderRadius: 4\n    },\n    \"aria-label\": \"\\u5F53\\u524D\\u65F6\\u95F4\\u548C\\u65E5\\u671F\",\n    children: formatted\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n_s(Clock, \"g/j/hExdUqb2z5Mxov8EvI3Aj00=\");\n_c = Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["Clock","_s","now","setNow","React","useState","Date","useEffect","timer","setInterval","clearInterval","formatted","toLocaleString","year","month","day","hour","minute","second","replace","_jsxDEV","style","position","top","right","color","fontSize","fontWeight","userSelect","zIndex","fontFamily","backgroundColor","padding","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/Clock.jsx"],"sourcesContent":["// 在 App 组件内部或外部定义 Clock 组件\r\nfunction Clock() {\r\n    const [now, setNow] = React.useState(new Date());\r\n  \r\n    React.useEffect(() => {\r\n      const timer = setInterval(() => setNow(new Date()), 1000);\r\n      return () => clearInterval(timer);\r\n    }, []);\r\n  \r\n    // 格式化日期时间字符串，例如：2024-06-04 14:23:45\r\n    const formatted = now.toLocaleString('zh-CN', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit',\r\n    }).replace(/\\//g, '-'); // 替换掉斜杠为短横线，符合常见格式\r\n    \r\n    return (\r\n      <div\r\n        style={{\r\n          position: 'fixed',\r\n          top: 8,\r\n          right: 12,\r\n          color: 'white',\r\n          fontSize: 12,\r\n          fontWeight: 'normal',\r\n          userSelect: 'none',\r\n          zIndex: 9999,\r\n          fontFamily: 'sans-serif',\r\n          backgroundColor: 'rgba(0,0,0,0.3)',\r\n          padding: '2px 6px',\r\n          borderRadius: 4,\r\n        }}\r\n        aria-label=\"当前时间和日期\"\r\n      >\r\n        {formatted}\r\n      </div>\r\n    );\r\n  }\r\n  "],"mappings":";;;AAAA;AACA,SAASA,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;EAEhDF,KAAK,CAACG,SAAS,CAAC,MAAM;IACpB,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAMN,MAAM,CAAC,IAAIG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;IACzD,OAAO,MAAMI,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,SAAS,GAAGT,GAAG,CAACU,cAAc,CAAC,OAAO,EAAE;IAC5CC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,SAAS;IAChBC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACV,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;;EAExB,oBACEC,OAAA;IACEC,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,QAAQ;MACpBC,UAAU,EAAE,MAAM;MAClBC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE,YAAY;MACxBC,eAAe,EAAE,iBAAiB;MAClCC,OAAO,EAAE,SAAS;MAClBC,YAAY,EAAE;IAChB,CAAE;IACF,cAAW,4CAAS;IAAAC,QAAA,EAEnBvB;EAAS;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACrC,EAAA,CAvCMD,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}