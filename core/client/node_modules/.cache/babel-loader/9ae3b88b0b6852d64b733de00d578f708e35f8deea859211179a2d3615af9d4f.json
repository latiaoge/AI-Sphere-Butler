{"ast":null,"code":"// src/components/SseListener.jsx\nimport React,{useEffect}from'react';export default function SseListener(_ref){let{onMessage}=_ref;useEffect(()=>{const internalUrl='https://192.168.1.70:5000/capture_events';const externalUrl='https://101.50.118.42:5000/capture_events';const isInternal=/^192\\.168\\./.test(window.location.hostname)||/^10\\./.test(window.location.hostname)||/^172\\.(1[6-9]|2\\d|3[0-1])\\./.test(window.location.hostname);const primaryUrl=isInternal?internalUrl:externalUrl;const fallbackUrl=isInternal?externalUrl:internalUrl;let eventSource=new EventSource(primaryUrl);eventSource.onopen=()=>console.log('SSE 已连接');eventSource.onmessage=e=>{if(onMessage)onMessage(e.data);};eventSource.onerror=()=>{console.warn('SSE 连接错误，尝试备用地址');eventSource.close();eventSource=new EventSource(fallbackUrl);eventSource.onmessage=e=>{if(onMessage)onMessage(e.data);};};return()=>{eventSource.close();};},[onMessage]);return null;}","map":{"version":3,"names":["React","useEffect","SseListener","_ref","onMessage","internalUrl","externalUrl","isInternal","test","window","location","hostname","primaryUrl","fallbackUrl","eventSource","EventSource","onopen","console","log","onmessage","e","data","onerror","warn","close"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/SseListener.jsx"],"sourcesContent":["// src/components/SseListener.jsx\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function SseListener({ onMessage }) {\r\n  useEffect(() => {\r\n    const internalUrl = 'https://192.168.1.70:5000/capture_events';\r\n    const externalUrl = 'https://101.50.118.42:5000/capture_events';\r\n\r\n    const isInternal = /^192\\.168\\./.test(window.location.hostname) || /^10\\./.test(window.location.hostname) || /^172\\.(1[6-9]|2\\d|3[0-1])\\./.test(window.location.hostname);\r\n\r\n    const primaryUrl = isInternal ? internalUrl : externalUrl;\r\n    const fallbackUrl = isInternal ? externalUrl : internalUrl;\r\n\r\n    let eventSource = new EventSource(primaryUrl);\r\n\r\n    eventSource.onopen = () => console.log('SSE 已连接');\r\n\r\n    eventSource.onmessage = e => {\r\n      if (onMessage) onMessage(e.data);\r\n    };\r\n\r\n    eventSource.onerror = () => {\r\n      console.warn('SSE 连接错误，尝试备用地址');\r\n      eventSource.close();\r\n      eventSource = new EventSource(fallbackUrl);\r\n      eventSource.onmessage = e => {\r\n        if (onMessage) onMessage(e.data);\r\n      };\r\n    };\r\n\r\n    return () => {\r\n      eventSource.close();\r\n    };\r\n  }, [onMessage]);\r\n\r\n  return null;\r\n}\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAExC,cAAe,SAAS,CAAAC,WAAWA,CAAAC,IAAA,CAAgB,IAAf,CAAEC,SAAU,CAAC,CAAAD,IAAA,CAC/CF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAI,WAAW,CAAG,0CAA0C,CAC9D,KAAM,CAAAC,WAAW,CAAG,2CAA2C,CAE/D,KAAM,CAAAC,UAAU,CAAG,aAAa,CAACC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,EAAI,OAAO,CAACH,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,EAAI,6BAA6B,CAACH,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAEzK,KAAM,CAAAC,UAAU,CAAGL,UAAU,CAAGF,WAAW,CAAGC,WAAW,CACzD,KAAM,CAAAO,WAAW,CAAGN,UAAU,CAAGD,WAAW,CAAGD,WAAW,CAE1D,GAAI,CAAAS,WAAW,CAAG,GAAI,CAAAC,WAAW,CAACH,UAAU,CAAC,CAE7CE,WAAW,CAACE,MAAM,CAAG,IAAMC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CAEjDJ,WAAW,CAACK,SAAS,CAAGC,CAAC,EAAI,CAC3B,GAAIhB,SAAS,CAAEA,SAAS,CAACgB,CAAC,CAACC,IAAI,CAAC,CAClC,CAAC,CAEDP,WAAW,CAACQ,OAAO,CAAG,IAAM,CAC1BL,OAAO,CAACM,IAAI,CAAC,iBAAiB,CAAC,CAC/BT,WAAW,CAACU,KAAK,CAAC,CAAC,CACnBV,WAAW,CAAG,GAAI,CAAAC,WAAW,CAACF,WAAW,CAAC,CAC1CC,WAAW,CAACK,SAAS,CAAGC,CAAC,EAAI,CAC3B,GAAIhB,SAAS,CAAEA,SAAS,CAACgB,CAAC,CAACC,IAAI,CAAC,CAClC,CAAC,CACH,CAAC,CAED,MAAO,IAAM,CACXP,WAAW,CAACU,KAAK,CAAC,CAAC,CACrB,CAAC,CACH,CAAC,CAAE,CAACpB,SAAS,CAAC,CAAC,CAEf,MAAO,KAAI,CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}