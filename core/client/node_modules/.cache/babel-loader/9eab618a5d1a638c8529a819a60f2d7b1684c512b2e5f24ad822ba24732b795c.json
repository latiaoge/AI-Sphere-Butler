{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/SseListener.jsx\nimport React, { useEffect } from 'react';\nexport default function SseListener({\n  onMessage\n}) {\n  _s();\n  useEffect(() => {\n    const internalUrl = 'https://192.168.1.70:5000/capture_events';\n    const externalUrl = 'https://101.50.118.42:5000/capture_events';\n    const isInternal = /^192\\.168\\./.test(window.location.hostname) || /^10\\./.test(window.location.hostname) || /^172\\.(1[6-9]|2\\d|3[0-1])\\./.test(window.location.hostname);\n    const primaryUrl = isInternal ? internalUrl : externalUrl;\n    const fallbackUrl = isInternal ? externalUrl : internalUrl;\n    let eventSource = new EventSource(primaryUrl);\n    eventSource.onopen = () => console.log('SSE 已连接');\n    eventSource.onmessage = e => {\n      if (onMessage) onMessage(e.data);\n    };\n    eventSource.onerror = () => {\n      console.warn('SSE 连接错误，尝试备用地址');\n      eventSource.close();\n      eventSource = new EventSource(fallbackUrl);\n      eventSource.onmessage = e => {\n        if (onMessage) onMessage(e.data);\n      };\n    };\n    return () => {\n      eventSource.close();\n    };\n  }, [onMessage]);\n  return null;\n}\n_s(SseListener, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SseListener;\nvar _c;\n$RefreshReg$(_c, \"SseListener\");","map":{"version":3,"names":["React","useEffect","SseListener","onMessage","_s","internalUrl","externalUrl","isInternal","test","window","location","hostname","primaryUrl","fallbackUrl","eventSource","EventSource","onopen","console","log","onmessage","e","data","onerror","warn","close","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/SseListener.jsx"],"sourcesContent":["// src/components/SseListener.jsx\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function SseListener({ onMessage }) {\r\n  useEffect(() => {\r\n    const internalUrl = 'https://192.168.1.70:5000/capture_events';\r\n    const externalUrl = 'https://101.50.118.42:5000/capture_events';\r\n\r\n    const isInternal = /^192\\.168\\./.test(window.location.hostname) || /^10\\./.test(window.location.hostname) || /^172\\.(1[6-9]|2\\d|3[0-1])\\./.test(window.location.hostname);\r\n\r\n    const primaryUrl = isInternal ? internalUrl : externalUrl;\r\n    const fallbackUrl = isInternal ? externalUrl : internalUrl;\r\n\r\n    let eventSource = new EventSource(primaryUrl);\r\n\r\n    eventSource.onopen = () => console.log('SSE 已连接');\r\n\r\n    eventSource.onmessage = e => {\r\n      if (onMessage) onMessage(e.data);\r\n    };\r\n\r\n    eventSource.onerror = () => {\r\n      console.warn('SSE 连接错误，尝试备用地址');\r\n      eventSource.close();\r\n      eventSource = new EventSource(fallbackUrl);\r\n      eventSource.onmessage = e => {\r\n        if (onMessage) onMessage(e.data);\r\n      };\r\n    };\r\n\r\n    return () => {\r\n      eventSource.close();\r\n    };\r\n  }, [onMessage]);\r\n\r\n  return null;\r\n}\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjDH,SAAS,CAAC,MAAM;IACd,MAAMI,WAAW,GAAG,0CAA0C;IAC9D,MAAMC,WAAW,GAAG,2CAA2C;IAE/D,MAAMC,UAAU,GAAG,aAAa,CAACC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,IAAI,OAAO,CAACH,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,IAAI,6BAA6B,CAACH,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC;IAEzK,MAAMC,UAAU,GAAGL,UAAU,GAAGF,WAAW,GAAGC,WAAW;IACzD,MAAMO,WAAW,GAAGN,UAAU,GAAGD,WAAW,GAAGD,WAAW;IAE1D,IAAIS,WAAW,GAAG,IAAIC,WAAW,CAACH,UAAU,CAAC;IAE7CE,WAAW,CAACE,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAEjDJ,WAAW,CAACK,SAAS,GAAGC,CAAC,IAAI;MAC3B,IAAIjB,SAAS,EAAEA,SAAS,CAACiB,CAAC,CAACC,IAAI,CAAC;IAClC,CAAC;IAEDP,WAAW,CAACQ,OAAO,GAAG,MAAM;MAC1BL,OAAO,CAACM,IAAI,CAAC,iBAAiB,CAAC;MAC/BT,WAAW,CAACU,KAAK,CAAC,CAAC;MACnBV,WAAW,GAAG,IAAIC,WAAW,CAACF,WAAW,CAAC;MAC1CC,WAAW,CAACK,SAAS,GAAGC,CAAC,IAAI;QAC3B,IAAIjB,SAAS,EAAEA,SAAS,CAACiB,CAAC,CAACC,IAAI,CAAC;MAClC,CAAC;IACH,CAAC;IAED,OAAO,MAAM;MACXP,WAAW,CAACU,KAAK,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACrB,SAAS,CAAC,CAAC;EAEf,OAAO,IAAI;AACb;AAACC,EAAA,CAjCuBF,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}