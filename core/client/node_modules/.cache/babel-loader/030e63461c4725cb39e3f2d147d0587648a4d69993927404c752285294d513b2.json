{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{useRecorderContext}from'../contexts/RecorderProvider';// 注意路径根据实际调整\n// 新增：获取动态服务地址函数\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function getDynamicUrls(){try{const serverUrlsStr=localStorage.getItem('serverUrls');if(serverUrlsStr){const serverUrls=JSON.parse(serverUrlsStr);return{qwenerUrl:serverUrls.audioTranscriberQwenerUrl||'https://192.168.168.77:9010/qwener',uploadSpeakerUrl:serverUrls.audioTranscriberUploadSpeakerUrl||'http://192.168.168.77:6007/api/uploadSpeaker'};}}catch(e){console.warn('读取serverUrls配置失败，使用默认地址',e);}return{qwenerUrl:'https://192.168.168.77:9010/qwener',uploadSpeakerUrl:'http://192.168.168.77:6007/api/uploadSpeaker'};}export default function AudioTranscriber(){// 从全局录音上下文中取状态和操作\nconst{isRecording,transcription,lang,speakerVerification,wakeWordEnabled,wakeWords,setLang,setSpeakerVerification,setWakeWordEnabled,setWakeWords,startRecording,stopRecording,setTranscription,// 新增：获取全局ASR面板可见性状态及更新方法\nasrPanelVisible,setAsrPanelVisible}=useRecorderContext();// 新增：面板显示/隐藏状态管理\nconst[panelVisible,setPanelVisible]=useState(asrPanelVisible);// 初始值从全局状态获取\nconst doubleClickTimerRef=useRef(null);const panelStateKey='audioTranscriberPanelVisible';// 拖拽相关引用\nconst micButtonRef=useRef(null);const isDraggingRef=useRef(false);const offsetXRef=useRef(0);const offsetYRef=useRef(0);// localStorage 保存位置的 key\nconst storageKey='audioTranscriberMicButtonPosition';// 新增声纹识别录音状态和上传状态（保持本组件私有状态）\nconst[isSpeakerRecording,setIsSpeakerRecording]=useState(false);const[speakerUploadStatus,setSpeakerUploadStatus]=useState('');const speakerRecorderRef=useRef(null);const speakerAudioChunksRef=useRef([]);// 发送文本消息到 LLM 服务\nconst sendTextMessage=async text=>{if(!text.trim())return;const{qwenerUrl}=getDynamicUrls();try{const response=await fetch(qwenerUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({text})});if(!response.ok){throw new Error('网络响应失败，状态码: '+response.status);}const data=await response.json();console.log('文本发送成功，服务器返回：',data);}catch(error){console.error('文本发送失败：',error);}};// 组件卸载时清理资源\nuseEffect(()=>{return()=>{stopRecording();stopSpeakerRecording();if(doubleClickTimerRef.current){clearTimeout(doubleClickTimerRef.current);}};},[]);// 监听语言和声纹识别开关的变化，保存状态到 localStorage，确保切换页时记忆选择\nuseEffect(()=>{try{localStorage.setItem('audioTranscriberLang',lang);}catch(_unused){}},[lang]);useEffect(()=>{try{localStorage.setItem('audioTranscriberSpeakerVerification',speakerVerification.toString());}catch(_unused2){}},[speakerVerification]);// 监听语音唤醒开关和唤醒词变化，保存到 localStorage\nuseEffect(()=>{try{localStorage.setItem('wakeWordEnabled',wakeWordEnabled.toString());}catch(_unused3){}},[wakeWordEnabled]);useEffect(()=>{try{localStorage.setItem('wakeWords',wakeWords);}catch(_unused4){}},[wakeWords]);// 新增：加载面板显示状态（改为从localStorage加载，同时同步到全局状态）\nuseEffect(()=>{try{const savedState=localStorage.getItem(panelStateKey);if(savedState!==null){const parsedState=JSON.parse(savedState);setPanelVisible(parsedState);// 同步到全局状态\nsetAsrPanelVisible(parsedState);}}catch(e){console.warn('加载面板状态失败:',e);}},[]);// 新增：保存面板显示状态到localStorage，并同步到全局状态\nuseEffect(()=>{try{localStorage.setItem(panelStateKey,JSON.stringify(panelVisible));// 同步到全局状态\nsetAsrPanelVisible(panelVisible);}catch(e){console.warn('保存面板状态失败:',e);}},[panelVisible,setAsrPanelVisible]);// 监听全局状态变化，保持与局部状态同步（处理多实例或其他组件修改全局状态的情况）\nuseEffect(()=>{if(panelVisible!==asrPanelVisible){setPanelVisible(asrPanelVisible);}},[asrPanelVisible]);// 录制声纹相关函数\nfunction startSpeakerRecording(){if(isSpeakerRecording)return;setSpeakerUploadStatus('请求麦克风权限...');navigator.mediaDevices.getUserMedia({audio:true}).then(stream=>{setSpeakerUploadStatus('开始录音2秒...');speakerAudioChunksRef.current=[];const options={mimeType:'audio/wav'};let mediaRecorder;try{mediaRecorder=new MediaRecorder(stream,options);}catch(e){mediaRecorder=new MediaRecorder(stream);}speakerRecorderRef.current=mediaRecorder;mediaRecorder.ondataavailable=event=>{if(event.data&&event.data.size>0){speakerAudioChunksRef.current.push(event.data);}};mediaRecorder.onstop=async()=>{setSpeakerUploadStatus('录音结束，准备上传...');const blob=new Blob(speakerAudioChunksRef.current,{type:'audio/wav'});try{const formData=new FormData();formData.append('file',blob,'speaker.wav');const{uploadSpeakerUrl}=getDynamicUrls();const res=await fetch(uploadSpeakerUrl,{method:'POST',body:formData});if(!res.ok){throw new Error(\"\\u4E0A\\u4F20\\u5931\\u8D25\\uFF0C\\u72B6\\u6001\\u7801: \".concat(res.status));}const result=await res.json();setSpeakerUploadStatus('上传成功');console.log('上传成功，服务器返回：',result);}catch(err){setSpeakerUploadStatus('上传失败: '+err.message);console.error('上传失败',err);}stream.getTracks().forEach(track=>track.stop());setTimeout(()=>setSpeakerUploadStatus(''),3000);setIsSpeakerRecording(false);};mediaRecorder.start();setIsSpeakerRecording(true);setTimeout(()=>{if(speakerRecorderRef.current&&speakerRecorderRef.current.state!=='inactive'){speakerRecorderRef.current.stop();}},2000);}).catch(err=>{setSpeakerUploadStatus('获取麦克风权限失败: '+err.message);console.error('获取麦克风权限失败',err);});}function stopSpeakerRecording(){if(speakerRecorderRef.current&&speakerRecorderRef.current.state!=='inactive'){speakerRecorderRef.current.stop();setIsSpeakerRecording(false);}}// 拖拽事件处理\nuseEffect(()=>{if(!micButtonRef.current)return;const button=micButtonRef.current;const savedPosStr=localStorage.getItem(storageKey);let left=26;let top=26;if(savedPosStr){try{const pos=JSON.parse(savedPosStr);if(typeof pos.left==='number'&&typeof pos.top==='number'&&pos.left>=0&&pos.top>=0){left=pos.left;top=pos.top;}}catch(_unused5){}}button.style.position='fixed';button.style.left=\"\".concat(left,\"px\");button.style.top=\"\".concat(top,\"px\");button.style.zIndex='10000';button.style.cursor='grab';isDraggingRef.current=false;offsetXRef.current=0;offsetYRef.current=0;const onMouseDown=e=>{if(e.button!==0)return;isDraggingRef.current=true;offsetXRef.current=e.clientX-button.offsetLeft;offsetYRef.current=e.clientY-button.offsetTop;button.style.cursor='grabbing';e.preventDefault();};const onMouseMove=e=>{if(!isDraggingRef.current)return;let newLeft=e.clientX-offsetXRef.current;let newTop=e.clientY-offsetYRef.current;const maxLeft=window.innerWidth-button.offsetWidth;const maxTop=window.innerHeight-button.offsetHeight;newLeft=Math.min(Math.max(0,newLeft),maxLeft);newTop=Math.min(Math.max(0,newTop),maxTop);button.style.left=\"\".concat(newLeft,\"px\");button.style.top=\"\".concat(newTop,\"px\");};const onMouseUp=()=>{if(!isDraggingRef.current)return;isDraggingRef.current=false;button.style.cursor='grab';localStorage.setItem(storageKey,JSON.stringify({left:button.offsetLeft,top:button.offsetTop}));};const onTouchStart=e=>{if(e.touches.length===0)return;isDraggingRef.current=true;const touch=e.touches[0];offsetXRef.current=touch.clientX-button.offsetLeft;offsetYRef.current=touch.clientY-button.offsetTop;button.style.cursor='grabbing';};const onTouchMove=e=>{if(!isDraggingRef.current||e.touches.length===0)return;const touch=e.touches[0];let newLeft=touch.clientX-offsetXRef.current;let newTop=touch.clientY-offsetYRef.current;const maxLeft=window.innerWidth-button.offsetWidth;const maxTop=window.innerHeight-button.offsetHeight;newLeft=Math.min(Math.max(0,newLeft),maxLeft);newTop=Math.min(Math.max(0,newTop),maxTop);button.style.left=\"\".concat(newLeft,\"px\");button.style.top=\"\".concat(newTop,\"px\");e.preventDefault();};const onTouchEnd=()=>{if(!isDraggingRef.current)return;isDraggingRef.current=false;button.style.cursor='grab';localStorage.setItem(storageKey,JSON.stringify({left:button.offsetLeft,top:button.offsetTop}));};button.addEventListener('mousedown',onMouseDown);document.addEventListener('mousemove',onMouseMove);document.addEventListener('mouseup',onMouseUp);button.addEventListener('touchstart',onTouchStart,{passive:false});document.addEventListener('touchmove',onTouchMove,{passive:false});document.addEventListener('touchend',onTouchEnd);return()=>{button.removeEventListener('mousedown',onMouseDown);document.removeEventListener('mousemove',onMouseMove);document.removeEventListener('mouseup',onMouseUp);button.removeEventListener('touchstart',onTouchStart);document.removeEventListener('touchmove',onTouchMove);document.removeEventListener('touchend',onTouchEnd);};},[]);// 波纹动画相关\nconst[ripples,setRipples]=useState([]);const rippleCountRef=useRef(0);const speakerButtonRef=useRef(null);// 录制声纹按钮点击函数封装，附加波纹效果\nconst handleSpeakerRecordClick=event=>{if(isRecording||isSpeakerRecording)return;createRipple(event);startSpeakerRecording();};// 创建波纹，添加到ripples数组\nconst createRipple=event=>{if(!speakerButtonRef.current)return;const rect=speakerButtonRef.current.getBoundingClientRect();const size=Math.max(rect.width,rect.height);const x=event.clientX-rect.left-size/2;const y=event.clientY-rect.top-size/2;const newRipple={key:rippleCountRef.current,size,x,y};rippleCountRef.current+=1;setRipples(oldRipples=>[...oldRipples,newRipple]);setTimeout(()=>{setRipples(oldRipples=>oldRipples.filter(r=>r.key!==newRipple.key));},1000);};// 新增：处理双击事件（区分单击和双击）\nfunction handleMicClick(){if(doubleClickTimerRef.current){// 双击事件：切换面板显示状态\nclearTimeout(doubleClickTimerRef.current);doubleClickTimerRef.current=null;setPanelVisible(!panelVisible);}else{// 单击事件：处理录音\ndoubleClickTimerRef.current=setTimeout(function(){if(isRecording){stopRecording();}else{startRecording();}doubleClickTimerRef.current=null;},300);// 300ms内连续点击视为双击\n}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"style\",{children:\"\\n        /* \\u9EA6\\u514B\\u98CE\\u6309\\u94AE\\u6837\\u5F0F */\\n        #mic-button-wrapper {\\n          position: fixed;\\n          z-index: 10000;\\n          user-select: none;\\n          pointer-events: auto;\\n          display: flex;\\n          flex-direction: column;\\n          align-items: center;\\n          gap: 4px;\\n        }\\n\\n        #listening-text {\\n          font-size: 12px;\\n          color: rgba(128, 128, 128, 0.7);\\n          user-select: none;\\n          pointer-events: none;\\n          font-weight: 500;\\n          opacity: 0;\\n          transition: opacity 0.3s ease;\\n          height: 16px;\\n          line-height: 16px;\\n        }\\n        #listening-text.visible {\\n          opacity: 1;\\n        }\\n\\n        #mic-button {\\n          background: none;\\n          border: none;\\n          padding: 0;\\n          outline: none;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          filter: none;\\n          transition: filter 0.3s ease;\\n\\n          width: 68px;\\n          height: 68px;\\n          cursor: grab;\\n        }\\n        #mic-button.recording {\\n          filter: drop-shadow(0 0 5px red);\\n        }\\n        #mic-button img {\\n          width: 48px;\\n          height: 48px;\\n          user-select: none;\\n          pointer-events: none;\\n          -webkit-user-drag: none;\\n        }\\n\\n        /* \\u8BED\\u8A00\\u548C\\u58F0\\u7EB9\\u8BC6\\u522B\\u533A\\u57DF\\u6837\\u5F0F */\\n        #controls-container {\\n          max-width: 700px;\\n          margin: 20px auto 12px auto;\\n          font-family: Arial, sans-serif;\\n          color: white;\\n          display: flex;\\n          align-items: center;\\n          gap: 20px;\\n          user-select: none;\\n          flex-wrap: wrap;\\n        }\\n        #controls-container label {\\n          font-size: 14px;\\n          user-select: none;\\n          display: flex;\\n          align-items: center;\\n          gap: 6px;\\n        }\\n        #langInput, #wakeWordsInput {\\n          padding: 6px;\\n          font-size: 12px;\\n          width: 140px;\\n          background-color: #333;\\n          border: 1px solid #666;\\n          border-radius: 3px;\\n          color: white;\\n          user-select: text;\\n        }\\n        #speakerVerificationLabel {\\n          font-size: 14px;\\n        }\\n        #wakeWordToggleLabel {\\n          font-size: 14px;\\n          display: flex;\\n          align-items: center;\\n          gap: 6px;\\n        }\\n\\n        /* \\u7EAF CSS \\u73BB\\u7483\\u6001\\u5F55\\u5236\\u58F0\\u7EB9\\u6309\\u94AE */\\n        #speaker-record-button {\\n          position: relative;\\n          overflow: hidden;\\n          background: rgba(255, 255, 255, 0.1);\\n          border-radius: 16px;\\n          border: 1px solid rgba(255, 255, 255, 0.3);\\n          color: white;\\n          padding: 3px 10px;\\n          font-size: 13px;\\n          font-weight: 600;\\n          cursor: pointer;\\n          user-select: none;\\n          box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\\n          backdrop-filter: blur(10px);\\n          -webkit-backdrop-filter: blur(12px);\\n          WebkitBackdropFilter: 'blur(10px)',\\n          transition: all 0.3s ease;\\n          display: inline-flex;\\n          align-items: center;\\n          justify-content: center;\\n          outline: none;\\n          border-image: none;\\n        }\\n        #speaker-record-button:hover:not(:disabled) {\\n          background: rgba(255, 255, 255, 0.2);\\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\\n          transform: scale(1.05);\\n          filter: brightness(1.1);\\n        }\\n        #speaker-record-button:disabled {\\n          opacity: 0.4;\\n          cursor: not-allowed;\\n          box-shadow: none;\\n          background: rgba(255, 255, 255, 0.05);\\n          filter: none;\\n          transform: none;\\n        }\\n\\n        /* \\u989D\\u5916\\u5149\\u6CFD\\u5C42 */\\n        #speaker-record-button::before {\\n          content: '';\\n          position: absolute;\\n          top: -100%;\\n          left: -100%;\\n          width: 100%;\\n          height: 100%;\\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\\n          pointer-events: none;\\n          filter: blur(10px);\\n          opacity: 0.6;\\n          transition: opacity 0.3s ease;\\n          border-radius: inherit;\\n          z-index: 0;\\n        }\\n\\n        /* \\u4FDD\\u7559\\u6CE2\\u7EB9\\u6548\\u679C\\u7684\\u6837\\u5F0F */\\n        .ripple {\\n          position: absolute;\\n          border-radius: 150%;\\n          background: rgba(91, 155, 255, 0.7);\\n          animation: rippleEffect 1s ease-out;\\n          pointer-events: none;\\n          transform: scale(0);\\n          opacity: 0.75;\\n          z-index: 1;\\n        }\\n\\n        @keyframes rippleEffect {\\n          to {\\n            transform: scale(4);\\n            opacity: 0;\\n          }\\n        }\\n\\n        /* \\u65B0\\u589E\\uFF1A\\u9762\\u677F\\u663E\\u793A/\\u9690\\u85CF\\u63A7\\u5236 */\\n        #audio-panel-content {\\n          transition: all 0.3s ease;\\n        }\\n        #audio-panel-content.hidden {\\n          display: none;\\n        }\\n      \"}),/*#__PURE__*/_jsxs(\"div\",{id:\"mic-button-wrapper\",ref:micButtonRef,style:{left:26,top:26,position:'fixed'},children:[/*#__PURE__*/_jsx(\"div\",{id:\"listening-text\",className:isRecording?'visible':'',\"aria-live\":\"polite\",role:\"status\",children:\"\\u8046\\u542C\\u4E2D...\"}),/*#__PURE__*/_jsx(\"button\",{id:\"mic-button\",className:isRecording?'recording':'',onClick:handleMicClick,onDoubleClick:e=>e.preventDefault(),\"aria-label\":isRecording?'停止录音':'开始录音',title:isRecording?'点击停止录音，双击切换面板':'点击开始录音，双击切换面板',type:\"button\",disabled:isSpeakerRecording,children:/*#__PURE__*/_jsx(\"img\",{src:\"/core/client/ai-butler/image/mic-icon.png\",alt:\"\\u9EA6\\u514B\\u98CE\",draggable:false})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"audio-panel-content\",className:panelVisible?'':'hidden',children:[/*#__PURE__*/_jsxs(\"div\",{id:\"controls-container\",\"aria-label\":\"\\u8BED\\u97F3\\u8BC6\\u522B\\u8BBE\\u7F6E\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"langInput\",children:\"\\u8BED\\u8A00\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{id:\"langInput\",type:\"text\",value:lang,onChange:e=>setLang(e.target.value),disabled:isRecording||isSpeakerRecording,placeholder:\"auto\",autoComplete:\"off\"}),/*#__PURE__*/_jsxs(\"label\",{id:\"speakerVerificationLabel\",htmlFor:\"speakerVerificationCheckbox\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"speakerVerificationCheckbox\",type:\"checkbox\",checked:speakerVerification,disabled:isRecording||isSpeakerRecording,onChange:e=>setSpeakerVerification(e.target.checked)}),\"\\u58F0\\u7EB9\\u8BC6\\u522B\"]}),/*#__PURE__*/_jsxs(\"label\",{id:\"wakeWordToggleLabel\",htmlFor:\"wakeWordToggleCheckbox\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"wakeWordToggleCheckbox\",type:\"checkbox\",checked:wakeWordEnabled,disabled:isRecording||isSpeakerRecording,onChange:e=>setWakeWordEnabled(e.target.checked)}),\"\\u8BED\\u97F3\\u5524\\u9192\"]}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"wakeWordsInput\",style:{flexGrow:1},children:[\"\\u5524\\u9192\\u8BCD\\uFF08\\u62FC\\u97F3\\uFF0C\\u591A\\u4E2A\\u7528\\u9017\\u53F7\\u5206\\u9694\\uFF09\\uFF1A\",/*#__PURE__*/_jsx(\"input\",{id:\"wakeWordsInput\",type:\"text\",value:wakeWords,onChange:e=>setWakeWords(e.target.value),disabled:isRecording||isSpeakerRecording||!wakeWordEnabled,placeholder:\"\\u5982\\uFF1Azhan qi lai, ni hao xiao qian\",autoComplete:\"off\",style:{marginLeft:8}})]}),/*#__PURE__*/_jsxs(\"button\",{id:\"speaker-record-button\",ref:speakerButtonRef,onClick:handleSpeakerRecordClick,disabled:isRecording||isSpeakerRecording,type:\"button\",\"aria-live\":\"polite\",\"aria-label\":\"\\u5F55\\u5236\\u58F0\\u7EB9\",title:\"\\u5F55\\u5236\\u7EA62\\u79D2\\u58F0\\u97F3\\u7528\\u4E8E\\u58F0\\u7EB9\\u8BC6\\u522B\\uFF0C\\u5F55\\u5236\\u5B8C\\u6210\\u81EA\\u52A8\\u4E0A\\u4F20\",children:[\"\\u5F55\\u5236\\u58F0\\u7EB9 (2\\u79D2)\",ripples.map(_ref=>{let{key,size,x,y}=_ref;return/*#__PURE__*/_jsx(\"span\",{className:\"ripple\",style:{width:size,height:size,top:y,left:x}},key);})]})]}),speakerUploadStatus&&/*#__PURE__*/_jsx(\"div\",{id:\"speaker-record-status\",role:\"alert\",\"aria-live\":\"polite\",\"aria-atomic\":\"true\",style:{maxWidth:700,margin:'4px auto 0 auto'},children:speakerUploadStatus}),/*#__PURE__*/_jsx(\"div\",{id:\"transcriptionResult\",style:{maxWidth:700,margin:'12px auto 20px auto',fontFamily:'Arial, sans-serif',whiteSpace:'pre-wrap',backgroundColor:'transparent',padding:10,border:'1px solid transparent',borderRadius:5,minHeight:150,fontFamily:'monospace',fontSize:14,overflowY:'auto',maxHeight:300,userSelect:'text',color:transcription?'white':'rgba(255, 255, 255, 0.5)'},children:transcription||'识别文字展示区...'})]})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","useRecorderContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getDynamicUrls","serverUrlsStr","localStorage","getItem","serverUrls","JSON","parse","qwenerUrl","audioTranscriberQwenerUrl","uploadSpeakerUrl","audioTranscriberUploadSpeakerUrl","e","console","warn","AudioTranscriber","isRecording","transcription","lang","speakerVerification","wakeWordEnabled","wakeWords","setLang","setSpeakerVerification","setWakeWordEnabled","setWakeWords","startRecording","stopRecording","setTranscription","asrPanelVisible","setAsrPanelVisible","panelVisible","setPanelVisible","doubleClickTimerRef","panelStateKey","micButtonRef","isDraggingRef","offsetXRef","offsetYRef","storageKey","isSpeakerRecording","setIsSpeakerRecording","speakerUploadStatus","setSpeakerUploadStatus","speakerRecorderRef","speakerAudioChunksRef","sendTextMessage","text","trim","response","fetch","method","headers","body","stringify","ok","Error","status","data","json","log","error","stopSpeakerRecording","current","clearTimeout","setItem","_unused","toString","_unused2","_unused3","_unused4","savedState","parsedState","startSpeakerRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","options","mimeType","mediaRecorder","MediaRecorder","ondataavailable","event","size","push","onstop","blob","Blob","type","formData","FormData","append","res","concat","result","err","message","getTracks","forEach","track","stop","setTimeout","start","state","catch","button","savedPosStr","left","top","pos","_unused5","style","position","zIndex","cursor","onMouseDown","clientX","offsetLeft","clientY","offsetTop","preventDefault","onMouseMove","newLeft","newTop","maxLeft","window","innerWidth","offsetWidth","maxTop","innerHeight","offsetHeight","Math","min","max","onMouseUp","onTouchStart","touches","length","touch","onTouchMove","onTouchEnd","addEventListener","document","passive","removeEventListener","ripples","setRipples","rippleCountRef","speakerButtonRef","handleSpeakerRecordClick","createRipple","rect","getBoundingClientRect","width","height","x","y","newRipple","key","oldRipples","filter","r","handleMicClick","children","id","ref","className","role","onClick","onDoubleClick","title","disabled","src","alt","draggable","htmlFor","value","onChange","target","placeholder","autoComplete","checked","flexGrow","marginLeft","map","_ref","maxWidth","margin","fontFamily","whiteSpace","backgroundColor","padding","border","borderRadius","minHeight","fontSize","overflowY","maxHeight","userSelect","color"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\r\n\r\n// 新增：获取动态服务地址函数\r\nfunction getDynamicUrls() {\r\n  try {\r\n    const serverUrlsStr = localStorage.getItem('serverUrls');\r\n    if (serverUrlsStr) {\r\n      const serverUrls = JSON.parse(serverUrlsStr);\r\n      return {\r\n        qwenerUrl: serverUrls.audioTranscriberQwenerUrl || 'https://192.168.168.77:9010/qwener',\r\n        uploadSpeakerUrl: serverUrls.audioTranscriberUploadSpeakerUrl || 'http://192.168.168.77:6007/api/uploadSpeaker',\r\n      };\r\n    }\r\n  } catch (e) {\r\n    console.warn('读取serverUrls配置失败，使用默认地址', e);\r\n  }\r\n  return {\r\n    qwenerUrl: 'https://192.168.168.77:9010/qwener',\r\n    uploadSpeakerUrl: 'http://192.168.168.77:6007/api/uploadSpeaker',\r\n  };\r\n}\r\n\r\nexport default function AudioTranscriber() {\r\n  // 从全局录音上下文中取状态和操作\r\n  const {\r\n    isRecording,\r\n    transcription,\r\n    lang,\r\n    speakerVerification,\r\n    wakeWordEnabled,\r\n    wakeWords,\r\n    setLang,\r\n    setSpeakerVerification,\r\n    setWakeWordEnabled,\r\n    setWakeWords,\r\n    startRecording,\r\n    stopRecording,\r\n    setTranscription,\r\n    // 新增：获取全局ASR面板可见性状态及更新方法\r\n    asrPanelVisible,\r\n    setAsrPanelVisible\r\n  } = useRecorderContext();\r\n\r\n  // 新增：面板显示/隐藏状态管理\r\n  const [panelVisible, setPanelVisible] = useState(asrPanelVisible); // 初始值从全局状态获取\r\n  const doubleClickTimerRef = useRef(null);\r\n  const panelStateKey = 'audioTranscriberPanelVisible';\r\n\r\n  // 拖拽相关引用\r\n  const micButtonRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  // localStorage 保存位置的 key\r\n  const storageKey = 'audioTranscriberMicButtonPosition';\r\n\r\n  // 新增声纹识别录音状态和上传状态（保持本组件私有状态）\r\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\r\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\r\n  const speakerRecorderRef = useRef(null);\r\n  const speakerAudioChunksRef = useRef([]);\r\n\r\n  // 发送文本消息到 LLM 服务\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    const { qwenerUrl } = getDynamicUrls();\r\n\r\n    try {\r\n      const response = await fetch(qwenerUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 组件卸载时清理资源\r\n  useEffect(() => {\r\n    return () => {\r\n      stopRecording();\r\n      stopSpeakerRecording();\r\n      if (doubleClickTimerRef.current) {\r\n        clearTimeout(doubleClickTimerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 监听语言和声纹识别开关的变化，保存状态到 localStorage，确保切换页时记忆选择\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberLang', lang);\r\n    } catch {}\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString());\r\n    } catch {}\r\n  }, [speakerVerification]);\r\n\r\n  // 监听语音唤醒开关和唤醒词变化，保存到 localStorage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWordEnabled', wakeWordEnabled.toString());\r\n    } catch {}\r\n  }, [wakeWordEnabled]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWords', wakeWords);\r\n    } catch {}\r\n  }, [wakeWords]);\r\n\r\n  // 新增：加载面板显示状态（改为从localStorage加载，同时同步到全局状态）\r\n  useEffect(() => {\r\n    try {\r\n      const savedState = localStorage.getItem(panelStateKey);\r\n      if (savedState !== null) {\r\n        const parsedState = JSON.parse(savedState);\r\n        setPanelVisible(parsedState);\r\n        // 同步到全局状态\r\n        setAsrPanelVisible(parsedState);\r\n      }\r\n    } catch (e) {\r\n      console.warn('加载面板状态失败:', e);\r\n    }\r\n  }, []);\r\n\r\n  // 新增：保存面板显示状态到localStorage，并同步到全局状态\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(panelStateKey, JSON.stringify(panelVisible));\r\n      // 同步到全局状态\r\n      setAsrPanelVisible(panelVisible);\r\n    } catch (e) {\r\n      console.warn('保存面板状态失败:', e);\r\n    }\r\n  }, [panelVisible, setAsrPanelVisible]);\r\n\r\n  // 监听全局状态变化，保持与局部状态同步（处理多实例或其他组件修改全局状态的情况）\r\n  useEffect(() => {\r\n    if (panelVisible !== asrPanelVisible) {\r\n      setPanelVisible(asrPanelVisible);\r\n    }\r\n  }, [asrPanelVisible]);\r\n\r\n  // 录制声纹相关函数\r\n  function startSpeakerRecording() {\r\n    if (isSpeakerRecording) return;\r\n\r\n    setSpeakerUploadStatus('请求麦克风权限...');\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then((stream) => {\r\n        setSpeakerUploadStatus('开始录音2秒...');\r\n        speakerAudioChunksRef.current = [];\r\n        const options = { mimeType: 'audio/wav' };\r\n        let mediaRecorder;\r\n        try {\r\n          mediaRecorder = new MediaRecorder(stream, options);\r\n        } catch (e) {\r\n          mediaRecorder = new MediaRecorder(stream);\r\n        }\r\n        speakerRecorderRef.current = mediaRecorder;\r\n\r\n        mediaRecorder.ondataavailable = (event) => {\r\n          if (event.data && event.data.size > 0) {\r\n            speakerAudioChunksRef.current.push(event.data);\r\n          }\r\n        };\r\n\r\n        mediaRecorder.onstop = async () => {\r\n          setSpeakerUploadStatus('录音结束，准备上传...');\r\n          const blob = new Blob(speakerAudioChunksRef.current, { type: 'audio/wav' });\r\n\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('file', blob, 'speaker.wav');\r\n\r\n            const { uploadSpeakerUrl } = getDynamicUrls();\r\n\r\n            const res = await fetch(uploadSpeakerUrl, {\r\n              method: 'POST',\r\n              body: formData,\r\n            });\r\n\r\n            if (!res.ok) {\r\n              throw new Error(`上传失败，状态码: ${res.status}`);\r\n            }\r\n            const result = await res.json();\r\n            setSpeakerUploadStatus('上传成功');\r\n            console.log('上传成功，服务器返回：', result);\r\n          } catch (err) {\r\n            setSpeakerUploadStatus('上传失败: ' + err.message);\r\n            console.error('上传失败', err);\r\n          }\r\n          stream.getTracks().forEach(track => track.stop());\r\n          setTimeout(() => setSpeakerUploadStatus(''), 3000);\r\n          setIsSpeakerRecording(false);\r\n        };\r\n\r\n        mediaRecorder.start();\r\n\r\n        setIsSpeakerRecording(true);\r\n\r\n        setTimeout(() => {\r\n          if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\r\n            speakerRecorderRef.current.stop();\r\n          }\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        setSpeakerUploadStatus('获取麦克风权限失败: ' + err.message);\r\n        console.error('获取麦克风权限失败', err);\r\n      });\r\n  }\r\n\r\n  function stopSpeakerRecording() {\r\n    if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\r\n      speakerRecorderRef.current.stop();\r\n      setIsSpeakerRecording(false);\r\n    }\r\n  }\r\n\r\n  // 拖拽事件处理\r\n  useEffect(() => {\r\n    if (!micButtonRef.current) return;\r\n    const button = micButtonRef.current;\r\n\r\n    const savedPosStr = localStorage.getItem(storageKey);\r\n    let left = 26;\r\n    let top = 26;\r\n    if (savedPosStr) {\r\n      try {\r\n        const pos = JSON.parse(savedPosStr);\r\n        if (\r\n          typeof pos.left === 'number' &&\r\n          typeof pos.top === 'number' &&\r\n          pos.left >= 0 &&\r\n          pos.top >= 0\r\n        ) {\r\n          left = pos.left;\r\n          top = pos.top;\r\n        }\r\n      } catch {}\r\n    }\r\n\r\n    button.style.position = 'fixed';\r\n    button.style.left = `${left}px`;\r\n    button.style.top = `${top}px`;\r\n    button.style.zIndex = '10000';\r\n    button.style.cursor = 'grab';\r\n\r\n    isDraggingRef.current = false;\r\n    offsetXRef.current = 0;\r\n    offsetYRef.current = 0;\r\n\r\n    const onMouseDown = (e) => {\r\n      if (e.button !== 0) return;\r\n      isDraggingRef.current = true;\r\n      offsetXRef.current = e.clientX - button.offsetLeft;\r\n      offsetYRef.current = e.clientY - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n      e.preventDefault();\r\n    };\r\n    const onMouseMove = (e) => {\r\n      if (!isDraggingRef.current) return;\r\n      let newLeft = e.clientX - offsetXRef.current;\r\n      let newTop = e.clientY - offsetYRef.current;\r\n\r\n      const maxLeft = window.innerWidth - button.offsetWidth;\r\n      const maxTop = window.innerHeight - button.offsetHeight;\r\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n      newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n    };\r\n    const onMouseUp = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      localStorage.setItem(\r\n        storageKey,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n    };\r\n\r\n    const onTouchStart = (e) => {\r\n      if (e.touches.length === 0) return;\r\n      isDraggingRef.current = true;\r\n      const touch = e.touches[0];\r\n      offsetXRef.current = touch.clientX - button.offsetLeft;\r\n      offsetYRef.current = touch.clientY - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n    };\r\n    const onTouchMove = (e) => {\r\n      if (!isDraggingRef.current || e.touches.length === 0) return;\r\n      const touch = e.touches[0];\r\n      let newLeft = touch.clientX - offsetXRef.current;\r\n      let newTop = touch.clientY - offsetYRef.current;\r\n\r\n      const maxLeft = window.innerWidth - button.offsetWidth;\r\n      const maxTop = window.innerHeight - button.offsetHeight;\r\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n      newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n\r\n      e.preventDefault();\r\n    };\r\n    const onTouchEnd = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      localStorage.setItem(\r\n        storageKey,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n    };\r\n\r\n    button.addEventListener('mousedown', onMouseDown);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    button.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    return () => {\r\n      button.removeEventListener('mousedown', onMouseDown);\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      button.removeEventListener('touchstart', onTouchStart);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  // 波纹动画相关\r\n  const [ripples, setRipples] = useState([]);\r\n  const rippleCountRef = useRef(0);\r\n  const speakerButtonRef = useRef(null);\r\n\r\n  // 录制声纹按钮点击函数封装，附加波纹效果\r\n  const handleSpeakerRecordClick = (event) => {\r\n    if (isRecording || isSpeakerRecording) return;\r\n\r\n    createRipple(event);\r\n    startSpeakerRecording();\r\n  };\r\n\r\n  // 创建波纹，添加到ripples数组\r\n  const createRipple = (event) => {\r\n    if (!speakerButtonRef.current) return;\r\n\r\n    const rect = speakerButtonRef.current.getBoundingClientRect();\r\n    const size = Math.max(rect.width, rect.height);\r\n    const x = event.clientX - rect.left - size / 2;\r\n    const y = event.clientY - rect.top - size / 2;\r\n\r\n    const newRipple = {\r\n      key: rippleCountRef.current,\r\n      size,\r\n      x,\r\n      y,\r\n    };\r\n    rippleCountRef.current += 1;\r\n\r\n    setRipples((oldRipples) => [...oldRipples, newRipple]);\r\n\r\n    setTimeout(() => {\r\n      setRipples((oldRipples) => oldRipples.filter(r => r.key !== newRipple.key));\r\n    }, 1000);\r\n  };\r\n\r\n  // 新增：处理双击事件（区分单击和双击）\r\n  function handleMicClick() {\r\n    if (doubleClickTimerRef.current) {\r\n      // 双击事件：切换面板显示状态\r\n      clearTimeout(doubleClickTimerRef.current);\r\n      doubleClickTimerRef.current = null;\r\n      setPanelVisible(!panelVisible);\r\n    } else {\r\n      // 单击事件：处理录音\r\n      doubleClickTimerRef.current = setTimeout(function() {\r\n        if (isRecording) {\r\n          stopRecording();\r\n        } else {\r\n          startRecording();\r\n        }\r\n        doubleClickTimerRef.current = null;\r\n      }, 300); // 300ms内连续点击视为双击\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        /* 麦克风按钮样式 */\r\n        #mic-button-wrapper {\r\n          position: fixed;\r\n          z-index: 10000;\r\n          user-select: none;\r\n          pointer-events: auto;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          gap: 4px;\r\n        }\r\n\r\n        #listening-text {\r\n          font-size: 12px;\r\n          color: rgba(128, 128, 128, 0.7);\r\n          user-select: none;\r\n          pointer-events: none;\r\n          font-weight: 500;\r\n          opacity: 0;\r\n          transition: opacity 0.3s ease;\r\n          height: 16px;\r\n          line-height: 16px;\r\n        }\r\n        #listening-text.visible {\r\n          opacity: 1;\r\n        }\r\n\r\n        #mic-button {\r\n          background: none;\r\n          border: none;\r\n          padding: 0;\r\n          outline: none;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          filter: none;\r\n          transition: filter 0.3s ease;\r\n\r\n          width: 68px;\r\n          height: 68px;\r\n          cursor: grab;\r\n        }\r\n        #mic-button.recording {\r\n          filter: drop-shadow(0 0 5px red);\r\n        }\r\n        #mic-button img {\r\n          width: 48px;\r\n          height: 48px;\r\n          user-select: none;\r\n          pointer-events: none;\r\n          -webkit-user-drag: none;\r\n        }\r\n\r\n        /* 语言和声纹识别区域样式 */\r\n        #controls-container {\r\n          max-width: 700px;\r\n          margin: 20px auto 12px auto;\r\n          font-family: Arial, sans-serif;\r\n          color: white;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 20px;\r\n          user-select: none;\r\n          flex-wrap: wrap;\r\n        }\r\n        #controls-container label {\r\n          font-size: 14px;\r\n          user-select: none;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n        #langInput, #wakeWordsInput {\r\n          padding: 6px;\r\n          font-size: 12px;\r\n          width: 140px;\r\n          background-color: #333;\r\n          border: 1px solid #666;\r\n          border-radius: 3px;\r\n          color: white;\r\n          user-select: text;\r\n        }\r\n        #speakerVerificationLabel {\r\n          font-size: 14px;\r\n        }\r\n        #wakeWordToggleLabel {\r\n          font-size: 14px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n\r\n        /* 纯 CSS 玻璃态录制声纹按钮 */\r\n        #speaker-record-button {\r\n          position: relative;\r\n          overflow: hidden;\r\n          background: rgba(255, 255, 255, 0.1);\r\n          border-radius: 16px;\r\n          border: 1px solid rgba(255, 255, 255, 0.3);\r\n          color: white;\r\n          padding: 3px 10px;\r\n          font-size: 13px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          user-select: none;\r\n          box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\r\n          backdrop-filter: blur(10px);\r\n          -webkit-backdrop-filter: blur(12px);\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n          transition: all 0.3s ease;\r\n          display: inline-flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          outline: none;\r\n          border-image: none;\r\n        }\r\n        #speaker-record-button:hover:not(:disabled) {\r\n          background: rgba(255, 255, 255, 0.2);\r\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\r\n          transform: scale(1.05);\r\n          filter: brightness(1.1);\r\n        }\r\n        #speaker-record-button:disabled {\r\n          opacity: 0.4;\r\n          cursor: not-allowed;\r\n          box-shadow: none;\r\n          background: rgba(255, 255, 255, 0.05);\r\n          filter: none;\r\n          transform: none;\r\n        }\r\n\r\n        /* 额外光泽层 */\r\n        #speaker-record-button::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: -100%;\r\n          left: -100%;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\r\n          pointer-events: none;\r\n          filter: blur(10px);\r\n          opacity: 0.6;\r\n          transition: opacity 0.3s ease;\r\n          border-radius: inherit;\r\n          z-index: 0;\r\n        }\r\n\r\n        /* 保留波纹效果的样式 */\r\n        .ripple {\r\n          position: absolute;\r\n          border-radius: 150%;\r\n          background: rgba(91, 155, 255, 0.7);\r\n          animation: rippleEffect 1s ease-out;\r\n          pointer-events: none;\r\n          transform: scale(0);\r\n          opacity: 0.75;\r\n          z-index: 1;\r\n        }\r\n\r\n        @keyframes rippleEffect {\r\n          to {\r\n            transform: scale(4);\r\n            opacity: 0;\r\n          }\r\n        }\r\n\r\n        /* 新增：面板显示/隐藏控制 */\r\n        #audio-panel-content {\r\n          transition: all 0.3s ease;\r\n        }\r\n        #audio-panel-content.hidden {\r\n          display: none;\r\n        }\r\n      `}</style>\r\n\r\n      {/* 麦克风及“聆听中”容器，控制整体定位、拖拽 */}\r\n      <div\r\n        id=\"mic-button-wrapper\"\r\n        ref={micButtonRef}\r\n        style={{ left: 26, top: 26, position: 'fixed' }}\r\n      >\r\n        <div id=\"listening-text\" className={isRecording ? 'visible' : ''} aria-live=\"polite\" role=\"status\">\r\n          聆听中...\r\n        </div>\r\n\r\n        <button\r\n          id=\"mic-button\"\r\n          className={isRecording ? 'recording' : ''}\r\n          onClick={handleMicClick}\r\n          onDoubleClick={(e) => e.preventDefault()}\r\n          aria-label={isRecording ? '停止录音' : '开始录音'}\r\n          title={isRecording ? '点击停止录音，双击切换面板' : '点击开始录音，双击切换面板'}\r\n          type=\"button\"\r\n          disabled={isSpeakerRecording}\r\n        >\r\n          <img\r\n            src=\"/core/client/ai-butler/image/mic-icon.png\"\r\n            alt=\"麦克风\"\r\n            draggable={false}\r\n          />\r\n        </button>\r\n      </div>\r\n\r\n      {/* 新增：面板内容容器（控制显示/隐藏） */}\r\n      <div id=\"audio-panel-content\" className={panelVisible ? '' : 'hidden'}>\r\n        {/* 语言、声纹识别及语音唤醒控制区域 */}\r\n        <div id=\"controls-container\" aria-label=\"语音识别设置\">\r\n\r\n          <label htmlFor=\"langInput\">语言：</label>\r\n          <input\r\n            id=\"langInput\"\r\n            type=\"text\"\r\n            value={lang}\r\n            onChange={(e) => setLang(e.target.value)}\r\n            disabled={isRecording || isSpeakerRecording}\r\n            placeholder=\"auto\"\r\n            autoComplete=\"off\"\r\n          />\r\n\r\n          <label id=\"speakerVerificationLabel\" htmlFor=\"speakerVerificationCheckbox\">\r\n            <input\r\n              id=\"speakerVerificationCheckbox\"\r\n              type=\"checkbox\"\r\n              checked={speakerVerification}\r\n              disabled={isRecording || isSpeakerRecording}\r\n              onChange={(e) => setSpeakerVerification(e.target.checked)}\r\n            />\r\n            声纹识别\r\n          </label>\r\n\r\n          {/* 语音唤醒开关 */}\r\n          <label id=\"wakeWordToggleLabel\" htmlFor=\"wakeWordToggleCheckbox\">\r\n            <input\r\n              id=\"wakeWordToggleCheckbox\"\r\n              type=\"checkbox\"\r\n              checked={wakeWordEnabled}\r\n              disabled={isRecording || isSpeakerRecording}\r\n              onChange={(e) => setWakeWordEnabled(e.target.checked)}\r\n            />\r\n            语音唤醒\r\n          </label>\r\n\r\n          {/* 唤醒词输入框 */}\r\n          <label htmlFor=\"wakeWordsInput\" style={{ flexGrow: 1 }}>\r\n            唤醒词（拼音，多个用逗号分隔）：\r\n            <input\r\n              id=\"wakeWordsInput\"\r\n              type=\"text\"\r\n              value={wakeWords}\r\n              onChange={(e) => setWakeWords(e.target.value)}\r\n              disabled={isRecording || isSpeakerRecording || !wakeWordEnabled}\r\n              placeholder=\"如：zhan qi lai, ni hao xiao qian\"\r\n              autoComplete=\"off\"\r\n              style={{ marginLeft: 8 }}\r\n            />\r\n          </label>\r\n\r\n          {/* 纯 CSS 玻璃态录制声纹按钮 */}\r\n          <button\r\n            id=\"speaker-record-button\"\r\n            ref={speakerButtonRef}\r\n            onClick={handleSpeakerRecordClick}\r\n            disabled={isRecording || isSpeakerRecording}\r\n            type=\"button\"\r\n            aria-live=\"polite\"\r\n            aria-label=\"录制声纹\"\r\n            title=\"录制约2秒声音用于声纹识别，录制完成自动上传\"\r\n          >\r\n            录制声纹 (2秒)\r\n            {ripples.map(({ key, size, x, y }) => (\r\n              <span\r\n                key={key}\r\n                className=\"ripple\"\r\n                style={{\r\n                  width: size,\r\n                  height: size,\r\n                  top: y,\r\n                  left: x,\r\n                }}\r\n              />\r\n            ))}\r\n          </button>\r\n        </div>\r\n\r\n        {/* 声纹上传状态显示 */}\r\n        {speakerUploadStatus && (\r\n          <div\r\n            id=\"speaker-record-status\"\r\n            role=\"alert\"\r\n            aria-live=\"polite\"\r\n            aria-atomic=\"true\"\r\n            style={{ maxWidth: 700, margin: '4px auto 0 auto' }}\r\n          >\r\n            {speakerUploadStatus}\r\n          </div>\r\n        )}\r\n\r\n        {/* 转写结果展示 */}\r\n        <div\r\n          id=\"transcriptionResult\"\r\n          style={{\r\n            maxWidth: 700,\r\n            margin: '12px auto 20px auto',\r\n            fontFamily: 'Arial, sans-serif',\r\n            whiteSpace: 'pre-wrap',\r\n            backgroundColor: 'transparent',\r\n            padding: 10,\r\n            border: '1px solid transparent',\r\n            borderRadius: 5,\r\n            minHeight: 150,\r\n            fontFamily: 'monospace',\r\n            fontSize: 14,\r\n            overflowY: 'auto',\r\n            maxHeight: 300,\r\n            userSelect: 'text',\r\n            color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)',\r\n          }}\r\n        >\r\n          {transcription || '识别文字展示区...'}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}