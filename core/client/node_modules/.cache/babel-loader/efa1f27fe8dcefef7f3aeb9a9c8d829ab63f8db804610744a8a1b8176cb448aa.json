{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\OldWebRTC.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OldWebRTC({\n  renderVideo = true,\n  keepConnection = false\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const audioRef = useRef(null);\n  const pcRef = useRef(null);\n  const textareaRef = useRef(null);\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const animationFrameIdRef = useRef(null);\n  const reconnectTimerRef = useRef(null);\n  const pipVideoRef = useRef(null); // 自定义画中画 video 引用\n  const hiddenVideoRef = useRef(null); // 标准画中画隐藏视频元素\n  const isPiPModeChangingRef = useRef(false); // 画中画模式切换中标志\n  const pipExitReasonRef = useRef(''); // 画中画退出原因\n  const isStoppingRef = useRef(false); // 应用正在停止的标志\n\n  const containerRef = useRef(null);\n  const [useStun, setUseStun] = useState(false);\n  const [started, setStarted] = useState(false);\n  const [zoomWidth, setZoomWidth] = useState(600);\n  const [videoReady, setVideoReady] = useState(false);\n  const [alphaReady, setAlphaReady] = useState(false);\n  const [processingMode, setProcessingMode] = useState('rgba');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [debugInfo, setDebugInfo] = useState('');\n  const [connectionAttempts, setConnectionAttempts] = useState(0);\n  const [maxConnectionAttempts] = useState(5);\n  const [enablePip, setEnablePip] = useState(false); // 自定义画中画开关\n  const [isPiPMode, setIsPiPMode] = useState(false); // 标准画中画模式\n  const [isLoading, setIsLoading] = useState(false); // 加载状态\n\n  // 标记开始及视频就绪状态，方便外部跳出循环等\n  const isStartedRef = useRef(false);\n  const isVideoReadyRef = useRef(false);\n\n  // 记录画中画启用前的 canvas 状态\n  const pipCanvasStreamRef = useRef(null);\n  const wasCanvasVisibleRef = useRef(true);\n  const isPipActiveRef = useRef(false); // 画中画激活状态\n\n  // 新增：边缘平滑参数\n  const [edgeSmoothing, setEdgeSmoothing] = useState(2);\n  // 新增：绿幕敏感度参数\n  const [greenThreshold, setGreenThreshold] = useState(1.3);\n\n  // 新增：抠图色块选择，默认绿\n  const [chromaKeyColor, setChromaKeyColor] = useState('green'); // 'green' | 'blue' | 'red'\n  // 新增：色盘选择的自定义颜色\n  const [customChromaKeyColor, setCustomChromaKeyColor] = useState('#00FF00'); // 默认绿色\n  // 新增：自定义颜色模式开关\n  const [useCustomColor, setUseCustomColor] = useState(false);\n  const SIGNALING_URL = '/offer';\n  const zoomStep = 50;\n  const [chatPos, setChatPos] = useState(() => {\n    try {\n      const saved = localStorage.getItem('chatbox-position');\n      if (saved) {\n        const pos = JSON.parse(saved);\n        if (typeof pos.left === 'number' && typeof pos.top === 'number') {\n          return pos;\n        }\n      }\n    } catch {}\n    return {\n      left: 20,\n      top: 20\n    };\n  });\n  const draggingRef = useRef(false);\n  const dragOffsetRef = useRef({\n    x: 0,\n    y: 0\n  });\n  function onDragStart(e) {\n    var _e$touches;\n    if (e.target.tagName.toLowerCase() === 'textarea') {\n      draggingRef.current = false;\n      return;\n    }\n    draggingRef.current = true;\n    const targetRect = e.currentTarget.getBoundingClientRect();\n    if (e.type === 'touchstart' && (_e$touches = e.touches) !== null && _e$touches !== void 0 && _e$touches[0]) {\n      dragOffsetRef.current = {\n        x: e.touches[0].clientX - targetRect.left,\n        y: e.touches[0].clientY - targetRect.top\n      };\n    } else {\n      dragOffsetRef.current = {\n        x: e.clientX - targetRect.left,\n        y: e.clientY - targetRect.top\n      };\n    }\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  function onDragMove(e) {\n    var _e$touches2;\n    if (!draggingRef.current) return;\n    let clientX, clientY;\n    if (e.type === 'touchmove' && (_e$touches2 = e.touches) !== null && _e$touches2 !== void 0 && _e$touches2[0]) {\n      clientX = e.touches[0].clientX;\n      clientY = e.touches[0].clientY;\n    } else if (e.type === 'mousemove') {\n      clientX = e.clientX;\n      clientY = e.clientY;\n    } else {\n      return;\n    }\n    if (!containerRef.current || !e.currentTarget) return;\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const chatRect = e.currentTarget.getBoundingClientRect();\n    const chatWidth = chatRect.width;\n    const chatHeight = chatRect.height;\n    let newLeft = clientX - containerRect.left - dragOffsetRef.current.x;\n    let newTop = clientY - containerRef.current.offsetTop - dragOffsetRef.current.y;\n    newLeft = Math.min(Math.max(0, newLeft), containerRect.width - chatWidth);\n    newTop = Math.min(Math.max(0, newTop), containerRect.height - chatHeight);\n    setChatPos({\n      left: newLeft,\n      top: newTop\n    });\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  function onDragEnd(e) {\n    if (draggingRef.current) {\n      draggingRef.current = false;\n      localStorage.setItem('chatbox-position', JSON.stringify(chatPos));\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n  function calculateTransparencyPercentage(data) {\n    if (!data || data.length === 0) return '0.00';\n    let transparentPixels = 0;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] === 0) {\n        transparentPixels++;\n      }\n    }\n    return (transparentPixels / (data.length / 4) * 100).toFixed(2);\n  }\n\n  // 改进的绿幕抠图算法，增加边缘平滑处理，支持多色抠图（绿、蓝、红）和自定义颜色\n  function processVideoFrameWithGreenScreen() {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const ctx = ctxRef.current;\n    if (!video || !canvas || !ctx || !isStartedRef.current || !isVideoReadyRef.current) {\n      animationFrameIdRef.current = requestAnimationFrame(processVideoFrameWithGreenScreen);\n      return;\n    }\n    if (video.paused || video.ended) {\n      console.log('视频已暂停或结束，继续处理帧...');\n      animationFrameIdRef.current = requestAnimationFrame(processVideoFrameWithGreenScreen);\n      return;\n    }\n    try {\n      if (canvas.width !== video.videoWidth || canvas.height !== video.videoHeight) {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n      }\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const frame = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = frame.data;\n\n      // 解析自定义颜色为 RGB 值\n      const hexToRgb = hex => {\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n          r: parseInt(result[1], 16),\n          g: parseInt(result[2], 16),\n          b: parseInt(result[3], 16)\n        } : null;\n      };\n\n      // 自定义颜色的 RGB 值\n      const customRgb = hexToRgb(customChromaKeyColor);\n      const customR = (customRgb === null || customRgb === void 0 ? void 0 : customRgb.r) || 0;\n      const customG = (customRgb === null || customRgb === void 0 ? void 0 : customRgb.g) || 255;\n      const customB = (customRgb === null || customRgb === void 0 ? void 0 : customRgb.b) || 0;\n\n      // 选择抠图色块阈值和判断函数\n      // 这里使用简易的色块抠图逻辑，根据选择不同色块，调整判定条件\n      // 参数可以根据需要微调\n      function shouldMakeTransparent(r, g, b) {\n        const threshold = 100; // 基础阈值\n        const ratio = greenThreshold; // 之前的阈值参数，复用\n\n        if (useCustomColor) {\n          // 自定义颜色模式：计算与目标颜色的欧氏距离\n          const colorDistance = Math.sqrt(Math.pow(r - customR, 2) + Math.pow(g - customG, 2) + Math.pow(b - customB, 2));\n          // 距离越小越接近目标颜色，越应该透明\n          return colorDistance < threshold * ratio;\n        }\n\n        // 预设颜色模式\n        switch (chromaKeyColor) {\n          case 'green':\n            return g > threshold && r < threshold && b < threshold && g > r * ratio && g > b * ratio;\n          case 'blue':\n            return b > threshold && r < threshold && g < threshold && b > r * ratio && b > g * ratio;\n          case 'red':\n            return r > threshold && g < threshold && b < threshold && r > g * ratio && r > b * ratio;\n          default:\n            return false;\n        }\n      }\n\n      // 第一遍处理：基本抠图色块检测\n      for (let i = 0; i < data.length; i += 4) {\n        const r = data[i];\n        const g = data[i + 1];\n        const b = data[i + 2];\n        if (shouldMakeTransparent(r, g, b)) {\n          data[i + 3] = 0; // 完全透明\n        }\n      }\n\n      // 第二遍处理：边缘平滑（羽化效果）\n      if (edgeSmoothing > 0) {\n        const tempData = new Uint8ClampedArray(data);\n        const width = canvas.width;\n        const height = canvas.height;\n        const radius = edgeSmoothing;\n        for (let y = 0; y < height; y++) {\n          for (let x = 0; x < width; x++) {\n            const i = (y * width + x) * 4;\n            if (data[i + 3] === 0) continue; // 已经是透明的，不需要处理\n\n            // 计算周围的透明度\n            let transparentNeighbors = 0;\n            let totalNeighbors = 0;\n            for (let dy = -radius; dy <= radius; dy++) {\n              for (let dx = -radius; dx <= radius; dx++) {\n                const nx = x + dx;\n                const ny = y + dy;\n                if (nx < 0 || nx >= width || ny < 0 || ny >= height) continue;\n                const ni = (ny * width + nx) * 4;\n                if (tempData[ni + 3] === 0) {\n                  transparentNeighbors++;\n                }\n                totalNeighbors++;\n              }\n            }\n\n            // 如果周围有透明像素，说明这是边缘，应用羽化效果\n            if (transparentNeighbors > 0 && totalNeighbors > 0) {\n              const ratio = transparentNeighbors / totalNeighbors;\n              data[i + 3] = Math.round(data[i + 3] * (1 - ratio));\n            }\n          }\n        }\n      }\n      ctx.putImageData(frame, 0, 0);\n      const transparencyPercentage = calculateTransparencyPercentage(data);\n      setDebugInfo(`抠图透明度: ${transparencyPercentage}% | 边缘平滑: ${edgeSmoothing} | 阈值: ${greenThreshold} | 色块: ${useCustomColor ? '自定义' : chromaKeyColor}${useCustomColor ? `(${customChromaKeyColor})` : ''}`);\n      setAlphaReady(parseFloat(transparencyPercentage) > 1);\n    } catch (e) {\n      console.error('抠图处理异常:', e);\n      setErrorMessage('视频处理异常，请检查视频源');\n    }\n    animationFrameIdRef.current = requestAnimationFrame(processVideoFrameWithGreenScreen);\n  }\n  function fallbackToCanvasDrawing() {\n    if (animationFrameIdRef.current) {\n      cancelAnimationFrame(animationFrameIdRef.current);\n    }\n    processVideoFrameWithGreenScreen();\n  }\n  async function negotiate() {\n    const pc = pcRef.current;\n    if (!pc) return;\n    pc.addTransceiver('video', {\n      direction: 'recvonly'\n    });\n    pc.addTransceiver('audio', {\n      direction: 'recvonly'\n    });\n    try {\n      const offer = await pc.createOffer();\n      await pc.setLocalDescription(offer);\n      await new Promise(resolve => {\n        if (pc.iceGatheringState === 'complete') {\n          resolve();\n        } else {\n          const checkState = () => {\n            if (pc.iceGatheringState === 'complete') {\n              pc.removeEventListener('icegatheringstatechange', checkState);\n              resolve();\n            }\n          };\n          pc.addEventListener('icegatheringstatechange', checkState);\n        }\n      });\n      const response = await fetch(SIGNALING_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(pc.localDescription)\n      });\n      if (!response.ok) throw new Error(`服务器响应错误: ${response.status}`);\n      const answer = await response.json();\n      await pc.setRemoteDescription(answer);\n    } catch (e) {\n      setErrorMessage(`WebRTC连接失败: ${e.message}`);\n      if (connectionAttempts < maxConnectionAttempts) {\n        setConnectionAttempts(connectionAttempts + 1);\n        reconnectTimerRef.current = setTimeout(() => {\n          if (isStartedRef.current) {\n            stop();\n            start();\n          }\n        }, 2000);\n      } else {\n        alert('连接失败，请检查网络连接或刷新页面');\n      }\n    }\n  }\n  function zoomIn() {\n    setZoomWidth(w => w + zoomStep);\n  }\n  function zoomOut() {\n    setZoomWidth(w => w - zoomStep > 0 ? w - zoomStep : w);\n  }\n\n  // 改进的标准画中画实现，增加稳定性和详细日志\n  async function togglePictureInPicture() {\n    // 如果正在切换模式，不重复操作\n    if (isPiPModeChangingRef.current) {\n      console.log('忽略画中画切换请求：正在切换中');\n      return;\n    }\n    isPiPModeChangingRef.current = true;\n    pipExitReasonRef.current = '';\n    try {\n      if (document.pictureInPictureElement) {\n        // 如果已有画中画元素，则退出\n        isStoppingRef.current = true;\n        console.log('尝试退出标准画中画模式');\n        await document.exitPictureInPicture();\n        console.log('已成功退出标准画中画模式');\n        isStoppingRef.current = false;\n        setIsPiPMode(false);\n      } else {\n        // 进入标准画中画模式\n        console.log('尝试进入标准画中画模式');\n\n        // 检查浏览器是否支持画中画\n        if (!document.pictureInPictureEnabled) {\n          throw new Error('浏览器不支持画中画功能');\n        }\n\n        // 创建或获取隐藏的视频元素\n        if (!hiddenVideoRef.current) {\n          const videoElement = document.createElement('video');\n          videoElement.style.display = 'none';\n          document.body.appendChild(videoElement);\n          hiddenVideoRef.current = videoElement;\n\n          // 添加事件监听，处理画中画状态变化\n          videoElement.addEventListener('enterpictureinpicture', () => {\n            console.log('进入标准画中画模式 - 视频元素状态:', videoElement.readyState);\n            console.log('画中画元素尺寸:', videoElement.videoWidth, 'x', videoElement.videoHeight);\n            setIsPiPMode(true);\n            isPiPModeChangingRef.current = false;\n          });\n          videoElement.addEventListener('leavepictureinpicture', () => {\n            console.log('退出标准画中画模式 - 原因:', pipExitReasonRef.current || '未知');\n            console.log('画中画退出时视频元素状态:', videoElement.readyState);\n            setIsPiPMode(false);\n            isPiPModeChangingRef.current = false;\n          });\n\n          // 添加错误监听\n          videoElement.addEventListener('error', e => {\n            console.error('画中画视频元素错误:', e);\n            console.error('错误详情:', videoElement.error);\n            setErrorMessage('画中画视频元素错误');\n            isPiPModeChangingRef.current = false;\n          });\n\n          // 添加暂停事件监听\n          videoElement.addEventListener('pause', () => {\n            console.log('画中画视频暂停');\n            if (isPiPMode) {\n              pipExitReasonRef.current = '视频暂停';\n              // 尝试继续播放\n              videoElement.play().catch(err => {\n                console.error('画中画视频暂停后尝试播放失败:', err);\n              });\n            }\n          });\n\n          // 添加 ended 事件监听\n          videoElement.addEventListener('ended', () => {\n            console.log('画中画视频播放结束');\n            if (isPiPMode) {\n              pipExitReasonRef.current = '视频播放结束';\n            }\n          });\n\n          // 添加 loadedmetadata 事件监听\n          videoElement.addEventListener('loadedmetadata', () => {\n            console.log('画中画视频元数据加载完成:', videoElement.videoWidth, 'x', videoElement.videoHeight, 'duration:', videoElement.duration);\n          });\n\n          // 添加 timeupdate 事件监听，用于检测视频是否在播放\n          let lastTime = 0;\n          videoElement.addEventListener('timeupdate', () => {\n            if (isPiPMode && videoElement.currentTime === lastTime && !videoElement.paused) {\n              console.log('画中画视频时间未更新，可能已停止');\n              pipExitReasonRef.current = '视频时间未更新';\n            }\n            lastTime = videoElement.currentTime;\n          });\n        }\n\n        // 确保Canvas已准备好\n        if (!canvasRef.current || !ctxRef.current) {\n          setErrorMessage('Canvas未初始化，无法启动画中画');\n          isPiPModeChangingRef.current = false;\n          return;\n        }\n\n        // 检查Canvas是否有内容\n        if (canvasRef.current.width === 0 || canvasRef.current.height === 0) {\n          console.error('Canvas尺寸为0，无法启动画中画');\n          setErrorMessage('Canvas尺寸为0，无法启动画中画');\n          isPiPModeChangingRef.current = false;\n          return;\n        }\n\n        // 获取Canvas流并设置到隐藏视频元素\n        const stream = canvasRef.current.captureStream(30);\n        hiddenVideoRef.current.srcObject = stream;\n        console.log('创建Canvas流成功，帧率:', 30);\n\n        // 保存当前流的引用，用于后续检查\n        pipCanvasStreamRef.current = stream;\n\n        // 检查流是否有效\n        if (!stream || stream.getTracks().length === 0) {\n          throw new Error('Canvas流为空或无效');\n        }\n\n        // 播放视频\n        console.log('尝试播放画中画视频元素...');\n        await hiddenVideoRef.current.play();\n        console.log('画中画视频元素播放成功');\n\n        // 进入画中画模式\n        console.log('尝试请求进入画中画模式...');\n        await hiddenVideoRef.current.requestPictureInPicture();\n        console.log('成功进入画中画模式');\n      }\n    } catch (e) {\n      console.error('标准画中画错误:', e);\n      console.error('错误堆栈:', e.stack);\n      setErrorMessage(`标准画中画错误: ${e.message}`);\n      pipExitReasonRef.current = e.message;\n\n      // 如果标准画中画失败，尝试使用自定义画中画\n      if (!isPiPMode) {\n        setEnablePip(v => !v);\n      }\n    } finally {\n      isPiPModeChangingRef.current = false;\n    }\n  }\n  function start() {\n    if (isStartedRef.current) return;\n    const config = {\n      sdpSemantics: 'unified-plan'\n    };\n    if (useStun) {\n      config.iceServers = [{\n        urls: 'stun:stun.l.google.com:19302'\n      }];\n    }\n    const pc = new RTCPeerConnection(config);\n    pcRef.current = pc;\n    isStartedRef.current = true;\n    setConnectionAttempts(0);\n    setIsLoading(true);\n    setErrorMessage('');\n    pc.addEventListener('connectionstatechange', () => {\n      if (pc.connectionState === 'failed' || pc.connectionState === 'disconnected') {\n        // 如果处于画中画模式，尝试重新连接而不是完全停止\n        if (isPiPMode) {\n          console.log('WebRTC连接断开，但处于画中画模式，尝试重新连接');\n          setErrorMessage('WebRTC连接断开，尝试重连');\n          if (!reconnectTimerRef.current) {\n            reconnectTimerRef.current = setTimeout(() => {\n              if (isStartedRef.current) {\n                // 只重新协商连接，不停止整个应用\n                negotiate();\n              }\n            }, 2000);\n          }\n        } else if (!isStoppingRef.current) {\n          console.log('WebRTC连接断开，尝试重新连接');\n          setErrorMessage('WebRTC连接断开，尝试重连');\n          if (connectionAttempts < maxConnectionAttempts) {\n            setConnectionAttempts(connectionAttempts + 1);\n            reconnectTimerRef.current = setTimeout(() => {\n              if (isStartedRef.current) {\n                stop();\n                start();\n              }\n            }, 2000);\n          } else {\n            setErrorMessage('连接尝试次数过多，连接已断开');\n          }\n        }\n      } else if (pc.connectionState === 'connected') {\n        console.log('WebRTC连接已建立');\n        setErrorMessage('');\n        setIsLoading(false);\n      }\n    });\n    pc.addEventListener('track', event => {\n      console.log('收到媒体轨道:', event.track.kind);\n      if (event.track.kind === 'video') {\n        videoRef.current.srcObject = event.streams[0];\n        setVideoReady(true);\n        isVideoReadyRef.current = true;\n        if (!animationFrameIdRef.current) {\n          fallbackToCanvasDrawing();\n        }\n      } else if (event.track.kind === 'audio') {\n        audioRef.current.srcObject = event.streams[0];\n      }\n    });\n    negotiate();\n    setStarted(true);\n  }\n  function stop() {\n    if (!isStartedRef.current) return;\n    isStoppingRef.current = true; // 标记正在停止\n    if (reconnectTimerRef.current) {\n      clearTimeout(reconnectTimerRef.current);\n      reconnectTimerRef.current = null;\n    }\n    if (animationFrameIdRef.current) {\n      cancelAnimationFrame(animationFrameIdRef.current);\n      animationFrameIdRef.current = null;\n    }\n\n    // 记录画中画退出原因\n    if (isPiPMode) {\n      pipExitReasonRef.current = '手动停止应用';\n    }\n\n    // 停止画中画流\n    if (pipCanvasStreamRef.current) {\n      pipCanvasStreamRef.current.getTracks().forEach(track => track.stop());\n      pipCanvasStreamRef.current = null;\n    }\n\n    // 退出标准画中画模式\n    if (document.pictureInPictureElement) {\n      document.exitPictureInPicture().catch(e => {\n        console.error('退出画中画模式失败:', e);\n      });\n    }\n\n    // 停止媒体轨道\n    if (videoRef.current && videoRef.current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n    if (audioRef.current && audioRef.current.srcObject) {\n      audioRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n\n    // 关闭 RTCPeerConnection\n    if (pcRef.current) {\n      pcRef.current.close();\n      pcRef.current = null;\n    }\n\n    // 重置状态\n    setStarted(false);\n    setVideoReady(false);\n    isStartedRef.current = false;\n    isVideoReadyRef.current = false;\n    setIsLoading(false);\n\n    // 如果不需要保持连接，则清理\n    if (!keepConnection) {\n      setUseStun(false);\n      setZoomWidth(600);\n      setAlphaReady(false);\n      setProcessingMode('rgba');\n      setErrorMessage('');\n      setDebugInfo('');\n      setConnectionAttempts(0);\n      setEnablePip(false);\n      setIsPiPMode(false);\n    }\n    isStoppingRef.current = false; // 标记停止完成\n  }\n\n  // 清理资源\n  useEffect(() => {\n    return () => {\n      stop();\n    };\n  }, []);\n\n  // 自定义画中画效果\n  useEffect(() => {\n    if (enablePip && canvasRef.current && videoRef.current) {\n      // 保存当前 canvas 状态\n      wasCanvasVisibleRef.current = canvasRef.current.style.display !== 'none';\n\n      // 创建画中画元素\n      if (!pipVideoRef.current) {\n        const pipVideo = document.createElement('video');\n        pipVideo.style.position = 'fixed';\n        pipVideo.style.bottom = '20px';\n        pipVideo.style.right = '20px';\n        pipVideo.style.width = '200px';\n        pipVideo.style.borderRadius = '8px';\n        pipVideo.style.boxShadow = '0 4px 15px rgba(0,0,0,0.3)';\n        pipVideo.style.zIndex = '1000';\n        pipVideo.style.cursor = 'move';\n        pipVideo.controls = false;\n        pipVideo.muted = true;\n        document.body.appendChild(pipVideo);\n        pipVideoRef.current = pipVideo;\n\n        // 添加拖动功能\n        let isDragging = false;\n        let offsetX, offsetY;\n        pipVideo.addEventListener('mousedown', e => {\n          isDragging = true;\n          offsetX = e.clientX - pipVideo.getBoundingClientRect().left;\n          offsetY = e.clientY - pipVideo.getBoundingClientRect().top;\n          pipVideo.style.cursor = 'grabbing';\n          e.preventDefault();\n        });\n        document.addEventListener('mousemove', e => {\n          if (isDragging) {\n            const x = e.clientX - offsetX;\n            const y = e.clientY - offsetY;\n            pipVideo.style.left = `${x}px`;\n            pipVideo.style.top = `${y}px`;\n            pipVideo.style.bottom = 'auto';\n            pipVideo.style.right = 'auto';\n          }\n        });\n        document.addEventListener('mouseup', () => {\n          isDragging = false;\n          pipVideo.style.cursor = 'move';\n        });\n\n        // 添加双击关闭\n        pipVideo.addEventListener('dblclick', () => {\n          setEnablePip(false);\n        });\n      }\n\n      // 设置视频源\n      if (canvasRef.current && canvasRef.current.captureStream) {\n        const stream = canvasRef.current.captureStream(30);\n        pipVideoRef.current.srcObject = stream;\n        pipVideoRef.current.play().catch(e => {\n          console.error('自定义画中画播放失败:', e);\n        });\n        isPipActiveRef.current = true;\n\n        // 隐藏原 canvas\n        if (wasCanvasVisibleRef.current) {\n          canvasRef.current.style.display = 'none';\n        }\n      }\n    } else if (!enablePip && pipVideoRef.current && isPipActiveRef.current) {\n      // 停止画中画流\n      if (pipVideoRef.current.srcObject) {\n        pipVideoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n\n      // 移除画中画元素\n      if (pipVideoRef.current.parentNode) {\n        pipVideoRef.current.parentNode.removeChild(pipVideoRef.current);\n      }\n      pipVideoRef.current = null;\n      isPipActiveRef.current = false;\n\n      // 恢复 canvas 显示\n      if (wasCanvasVisibleRef.current) {\n        canvasRef.current.style.display = '';\n      }\n    }\n  }, [enablePip]);\n\n  // 处理窗口大小变化\n  useEffect(() => {\n    function handleResize() {\n      // 调整聊天框位置，防止溢出\n      if (containerRef.current) {\n        const containerRect = containerRef.current.getBoundingClientRect();\n        const chatWidth = 300; // 假设聊天框宽度\n        const chatHeight = 200; // 假设聊天框高度\n\n        if (chatPos.left + chatWidth > containerRect.width) {\n          setChatPos(prev => ({\n            ...prev,\n            left: Math.max(0, containerRect.width - chatWidth)\n          }));\n        }\n        if (chatPos.top + chatHeight > containerRect.height) {\n          setChatPos(prev => ({\n            ...prev,\n            top: Math.max(0, containerRect.height - chatHeight)\n          }));\n        }\n      }\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [chatPos]);\n\n  // 显示加载状态\n  const LoadingIndicator = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u6B63\\u5728\\u8FDE\\u63A5...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 749,\n    columnNumber: 5\n  }, this);\n\n  // 显示控制面板\n  const ControlPanel = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      disabled: started,\n      children: \"\\u5F00\\u59CB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stop,\n      disabled: !started,\n      children: \"\\u505C\\u6B62\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: zoomIn,\n      children: \"\\u653E\\u5927\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: zoomOut,\n      children: \"\\u7F29\\u5C0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePictureInPicture,\n      children: [isPiPMode ? '退出' : '进入', \"\\u753B\\u4E2D\\u753B\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEnablePip(!enablePip),\n      children: [enablePip ? '关闭' : '开启', \"\\u81EA\\u5B9A\\u4E49\\u753B\\u4E2D\\u753B\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: useStun,\n        onChange: () => setUseStun(!useStun)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }, this), \"\\u4F7F\\u7528STUN\\u670D\\u52A1\\u5668\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 757,\n    columnNumber: 5\n  }, this);\n\n  // 显示绿幕设置面板\n  const ChromaKeySettings = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chroma-key-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u7EFF\\u5E55\\u8BBE\\u7F6E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u8FB9\\u7F18\\u5E73\\u6ED1:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"10\",\n        step: \"1\",\n        value: edgeSmoothing,\n        onChange: e => setEdgeSmoothing(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: edgeSmoothing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u654F\\u611F\\u5EA6:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0.5\",\n        max: \"5\",\n        step: \"0.1\",\n        value: greenThreshold,\n        onChange: e => setGreenThreshold(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: greenThreshold.toFixed(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u62A0\\u56FE\\u8272\\u5757:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: chromaKeyColor,\n        onChange: e => setChromaKeyColor(e.target.value),\n        disabled: useCustomColor,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"green\",\n          children: \"\\u7EFF\\u8272\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"blue\",\n          children: \"\\u84DD\\u8272\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"red\",\n          children: \"\\u7EA2\\u8272\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: useCustomColor,\n          onChange: () => setUseCustomColor(!useCustomColor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 11\n        }, this), \"\\u4F7F\\u7528\\u81EA\\u5B9A\\u4E49\\u989C\\u8272\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: customChromaKeyColor,\n        onChange: e => setCustomChromaKeyColor(e.target.value),\n        disabled: !useCustomColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 785,\n    columnNumber: 5\n  }, this);\n\n  // 显示聊天框\n  const ChatBox = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    style: {\n      left: `${chatPos.left}px`,\n      top: `${chatPos.top}px`\n    },\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseMove: onDragMove,\n    onTouchMove: onDragMove,\n    onMouseUp: onDragEnd,\n    onTouchEnd: onDragEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u804A\\u5929\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u6B22\\u8FCE\\u4F7F\\u7528\\u7EFF\\u5E55\\u62A0\\u56FE\\u7CFB\\u7EDF!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8C03\\u6574\\u53F3\\u4FA7\\u63A7\\u5236\\u9762\\u677F\\u53EF\\u4EE5\\u4F18\\u5316\\u62A0\\u56FE\\u6548\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textareaRef,\n        placeholder: \"\\u8F93\\u5165\\u6D88\\u606F...\",\n        rows: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u53D1\\u9001\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 844,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"webrtc-container\",\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .webrtc-container {\n            position: relative;\n            width: 100%;\n            height: 100vh;\n            overflow: hidden;\n            background-color: #1a1a1a;\n            color: white;\n            font-family: Arial, sans-serif;\n          }\n          \n          .video-container {\n            position: relative;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n          \n          video {\n            max-width: 100%;\n            max-height: 100%;\n            object-fit: contain;\n            display: none;\n          }\n          \n          canvas {\n            max-width: ${zoomWidth}px;\n            max-height: 100%;\n            box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n            background-color: #000;\n          }\n          \n          .control-panel {\n            position: absolute;\n            top: 10px;\n            left: 10px;\n            display: flex;\n            flex-wrap: wrap;\n            gap: 5px;\n            zetta-index: 10;\n          }\n          \n          .control-panel button,\n          .control-panel label {\n            padding: 5px 10px;\n            background-color: #333;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 14px;\n          }\n          \n          .control-panel button:hover,\n          .control-panel label:hover {\n            background-color: #555;\n          }\n          \n          .control-panel button:disabled {\n            background-color: #222;\n            color: #666;\n            cursor: not-allowed;\n          }\n          \n          .chroma-key-settings {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            width: 250px;\n            background-color: rgba(0, 0, 0, 0.7);\n            padding: 10px;\n            border-radius: 8px;\n            z-index: 10;\n          }\n          \n          .chroma-key-settings div {\n            margin-bottom: 10px;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n          }\n          \n          .chroma-key-settings label {\n            min-width: 80px;\n          }\n          \n          .chroma-key-settings input[type=\"range\"] {\n            flex-grow: 1;\n          }\n          \n          .chat-box {\n            position: absolute;\n            width: 300px;\n            height: 250px;\n            background-color: rgba(0, 0, 0, 0.7);\n            border-radius: 8px;\n            display: flex;\n            flex-direction: zetta;\n            z-index: 10;\n            cursor: move;\n          }\n          \n          .chat-header {\n            padding: 8px 10px;\n            background-color: #222;\n            border-top-left-radius: 8px;\n            border-top-right-radius: 8px;\n          }\n          \n          .chat-messages {\n            flex-grow: 1;\n            padding: 10px;\n            overflow-y: auto;\n          }\n          \n          .chat-input {\n            display: flex;\n            padding: 10px;\n            border-top: 1px solid #333;\n          }\n          \n          .chat-input textarea {\n            flex-grow: 1;\n            padding: 5px;\n            background-color: #333;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            resize: none;\n          }\n          \n          .chat-input button {\n            margin-left: 5px;\n            padding: 5px 10px;\n            background-color: #4CAF50;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n          }\n          \n          .chat-input button:hover {\n            background-color: #45a049;\n          }\n          \n          .loading-indicator {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            text-align: center;\n            z-index: 20;\n          }\n          \n          .spinner {\n            width: 40px;\n            height: 40px;\n            margin: 0 auto 10px;\n            border: 4px solid #f3f3f3;\n            border-top: 4px solid #3498db;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n          }\n          \n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n          \n          .debug-info {\n            position: absolute;\n            bottom: 10px;\n            left: 10px;\n            background-color: rgba(0, 0, 0, 0.7);\n            padding: 5px 10px;\n            border-radius: 4px;\n            font-size: 12px;\n            z-index: 10;\n          }\n          \n          .error-message {\n            position: absolute;\n            bottom: 10px;\n            left: 50%;\n            transform: translateX(-50%);\n            background-color: rgba(255, 0, 0, 0.7);\n            padding: 5px 10px;\n            border-radius: 4px;\n            font-size: 14px;\n            z-index: 10;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChromaKeySettings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1081,\n      columnNumber: 21\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 9\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: debugInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 873,\n    columnNumber: 5\n  }, this);\n}\n_s(OldWebRTC, \"Ib1EEJgVmav/QiQgfp0LrN6PAs4=\");\n_c = OldWebRTC;\nvar _c;\n$RefreshReg$(_c, \"OldWebRTC\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","OldWebRTC","renderVideo","keepConnection","_s","videoRef","audioRef","pcRef","textareaRef","canvasRef","ctxRef","animationFrameIdRef","reconnectTimerRef","pipVideoRef","hiddenVideoRef","isPiPModeChangingRef","pipExitReasonRef","isStoppingRef","containerRef","useStun","setUseStun","started","setStarted","zoomWidth","setZoomWidth","videoReady","setVideoReady","alphaReady","setAlphaReady","processingMode","setProcessingMode","errorMessage","setErrorMessage","debugInfo","setDebugInfo","connectionAttempts","setConnectionAttempts","maxConnectionAttempts","enablePip","setEnablePip","isPiPMode","setIsPiPMode","isLoading","setIsLoading","isStartedRef","isVideoReadyRef","pipCanvasStreamRef","wasCanvasVisibleRef","isPipActiveRef","edgeSmoothing","setEdgeSmoothing","greenThreshold","setGreenThreshold","chromaKeyColor","setChromaKeyColor","customChromaKeyColor","setCustomChromaKeyColor","useCustomColor","setUseCustomColor","SIGNALING_URL","zoomStep","chatPos","setChatPos","saved","localStorage","getItem","pos","JSON","parse","left","top","draggingRef","dragOffsetRef","x","y","onDragStart","e","_e$touches","target","tagName","toLowerCase","current","targetRect","currentTarget","getBoundingClientRect","type","touches","clientX","clientY","preventDefault","stopPropagation","onDragMove","_e$touches2","containerRect","chatRect","chatWidth","width","chatHeight","height","newLeft","newTop","offsetTop","Math","min","max","onDragEnd","setItem","stringify","calculateTransparencyPercentage","data","length","transparentPixels","i","toFixed","processVideoFrameWithGreenScreen","video","canvas","ctx","requestAnimationFrame","paused","ended","console","log","videoWidth","videoHeight","clearRect","drawImage","frame","getImageData","hexToRgb","hex","result","exec","r","parseInt","g","b","customRgb","customR","customG","customB","shouldMakeTransparent","threshold","ratio","colorDistance","sqrt","pow","tempData","Uint8ClampedArray","radius","transparentNeighbors","totalNeighbors","dy","dx","nx","ny","ni","round","putImageData","transparencyPercentage","parseFloat","error","fallbackToCanvasDrawing","cancelAnimationFrame","negotiate","pc","addTransceiver","direction","offer","createOffer","setLocalDescription","Promise","resolve","iceGatheringState","checkState","removeEventListener","addEventListener","response","fetch","method","headers","body","localDescription","ok","Error","status","answer","json","setRemoteDescription","message","setTimeout","stop","start","alert","zoomIn","w","zoomOut","togglePictureInPicture","document","pictureInPictureElement","exitPictureInPicture","pictureInPictureEnabled","videoElement","createElement","style","display","appendChild","readyState","play","catch","err","duration","lastTime","currentTime","stream","captureStream","srcObject","getTracks","requestPictureInPicture","stack","v","config","sdpSemantics","iceServers","urls","RTCPeerConnection","connectionState","event","track","kind","streams","clearTimeout","forEach","close","pipVideo","position","bottom","right","borderRadius","boxShadow","zIndex","cursor","controls","muted","isDragging","offsetX","offsetY","parentNode","removeChild","handleResize","prev","window","LoadingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ControlPanel","onClick","disabled","checked","onChange","ChromaKeySettings","step","value","Number","ChatBox","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","ref","placeholder","rows","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/OldWebRTC.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nexport default function OldWebRTC({ renderVideo = true, keepConnection = false }) {\r\n  const videoRef = useRef(null);\r\n  const audioRef = useRef(null);\r\n  const pcRef = useRef(null);\r\n  const textareaRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const animationFrameIdRef = useRef(null);\r\n  const reconnectTimerRef = useRef(null);\r\n  const pipVideoRef = useRef(null); // 自定义画中画 video 引用\r\n  const hiddenVideoRef = useRef(null); // 标准画中画隐藏视频元素\r\n  const isPiPModeChangingRef = useRef(false); // 画中画模式切换中标志\r\n  const pipExitReasonRef = useRef(''); // 画中画退出原因\r\n  const isStoppingRef = useRef(false); // 应用正在停止的标志\r\n\r\n  const containerRef = useRef(null);\r\n\r\n  const [useStun, setUseStun] = useState(false);\r\n  const [started, setStarted] = useState(false);\r\n  const [zoomWidth, setZoomWidth] = useState(600);\r\n  const [videoReady, setVideoReady] = useState(false);\r\n  const [alphaReady, setAlphaReady] = useState(false);\r\n  const [processingMode, setProcessingMode] = useState('rgba');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [debugInfo, setDebugInfo] = useState('');\r\n  const [connectionAttempts, setConnectionAttempts] = useState(0);\r\n  const [maxConnectionAttempts] = useState(5);\r\n  const [enablePip, setEnablePip] = useState(false); // 自定义画中画开关\r\n  const [isPiPMode, setIsPiPMode] = useState(false); // 标准画中画模式\r\n  const [isLoading, setIsLoading] = useState(false); // 加载状态\r\n\r\n  // 标记开始及视频就绪状态，方便外部跳出循环等\r\n  const isStartedRef = useRef(false);\r\n  const isVideoReadyRef = useRef(false);\r\n  \r\n  // 记录画中画启用前的 canvas 状态\r\n  const pipCanvasStreamRef = useRef(null);\r\n  const wasCanvasVisibleRef = useRef(true);\r\n  const isPipActiveRef = useRef(false); // 画中画激活状态\r\n\r\n  // 新增：边缘平滑参数\r\n  const [edgeSmoothing, setEdgeSmoothing] = useState(2);\r\n  // 新增：绿幕敏感度参数\r\n  const [greenThreshold, setGreenThreshold] = useState(1.3);\r\n\r\n  // 新增：抠图色块选择，默认绿\r\n  const [chromaKeyColor, setChromaKeyColor] = useState('green'); // 'green' | 'blue' | 'red'\r\n  // 新增：色盘选择的自定义颜色\r\n  const [customChromaKeyColor, setCustomChromaKeyColor] = useState('#00FF00'); // 默认绿色\r\n  // 新增：自定义颜色模式开关\r\n  const [useCustomColor, setUseCustomColor] = useState(false);\r\n\r\n  const SIGNALING_URL = '/offer';\r\n  const zoomStep = 50;\r\n\r\n  const [chatPos, setChatPos] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem('chatbox-position');\r\n      if (saved) {\r\n        const pos = JSON.parse(saved);\r\n        if (typeof pos.left === 'number' && typeof pos.top === 'number') {\r\n          return pos;\r\n        }\r\n      }\r\n    } catch {}\r\n    return { left: 20, top: 20 };\r\n  });\r\n\r\n  const draggingRef = useRef(false);\r\n  const dragOffsetRef = useRef({ x: 0, y: 0 });\r\n\r\n  function onDragStart(e) {\r\n    if (e.target.tagName.toLowerCase() === 'textarea') {\r\n      draggingRef.current = false;\r\n      return;\r\n    }\r\n    draggingRef.current = true;\r\n    const targetRect = e.currentTarget.getBoundingClientRect();\r\n    if (e.type === 'touchstart' && e.touches?.[0]) {\r\n      dragOffsetRef.current = {\r\n        x: e.touches[0].clientX - targetRect.left,\r\n        y: e.touches[0].clientY - targetRect.top,\r\n      };\r\n    } else {\r\n      dragOffsetRef.current = {\r\n        x: e.clientX - targetRect.left,\r\n        y: e.clientY - targetRect.top,\r\n      };\r\n    }\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  function onDragMove(e) {\r\n    if (!draggingRef.current) return;\r\n    let clientX, clientY;\r\n    if (e.type === 'touchmove' && e.touches?.[0]) {\r\n      clientX = e.touches[0].clientX;\r\n      clientY = e.touches[0].clientY;\r\n    } else if (e.type === 'mousemove') {\r\n      clientX = e.clientX;\r\n      clientY = e.clientY;\r\n    } else {\r\n      return;\r\n    }\r\n    if (!containerRef.current || !e.currentTarget) return;\r\n    const containerRect = containerRef.current.getBoundingClientRect();\r\n    const chatRect = e.currentTarget.getBoundingClientRect();\r\n    const chatWidth = chatRect.width;\r\n    const chatHeight = chatRect.height;\r\n    let newLeft = clientX - containerRect.left - dragOffsetRef.current.x;\r\n    let newTop = clientY - containerRef.current.offsetTop - dragOffsetRef.current.y;\r\n    newLeft = Math.min(Math.max(0, newLeft), containerRect.width - chatWidth);\r\n    newTop = Math.min(Math.max(0, newTop), containerRect.height - chatHeight);\r\n    setChatPos({ left: newLeft, top: newTop });\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  function onDragEnd(e) {\r\n    if (draggingRef.current) {\r\n      draggingRef.current = false;\r\n      localStorage.setItem('chatbox-position', JSON.stringify(chatPos));\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  function calculateTransparencyPercentage(data) {\r\n    if (!data || data.length === 0) return '0.00';\r\n    let transparentPixels = 0;\r\n    for (let i = 3; i < data.length; i += 4) {\r\n      if (data[i] === 0) {\r\n        transparentPixels++;\r\n      }\r\n    }\r\n    return ((transparentPixels / (data.length / 4)) * 100).toFixed(2);\r\n  }\r\n\r\n  // 改进的绿幕抠图算法，增加边缘平滑处理，支持多色抠图（绿、蓝、红）和自定义颜色\r\n  function processVideoFrameWithGreenScreen() {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    const ctx = ctxRef.current;\r\n    if (!video || !canvas || !ctx || !isStartedRef.current || !isVideoReadyRef.current) {\r\n      animationFrameIdRef.current = requestAnimationFrame(processVideoFrameWithGreenScreen);\r\n      return;\r\n    }\r\n    if (video.paused || video.ended) {\r\n      console.log('视频已暂停或结束，继续处理帧...');\r\n      animationFrameIdRef.current = requestAnimationFrame(processVideoFrameWithGreenScreen);\r\n      return;\r\n    }\r\n    try {\r\n      if (canvas.width !== video.videoWidth || canvas.height !== video.videoHeight) {\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n      }\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n      const frame = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n      const data = frame.data;\r\n\r\n      // 解析自定义颜色为 RGB 值\r\n      const hexToRgb = (hex) => {\r\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n          r: parseInt(result[1], 16),\r\n          g: parseInt(result[2], 16),\r\n          b: parseInt(result[3], 16)\r\n        } : null;\r\n      };\r\n      \r\n      // 自定义颜色的 RGB 值\r\n      const customRgb = hexToRgb(customChromaKeyColor);\r\n      const customR = customRgb?.r || 0;\r\n      const customG = customRgb?.g || 255;\r\n      const customB = customRgb?.b || 0;\r\n      \r\n      // 选择抠图色块阈值和判断函数\r\n      // 这里使用简易的色块抠图逻辑，根据选择不同色块，调整判定条件\r\n      // 参数可以根据需要微调\r\n      function shouldMakeTransparent(r, g, b) {\r\n        const threshold = 100; // 基础阈值\r\n        const ratio = greenThreshold; // 之前的阈值参数，复用\r\n        \r\n        if (useCustomColor) {\r\n          // 自定义颜色模式：计算与目标颜色的欧氏距离\r\n          const colorDistance = Math.sqrt(\r\n            Math.pow(r - customR, 2) + \r\n            Math.pow(g - customG, 2) + \r\n            Math.pow(b - customB, 2)\r\n          );\r\n          // 距离越小越接近目标颜色，越应该透明\r\n          return colorDistance < threshold * ratio;\r\n        }\r\n        \r\n        // 预设颜色模式\r\n        switch (chromaKeyColor) {\r\n          case 'green':\r\n            return g > threshold && r < threshold && b < threshold && g > r * ratio && g > b * ratio;\r\n          case 'blue':\r\n            return b > threshold && r < threshold && g < threshold && b > r * ratio && b > g * ratio;\r\n          case 'red':\r\n            return r > threshold && g < threshold && b < threshold && r > g * ratio && r > b * ratio;\r\n          default:\r\n            return false;\r\n        }\r\n      }\r\n\r\n      // 第一遍处理：基本抠图色块检测\r\n      for (let i = 0; i < data.length; i += 4) {\r\n        const r = data[i];\r\n        const g = data[i + 1];\r\n        const b = data[i + 2];\r\n\r\n        if (shouldMakeTransparent(r, g, b)) {\r\n          data[i + 3] = 0; // 完全透明\r\n        }\r\n      }\r\n\r\n      // 第二遍处理：边缘平滑（羽化效果）\r\n      if (edgeSmoothing > 0) {\r\n        const tempData = new Uint8ClampedArray(data);\r\n        const width = canvas.width;\r\n        const height = canvas.height;\r\n        const radius = edgeSmoothing;\r\n\r\n        for (let y = 0; y < height; y++) {\r\n          for (let x = 0; x < width; x++) {\r\n            const i = (y * width + x) * 4;\r\n            if (data[i + 3] === 0) continue; // 已经是透明的，不需要处理\r\n\r\n            // 计算周围的透明度\r\n            let transparentNeighbors = 0;\r\n            let totalNeighbors = 0;\r\n\r\n            for (let dy = -radius; dy <= radius; dy++) {\r\n              for (let dx = -radius; dx <= radius; dx++) {\r\n                const nx = x + dx;\r\n                const ny = y + dy;\r\n\r\n                if (nx < 0 || nx >= width || ny < 0 || ny >= height) continue;\r\n\r\n                const ni = (ny * width + nx) * 4;\r\n                if (tempData[ni + 3] === 0) {\r\n                  transparentNeighbors++;\r\n                }\r\n                totalNeighbors++;\r\n              }\r\n            }\r\n\r\n            // 如果周围有透明像素，说明这是边缘，应用羽化效果\r\n            if (transparentNeighbors > 0 && totalNeighbors > 0) {\r\n              const ratio = transparentNeighbors / totalNeighbors;\r\n              data[i + 3] = Math.round(data[i + 3] * (1 - ratio));\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      ctx.putImageData(frame, 0, 0);\r\n\r\n      const transparencyPercentage = calculateTransparencyPercentage(data);\r\n      setDebugInfo(`抠图透明度: ${transparencyPercentage}% | 边缘平滑: ${edgeSmoothing} | 阈值: ${greenThreshold} | 色块: ${useCustomColor ? '自定义' : chromaKeyColor}${useCustomColor ? `(${customChromaKeyColor})` : ''}`);\r\n      setAlphaReady(parseFloat(transparencyPercentage) > 1);\r\n    } catch (e) {\r\n      console.error('抠图处理异常:', e);\r\n      setErrorMessage('视频处理异常，请检查视频源');\r\n    }\r\n    animationFrameIdRef.current = requestAnimationFrame(processVideoFrameWithGreenScreen);\r\n  }\r\n\r\n  function fallbackToCanvasDrawing() {\r\n    if (animationFrameIdRef.current) {\r\n      cancelAnimationFrame(animationFrameIdRef.current);\r\n    }\r\n    processVideoFrameWithGreenScreen();\r\n  }\r\n\r\n  async function negotiate() {\r\n    const pc = pcRef.current;\r\n    if (!pc) return;\r\n    pc.addTransceiver('video', { direction: 'recvonly' });\r\n    pc.addTransceiver('audio', { direction: 'recvonly' });\r\n    try {\r\n      const offer = await pc.createOffer();\r\n      await pc.setLocalDescription(offer);\r\n      await new Promise((resolve) => {\r\n        if (pc.iceGatheringState === 'complete') {\r\n          resolve();\r\n        } else {\r\n          const checkState = () => {\r\n            if (pc.iceGatheringState === 'complete') {\r\n              pc.removeEventListener('icegatheringstatechange', checkState);\r\n              resolve();\r\n            }\r\n          };\r\n          pc.addEventListener('icegatheringstatechange', checkState);\r\n        }\r\n      });\r\n      const response = await fetch(SIGNALING_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(pc.localDescription),\r\n      });\r\n      if (!response.ok) throw new Error(`服务器响应错误: ${response.status}`);\r\n      const answer = await response.json();\r\n      await pc.setRemoteDescription(answer);\r\n    } catch (e) {\r\n      setErrorMessage(`WebRTC连接失败: ${e.message}`);\r\n      if (connectionAttempts < maxConnectionAttempts) {\r\n        setConnectionAttempts(connectionAttempts + 1);\r\n        reconnectTimerRef.current = setTimeout(() => {\r\n          if (isStartedRef.current) {\r\n            stop();\r\n            start();\r\n          }\r\n        }, 2000);\r\n      } else {\r\n        alert('连接失败，请检查网络连接或刷新页面');\r\n      }\r\n    }\r\n  }\r\n\r\n  function zoomIn() {\r\n    setZoomWidth((w) => w + zoomStep);\r\n  }\r\n\r\n  function zoomOut() {\r\n    setZoomWidth((w) => (w - zoomStep > 0 ? w - zoomStep : w));\r\n  }\r\n\r\n  // 改进的标准画中画实现，增加稳定性和详细日志\r\n  async function togglePictureInPicture() {\r\n    // 如果正在切换模式，不重复操作\r\n    if (isPiPModeChangingRef.current) {\r\n      console.log('忽略画中画切换请求：正在切换中');\r\n      return;\r\n    }\r\n    \r\n    isPiPModeChangingRef.current = true;\r\n    pipExitReasonRef.current = '';\r\n    \r\n    try {\r\n      if (document.pictureInPictureElement) {\r\n        // 如果已有画中画元素，则退出\r\n        isStoppingRef.current = true;\r\n        console.log('尝试退出标准画中画模式');\r\n        await document.exitPictureInPicture();\r\n        console.log('已成功退出标准画中画模式');\r\n        isStoppingRef.current = false;\r\n        setIsPiPMode(false);\r\n      } else {\r\n        // 进入标准画中画模式\r\n        console.log('尝试进入标准画中画模式');\r\n        \r\n        // 检查浏览器是否支持画中画\r\n        if (!document.pictureInPictureEnabled) {\r\n          throw new Error('浏览器不支持画中画功能');\r\n        }\r\n        \r\n        // 创建或获取隐藏的视频元素\r\n        if (!hiddenVideoRef.current) {\r\n          const videoElement = document.createElement('video');\r\n          videoElement.style.display = 'none';\r\n          document.body.appendChild(videoElement);\r\n          hiddenVideoRef.current = videoElement;\r\n          \r\n          // 添加事件监听，处理画中画状态变化\r\n          videoElement.addEventListener('enterpictureinpicture', () => {\r\n            console.log('进入标准画中画模式 - 视频元素状态:', videoElement.readyState);\r\n            console.log('画中画元素尺寸:', videoElement.videoWidth, 'x', videoElement.videoHeight);\r\n            setIsPiPMode(true);\r\n            isPiPModeChangingRef.current = false;\r\n          });\r\n          \r\n          videoElement.addEventListener('leavepictureinpicture', () => {\r\n            console.log('退出标准画中画模式 - 原因:', pipExitReasonRef.current || '未知');\r\n            console.log('画中画退出时视频元素状态:', videoElement.readyState);\r\n            setIsPiPMode(false);\r\n            isPiPModeChangingRef.current = false;\r\n          });\r\n          \r\n          // 添加错误监听\r\n          videoElement.addEventListener('error', (e) => {\r\n            console.error('画中画视频元素错误:', e);\r\n            console.error('错误详情:', videoElement.error);\r\n            setErrorMessage('画中画视频元素错误');\r\n            isPiPModeChangingRef.current = false;\r\n          });\r\n          \r\n          // 添加暂停事件监听\r\n          videoElement.addEventListener('pause', () => {\r\n            console.log('画中画视频暂停');\r\n            if (isPiPMode) {\r\n              pipExitReasonRef.current = '视频暂停';\r\n              // 尝试继续播放\r\n              videoElement.play().catch(err => {\r\n                console.error('画中画视频暂停后尝试播放失败:', err);\r\n              });\r\n            }\r\n          });\r\n          \r\n          // 添加 ended 事件监听\r\n          videoElement.addEventListener('ended', () => {\r\n            console.log('画中画视频播放结束');\r\n            if (isPiPMode) {\r\n              pipExitReasonRef.current = '视频播放结束';\r\n            }\r\n          });\r\n          \r\n          // 添加 loadedmetadata 事件监听\r\n          videoElement.addEventListener('loadedmetadata', () => {\r\n            console.log('画中画视频元数据加载完成:', \r\n              videoElement.videoWidth, 'x', videoElement.videoHeight, \r\n              'duration:', videoElement.duration);\r\n          });\r\n          \r\n          // 添加 timeupdate 事件监听，用于检测视频是否在播放\r\n          let lastTime = 0;\r\n          videoElement.addEventListener('timeupdate', () => {\r\n            if (isPiPMode && videoElement.currentTime === lastTime && !videoElement.paused) {\r\n              console.log('画中画视频时间未更新，可能已停止');\r\n              pipExitReasonRef.current = '视频时间未更新';\r\n            }\r\n            lastTime = videoElement.currentTime;\r\n          });\r\n        }\r\n        \r\n        // 确保Canvas已准备好\r\n        if (!canvasRef.current || !ctxRef.current) {\r\n          setErrorMessage('Canvas未初始化，无法启动画中画');\r\n          isPiPModeChangingRef.current = false;\r\n          return;\r\n        }\r\n        \r\n        // 检查Canvas是否有内容\r\n        if (canvasRef.current.width === 0 || canvasRef.current.height === 0) {\r\n          console.error('Canvas尺寸为0，无法启动画中画');\r\n          setErrorMessage('Canvas尺寸为0，无法启动画中画');\r\n          isPiPModeChangingRef.current = false;\r\n          return;\r\n        }\r\n        \r\n        // 获取Canvas流并设置到隐藏视频元素\r\n        const stream = canvasRef.current.captureStream(30);\r\n        hiddenVideoRef.current.srcObject = stream;\r\n        console.log('创建Canvas流成功，帧率:', 30);\r\n        \r\n        // 保存当前流的引用，用于后续检查\r\n        pipCanvasStreamRef.current = stream;\r\n        \r\n        // 检查流是否有效\r\n        if (!stream || stream.getTracks().length === 0) {\r\n          throw new Error('Canvas流为空或无效');\r\n        }\r\n        \r\n        // 播放视频\r\n        console.log('尝试播放画中画视频元素...');\r\n        await hiddenVideoRef.current.play();\r\n        console.log('画中画视频元素播放成功');\r\n        \r\n        // 进入画中画模式\r\n        console.log('尝试请求进入画中画模式...');\r\n        await hiddenVideoRef.current.requestPictureInPicture();\r\n        console.log('成功进入画中画模式');\r\n      }\r\n    } catch (e) {\r\n      console.error('标准画中画错误:', e);\r\n      console.error('错误堆栈:', e.stack);\r\n      setErrorMessage(`标准画中画错误: ${e.message}`);\r\n      pipExitReasonRef.current = e.message;\r\n      \r\n      // 如果标准画中画失败，尝试使用自定义画中画\r\n      if (!isPiPMode) {\r\n        setEnablePip((v) => !v);\r\n      }\r\n    } finally {\r\n      isPiPModeChangingRef.current = false;\r\n    }\r\n  }\r\n\r\n  function start() {\r\n    if (isStartedRef.current) return;\r\n    const config = { sdpSemantics: 'unified-plan' };\r\n    if (useStun) {\r\n      config.iceServers = [{ urls: 'stun:stun.l.google.com:19302' }];\r\n    }\r\n    const pc = new RTCPeerConnection(config);\r\n    pcRef.current = pc;\r\n    isStartedRef.current = true;\r\n    setConnectionAttempts(0);\r\n    setIsLoading(true);\r\n    setErrorMessage('');\r\n\r\n    pc.addEventListener('connectionstatechange', () => {\r\n      if (pc.connectionState === 'failed' || pc.connectionState === 'disconnected') {\r\n        // 如果处于画中画模式，尝试重新连接而不是完全停止\r\n        if (isPiPMode) {\r\n          console.log('WebRTC连接断开，但处于画中画模式，尝试重新连接');\r\n          setErrorMessage('WebRTC连接断开，尝试重连');\r\n          if (!reconnectTimerRef.current) {\r\n            reconnectTimerRef.current = setTimeout(() => {\r\n              if (isStartedRef.current) {\r\n                // 只重新协商连接，不停止整个应用\r\n                negotiate();\r\n              }\r\n            }, 2000);\r\n          }\r\n        } else if (!isStoppingRef.current) {\r\n          console.log('WebRTC连接断开，尝试重新连接');\r\n          setErrorMessage('WebRTC连接断开，尝试重连');\r\n          if (connectionAttempts < maxConnectionAttempts) {\r\n            setConnectionAttempts(connectionAttempts + 1);\r\n            reconnectTimerRef.current = setTimeout(() => {\r\n              if (isStartedRef.current) {\r\n                stop();\r\n                start();\r\n              }\r\n            }, 2000);\r\n          } else {\r\n            setErrorMessage('连接尝试次数过多，连接已断开');\r\n          }\r\n        }\r\n      } else if (pc.connectionState === 'connected') {\r\n        console.log('WebRTC连接已建立');\r\n        setErrorMessage('');\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    pc.addEventListener('track', (event) => {\r\n      console.log('收到媒体轨道:', event.track.kind);\r\n      if (event.track.kind === 'video') {\r\n        videoRef.current.srcObject = event.streams[0];\r\n        setVideoReady(true);\r\n        isVideoReadyRef.current = true;\r\n        if (!animationFrameIdRef.current) {\r\n          fallbackToCanvasDrawing();\r\n        }\r\n      } else if (event.track.kind === 'audio') {\r\n        audioRef.current.srcObject = event.streams[0];\r\n      }\r\n    });\r\n\r\n    negotiate();\r\n    setStarted(true);\r\n  }\r\n\r\n  function stop() {\r\n    if (!isStartedRef.current) return;\r\n    isStoppingRef.current = true; // 标记正在停止\r\n    if (reconnectTimerRef.current) {\r\n      clearTimeout(reconnectTimerRef.current);\r\n      reconnectTimerRef.current = null;\r\n    }\r\n    if (animationFrameIdRef.current) {\r\n      cancelAnimationFrame(animationFrameIdRef.current);\r\n      animationFrameIdRef.current = null;\r\n    }\r\n    \r\n    // 记录画中画退出原因\r\n    if (isPiPMode) {\r\n      pipExitReasonRef.current = '手动停止应用';\r\n    }\r\n    \r\n    // 停止画中画流\r\n    if (pipCanvasStreamRef.current) {\r\n      pipCanvasStreamRef.current.getTracks().forEach(track => track.stop());\r\n      pipCanvasStreamRef.current = null;\r\n    }\r\n    \r\n    // 退出标准画中画模式\r\n    if (document.pictureInPictureElement) {\r\n      document.exitPictureInPicture().catch(e => {\r\n        console.error('退出画中画模式失败:', e);\r\n      });\r\n    }\r\n    \r\n    // 停止媒体轨道\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n    }\r\n    if (audioRef.current && audioRef.current.srcObject) {\r\n      audioRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n    }\r\n    \r\n    // 关闭 RTCPeerConnection\r\n    if (pcRef.current) {\r\n      pcRef.current.close();\r\n      pcRef.current = null;\r\n    }\r\n    \r\n    // 重置状态\r\n    setStarted(false);\r\n    setVideoReady(false);\r\n    isStartedRef.current = false;\r\n    isVideoReadyRef.current = false;\r\n    setIsLoading(false);\r\n    \r\n    // 如果不需要保持连接，则清理\r\n    if (!keepConnection) {\r\n      setUseStun(false);\r\n      setZoomWidth(600);\r\n      setAlphaReady(false);\r\n      setProcessingMode('rgba');\r\n      setErrorMessage('');\r\n      setDebugInfo('');\r\n      setConnectionAttempts(0);\r\n      setEnablePip(false);\r\n      setIsPiPMode(false);\r\n    }\r\n    \r\n    isStoppingRef.current = false; // 标记停止完成\r\n  }\r\n\r\n  // 清理资源\r\n  useEffect(() => {\r\n    return () => {\r\n      stop();\r\n    };\r\n  }, []);\r\n\r\n  // 自定义画中画效果\r\n  useEffect(() => {\r\n    if (enablePip && canvasRef.current && videoRef.current) {\r\n      // 保存当前 canvas 状态\r\n      wasCanvasVisibleRef.current = canvasRef.current.style.display !== 'none';\r\n      \r\n      // 创建画中画元素\r\n      if (!pipVideoRef.current) {\r\n        const pipVideo = document.createElement('video');\r\n        pipVideo.style.position = 'fixed';\r\n        pipVideo.style.bottom = '20px';\r\n        pipVideo.style.right = '20px';\r\n        pipVideo.style.width = '200px';\r\n        pipVideo.style.borderRadius = '8px';\r\n        pipVideo.style.boxShadow = '0 4px 15px rgba(0,0,0,0.3)';\r\n        pipVideo.style.zIndex = '1000';\r\n        pipVideo.style.cursor = 'move';\r\n        pipVideo.controls = false;\r\n        pipVideo.muted = true;\r\n        document.body.appendChild(pipVideo);\r\n        pipVideoRef.current = pipVideo;\r\n        \r\n        // 添加拖动功能\r\n        let isDragging = false;\r\n        let offsetX, offsetY;\r\n        \r\n        pipVideo.addEventListener('mousedown', (e) => {\r\n          isDragging = true;\r\n          offsetX = e.clientX - pipVideo.getBoundingClientRect().left;\r\n          offsetY = e.clientY - pipVideo.getBoundingClientRect().top;\r\n          pipVideo.style.cursor = 'grabbing';\r\n          e.preventDefault();\r\n        });\r\n        \r\n        document.addEventListener('mousemove', (e) => {\r\n          if (isDragging) {\r\n            const x = e.clientX - offsetX;\r\n            const y = e.clientY - offsetY;\r\n            pipVideo.style.left = `${x}px`;\r\n            pipVideo.style.top = `${y}px`;\r\n            pipVideo.style.bottom = 'auto';\r\n            pipVideo.style.right = 'auto';\r\n          }\r\n        });\r\n        \r\n        document.addEventListener('mouseup', () => {\r\n          isDragging = false;\r\n          pipVideo.style.cursor = 'move';\r\n        });\r\n        \r\n        // 添加双击关闭\r\n        pipVideo.addEventListener('dblclick', () => {\r\n          setEnablePip(false);\r\n        });\r\n      }\r\n      \r\n      // 设置视频源\r\n      if (canvasRef.current && canvasRef.current.captureStream) {\r\n        const stream = canvasRef.current.captureStream(30);\r\n        pipVideoRef.current.srcObject = stream;\r\n        pipVideoRef.current.play().catch(e => {\r\n          console.error('自定义画中画播放失败:', e);\r\n        });\r\n        isPipActiveRef.current = true;\r\n        \r\n        // 隐藏原 canvas\r\n        if (wasCanvasVisibleRef.current) {\r\n          canvasRef.current.style.display = 'none';\r\n        }\r\n      }\r\n    } else if (!enablePip && pipVideoRef.current && isPipActiveRef.current) {\r\n      // 停止画中画流\r\n      if (pipVideoRef.current.srcObject) {\r\n        pipVideoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n      \r\n      // 移除画中画元素\r\n      if (pipVideoRef.current.parentNode) {\r\n        pipVideoRef.current.parentNode.removeChild(pipVideoRef.current);\r\n      }\r\n      pipVideoRef.current = null;\r\n      isPipActiveRef.current = false;\r\n      \r\n      // 恢复 canvas 显示\r\n      if (wasCanvasVisibleRef.current) {\r\n        canvasRef.current.style.display = '';\r\n      }\r\n    }\r\n  }, [enablePip]);\r\n\r\n  // 处理窗口大小变化\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      // 调整聊天框位置，防止溢出\r\n      if (containerRef.current) {\r\n        const containerRect = containerRef.current.getBoundingClientRect();\r\n        const chatWidth = 300; // 假设聊天框宽度\r\n        const chatHeight = 200; // 假设聊天框高度\r\n        \r\n        if (chatPos.left + chatWidth > containerRect.width) {\r\n          setChatPos(prev => ({\r\n            ...prev,\r\n            left: Math.max(0, containerRect.width - chatWidth)\r\n          }));\r\n        }\r\n        \r\n        if (chatPos.top + chatHeight > containerRect.height) {\r\n          setChatPos(prev => ({\r\n            ...prev,\r\n            top: Math.max(0, containerRect.height - chatHeight)\r\n          }));\r\n        }\r\n      }\r\n    }\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [chatPos]);\r\n\r\n  // 显示加载状态\r\n  const LoadingIndicator = () => (\r\n    <div className=\"loading-indicator\">\r\n      <div className=\"spinner\"></div>\r\n      <p>正在连接...</p>\r\n    </div>\r\n  );\r\n\r\n  // 显示控制面板\r\n  const ControlPanel = () => (\r\n    <div className=\"control-panel\">\r\n      <button onClick={start} disabled={started}>\r\n        开始\r\n      </button>\r\n      <button onClick={stop} disabled={!started}>\r\n        停止\r\n      </button>\r\n      <button onClick={zoomIn}>放大</button>\r\n      <button onClick={zoomOut}>缩小</button>\r\n      <button onClick={togglePictureInPicture}>\r\n        {isPiPMode ? '退出' : '进入'}画中画\r\n      </button>\r\n      <button onClick={() => setEnablePip(!enablePip)}>\r\n        {enablePip ? '关闭' : '开启'}自定义画中画\r\n      </button>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={useStun}\r\n          onChange={() => setUseStun(!useStun)}\r\n        />\r\n        使用STUN服务器\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  // 显示绿幕设置面板\r\n  const ChromaKeySettings = () => (\r\n    <div className=\"chroma-key-settings\">\r\n      <h3>绿幕设置</h3>\r\n      <div>\r\n        <label>边缘平滑:</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"10\"\r\n          step=\"1\"\r\n          value={edgeSmoothing}\r\n          onChange={(e) => setEdgeSmoothing(Number(e.target.value))}\r\n        />\r\n        <span>{edgeSmoothing}</span>\r\n      </div>\r\n      <div>\r\n        <label>敏感度:</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.5\"\r\n          max=\"5\"\r\n          step=\"0.1\"\r\n          value={greenThreshold}\r\n          onChange={(e) => setGreenThreshold(Number(e.target.value))}\r\n        />\r\n        <span>{greenThreshold.toFixed(1)}</span>\r\n      </div>\r\n      <div>\r\n        <label>抠图色块:</label>\r\n        <select\r\n          value={chromaKeyColor}\r\n          onChange={(e) => setChromaKeyColor(e.target.value)}\r\n          disabled={useCustomColor}\r\n        >\r\n          <option value=\"green\">绿色</option>\r\n          <option value=\"blue\">蓝色</option>\r\n          <option value=\"red\">红色</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={useCustomColor}\r\n            onChange={() => setUseCustomColor(!useCustomColor)}\r\n          />\r\n          使用自定义颜色\r\n        </label>\r\n        <input\r\n          type=\"color\"\r\n          value={customChromaKeyColor}\r\n          onChange={(e) => setCustomChromaKeyColor(e.target.value)}\r\n          disabled={!useCustomColor}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // 显示聊天框\r\n  const ChatBox = () => (\r\n    <div\r\n      className=\"chat-box\"\r\n      style={{ left: `${chatPos.left}px`, top: `${chatPos.top}px` }}\r\n      onMouseDown={onDragStart}\r\n      onTouchStart={onDragStart}\r\n      onMouseMove={onDragMove}\r\n      onTouchMove={onDragMove}\r\n      onMouseUp={onDragEnd}\r\n      onTouchEnd={onDragEnd}\r\n    >\r\n      <div className=\"chat-header\">\r\n        <h4>聊天</h4>\r\n      </div>\r\n      <div className=\"chat-messages\">\r\n        <p>欢迎使用绿幕抠图系统!</p>\r\n        <p>调整右侧控制面板可以优化抠图效果</p>\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <textarea\r\n          ref={textareaRef}\r\n          placeholder=\"输入消息...\"\r\n          rows={1}\r\n        ></textarea>\r\n        <button>发送</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"webrtc-container\" ref={containerRef}>\r\n      <style>\r\n        {`\r\n          .webrtc-container {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100vh;\r\n            overflow: hidden;\r\n            background-color: #1a1a1a;\r\n            color: white;\r\n            font-family: Arial, sans-serif;\r\n          }\r\n          \r\n          .video-container {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100%;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n          }\r\n          \r\n          video {\r\n            max-width: 100%;\r\n            max-height: 100%;\r\n            object-fit: contain;\r\n            display: none;\r\n          }\r\n          \r\n          canvas {\r\n            max-width: ${zoomWidth}px;\r\n            max-height: 100%;\r\n            box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\r\n            background-color: #000;\r\n          }\r\n          \r\n          .control-panel {\r\n            position: absolute;\r\n            top: 10px;\r\n            left: 10px;\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            gap: 5px;\r\n            zetta-index: 10;\r\n          }\r\n          \r\n          .control-panel button,\r\n          .control-panel label {\r\n            padding: 5px 10px;\r\n            background-color: #333;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 4px;\r\n            cursor: pointer;\r\n            font-size: 14px;\r\n          }\r\n          \r\n          .control-panel button:hover,\r\n          .control-panel label:hover {\r\n            background-color: #555;\r\n          }\r\n          \r\n          .control-panel button:disabled {\r\n            background-color: #222;\r\n            color: #666;\r\n            cursor: not-allowed;\r\n          }\r\n          \r\n          .chroma-key-settings {\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 10px;\r\n            width: 250px;\r\n            background-color: rgba(0, 0, 0, 0.7);\r\n            padding: 10px;\r\n            border-radius: 8px;\r\n            z-index: 10;\r\n          }\r\n          \r\n          .chroma-key-settings div {\r\n            margin-bottom: 10px;\r\n            display: flex;\r\n            align-items: center;\r\n            gap: 10px;\r\n          }\r\n          \r\n          .chroma-key-settings label {\r\n            min-width: 80px;\r\n          }\r\n          \r\n          .chroma-key-settings input[type=\"range\"] {\r\n            flex-grow: 1;\r\n          }\r\n          \r\n          .chat-box {\r\n            position: absolute;\r\n            width: 300px;\r\n            height: 250px;\r\n            background-color: rgba(0, 0, 0, 0.7);\r\n            border-radius: 8px;\r\n            display: flex;\r\n            flex-direction: zetta;\r\n            z-index: 10;\r\n            cursor: move;\r\n          }\r\n          \r\n          .chat-header {\r\n            padding: 8px 10px;\r\n            background-color: #222;\r\n            border-top-left-radius: 8px;\r\n            border-top-right-radius: 8px;\r\n          }\r\n          \r\n          .chat-messages {\r\n            flex-grow: 1;\r\n            padding: 10px;\r\n            overflow-y: auto;\r\n          }\r\n          \r\n          .chat-input {\r\n            display: flex;\r\n            padding: 10px;\r\n            border-top: 1px solid #333;\r\n          }\r\n          \r\n          .chat-input textarea {\r\n            flex-grow: 1;\r\n            padding: 5px;\r\n            background-color: #333;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 4px;\r\n            resize: none;\r\n          }\r\n          \r\n          .chat-input button {\r\n            margin-left: 5px;\r\n            padding: 5px 10px;\r\n            background-color: #4CAF50;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 4px;\r\n            cursor: pointer;\r\n          }\r\n          \r\n          .chat-input button:hover {\r\n            background-color: #45a049;\r\n          }\r\n          \r\n          .loading-indicator {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            text-align: center;\r\n            z-index: 20;\r\n          }\r\n          \r\n          .spinner {\r\n            width: 40px;\r\n            height: 40px;\r\n            margin: 0 auto 10px;\r\n            border: 4px solid #f3f3f3;\r\n            border-top: 4px solid #3498db;\r\n            border-radius: 50%;\r\n            animation: spin 1s linear infinite;\r\n          }\r\n          \r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n          \r\n          .debug-info {\r\n            position: absolute;\r\n            bottom: 10px;\r\n            left: 10px;\r\n            background-color: rgba(0, 0, 0, 0.7);\r\n            padding: 5px 10px;\r\n            border-radius: 4px;\r\n            font-size: 12px;\r\n            z-index: 10;\r\n          }\r\n          \r\n          .error-message {\r\n            position: absolute;\r\n            bottom: 10px;\r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n            background-color: rgba(255, 0, 0, 0.7);\r\n            padding: 5px 10px;\r\n            border-radius: 4px;\r\n            font-size: 14px;\r\n            z-index: 10;\r\n          }\r\n        `}\r\n      </style>\r\n      \r\n      <div className=\"video-container\">\r\n        <video ref={videoRef} autoPlay playsInline muted></video>\r\n        <canvas ref={canvasRef}></canvas>\r\n        <audio ref={audioRef} autoPlay></audio>\r\n      </div>\r\n      \r\n      <ControlPanel />\r\n      <ChromaKeySettings />\r\n      <ChatBox />\r\n      \r\n      {isLoading && <LoadingIndicator />}\r\n      \r\n      {errorMessage && (\r\n        <div className=\"error-message\">{errorMessage}</div>\r\n      )}\r\n      \r\n      {debugInfo && (\r\n        <div className=\"debug-info\">{debugInfo}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}