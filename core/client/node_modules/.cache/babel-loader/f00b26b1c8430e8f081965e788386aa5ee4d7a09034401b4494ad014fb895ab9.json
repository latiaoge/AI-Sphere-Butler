{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{useRecorderContext}from'../contexts/RecorderProvider';// 注意路径根据实际调整\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function AudioTranscriber(){// 从全局录音上下文中取状态和操作\nconst{isRecording,transcription,lang,speakerVerification,wakeWordEnabled,wakeWords,setLang,setSpeakerVerification,setWakeWordEnabled,setWakeWords,startRecording,stopRecording,setTranscription}=useRecorderContext();// 拖拽相关引用，仅用于麦克风按钮\nconst micButtonRef=useRef(null);const isDraggingRef=useRef(false);const offsetXRef=useRef(0);const offsetYRef=useRef(0);// localStorage 保存位置的 key\nconst storageKey='audioTranscriberMicButtonPosition';// 新增声纹识别录音状态和上传状态（保持本组件私有状态）\nconst[isSpeakerRecording,setIsSpeakerRecording]=useState(false);const[speakerUploadStatus,setSpeakerUploadStatus]=useState('');const speakerRecorderRef=useRef(null);const speakerAudioChunksRef=useRef([]);// 发送文本消息到 LLM 服务\nconst sendTextMessage=async text=>{if(!text.trim())return;try{const response=await fetch('https://192.168.1.70:6010/qwener',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({text})});if(!response.ok){throw new Error('网络响应失败，状态码: '+response.status);}const data=await response.json();console.log('文本发送成功，服务器返回：',data);}catch(error){console.error('文本发送失败：',error);}};// 组件卸载时清理资源\nuseEffect(()=>{return()=>{stopRecording();stopSpeakerRecording();};},[]);// 这里改成空依赖数组，避免多次调用\n// 监听语言和声纹识别开关的变化，保存状态到 localStorage，确保切换页时记忆选择\nuseEffect(()=>{try{localStorage.setItem('audioTranscriberLang',lang);}catch(_unused){}},[lang]);useEffect(()=>{try{localStorage.setItem('audioTranscriberSpeakerVerification',speakerVerification.toString());}catch(_unused2){}},[speakerVerification]);// 监听语音唤醒开关和唤醒词变化，保存到 localStorage\nuseEffect(()=>{try{localStorage.setItem('wakeWordEnabled',wakeWordEnabled.toString());}catch(_unused3){}},[wakeWordEnabled]);useEffect(()=>{try{localStorage.setItem('wakeWords',wakeWords);}catch(_unused4){}},[wakeWords]);// 录制声纹相关函数（未变）\nfunction startSpeakerRecording(){if(isSpeakerRecording)return;setSpeakerUploadStatus('请求麦克风权限...');navigator.mediaDevices.getUserMedia({audio:true}).then(stream=>{setSpeakerUploadStatus('开始录音2秒...');speakerAudioChunksRef.current=[];const options={mimeType:'audio/wav'};// 一些浏览器不支持wav mimeType，下面用默认就好\nlet mediaRecorder;try{mediaRecorder=new MediaRecorder(stream,options);}catch(e){mediaRecorder=new MediaRecorder(stream);}speakerRecorderRef.current=mediaRecorder;mediaRecorder.ondataavailable=event=>{if(event.data&&event.data.size>0){speakerAudioChunksRef.current.push(event.data);}};mediaRecorder.onstop=async()=>{setSpeakerUploadStatus('录音结束，准备上传...');const blob=new Blob(speakerAudioChunksRef.current,{type:'audio/wav'});try{const formData=new FormData();formData.append('file',blob,'speaker.wav');const uploadUrl='http://192.168.168.77:6007/api/uploadSpeaker';const res=await fetch(uploadUrl,{method:'POST',body:formData});if(!res.ok){throw new Error(\"\\u4E0A\\u4F20\\u5931\\u8D25\\uFF0C\\u72B6\\u6001\\u7801: \".concat(res.status));}const result=await res.json();setSpeakerUploadStatus('上传成功');console.log('上传成功，服务器返回：',result);}catch(err){setSpeakerUploadStatus('上传失败: '+err.message);console.error('上传失败',err);}stream.getTracks().forEach(track=>track.stop());setTimeout(()=>setSpeakerUploadStatus(''),3000);setIsSpeakerRecording(false);};mediaRecorder.start();setIsSpeakerRecording(true);setTimeout(()=>{if(speakerRecorderRef.current&&speakerRecorderRef.current.state!=='inactive'){speakerRecorderRef.current.stop();}},2000);}).catch(err=>{setSpeakerUploadStatus('获取麦克风权限失败: '+err.message);console.error('获取麦克风权限失败',err);});}function stopSpeakerRecording(){if(speakerRecorderRef.current&&speakerRecorderRef.current.state!=='inactive'){speakerRecorderRef.current.stop();setIsSpeakerRecording(false);}}// 拖拽事件处理，仅麦克风按钮（未变）\nuseEffect(()=>{if(!micButtonRef.current)return;const button=micButtonRef.current;const savedPosStr=localStorage.getItem(storageKey);let left=26;let top=26;if(savedPosStr){try{const pos=JSON.parse(savedPosStr);if(typeof pos.left==='number'&&typeof pos.top==='number'&&pos.left>=0&&pos.top>=0){left=pos.left;top=pos.top;}}catch(_unused5){}}button.style.position='fixed';button.style.left=\"\".concat(left,\"px\");button.style.top=\"\".concat(top,\"px\");button.style.zIndex='10000';button.style.cursor='grab';isDraggingRef.current=false;offsetXRef.current=0;offsetYRef.current=0;const onMouseDown=e=>{if(e.button!==0)return;isDraggingRef.current=true;offsetXRef.current=e.clientX-button.offsetLeft;offsetYRef.current=e.clientY-button.offsetTop;button.style.cursor='grabbing';e.preventDefault();};const onMouseMove=e=>{if(!isDraggingRef.current)return;let newLeft=e.clientX-offsetXRef.current;let newTop=e.clientY-offsetYRef.current;const maxLeft=window.innerWidth-button.offsetWidth;const maxTop=window.innerHeight-button.offsetHeight;newLeft=Math.min(Math.max(0,newLeft),maxLeft);newTop=Math.min(Math.max(0,newTop),maxTop);button.style.left=\"\".concat(newLeft,\"px\");button.style.top=\"\".concat(newTop,\"px\");};const onMouseUp=()=>{if(!isDraggingRef.current)return;isDraggingRef.current=false;button.style.cursor='grab';localStorage.setItem(storageKey,JSON.stringify({left:button.offsetLeft,top:button.offsetTop}));};const onTouchStart=e=>{if(e.touches.length===0)return;isDraggingRef.current=true;const touch=e.touches[0];offsetXRef.current=touch.clientX-button.offsetLeft;offsetYRef.current=touch.clientY-button.offsetTop;button.style.cursor='grabbing';};const onTouchMove=e=>{if(!isDraggingRef.current||e.touches.length===0)return;const touch=e.touches[0];let newLeft=touch.clientX-offsetXRef.current;let newTop=touch.clientY-offsetYRef.current;const maxLeft=window.innerWidth-button.offsetWidth;const maxTop=window.innerHeight-button.offsetHeight;newLeft=Math.min(Math.max(0,newLeft),maxLeft);newTop=Math.min(Math.max(0,newTop),maxTop);button.style.left=\"\".concat(newLeft,\"px\");button.style.top=\"\".concat(newTop,\"px\");e.preventDefault();};const onTouchEnd=()=>{if(!isDraggingRef.current)return;isDraggingRef.current=false;button.style.cursor='grab';localStorage.setItem(storageKey,JSON.stringify({left:button.offsetLeft,top:button.offsetTop}));};button.addEventListener('mousedown',onMouseDown);document.addEventListener('mousemove',onMouseMove);document.addEventListener('mouseup',onMouseUp);button.addEventListener('touchstart',onTouchStart,{passive:false});document.addEventListener('touchmove',onTouchMove,{passive:false});document.addEventListener('touchend',onTouchEnd);return()=>{button.removeEventListener('mousedown',onMouseDown);document.removeEventListener('mousemove',onMouseMove);document.removeEventListener('mouseup',onMouseUp);button.removeEventListener('touchstart',onTouchStart);document.removeEventListener('touchmove',onTouchMove);document.removeEventListener('touchend',onTouchEnd);};},[]);// 新增波纹动画相关，useState管理波纹数组\nconst[ripples,setRipples]=useState([]);const rippleCountRef=useRef(0);const speakerButtonRef=useRef(null);// 录制声纹按钮点击函数封装，附加波纹效果\nconst handleSpeakerRecordClick=event=>{if(isRecording||isSpeakerRecording)return;createRipple(event);startSpeakerRecording();};// 创建波纹，添加到ripples数组\nconst createRipple=event=>{if(!speakerButtonRef.current)return;const rect=speakerButtonRef.current.getBoundingClientRect();const size=Math.max(rect.width,rect.height);const x=event.clientX-rect.left-size/2;const y=event.clientY-rect.top-size/2;const newRipple={key:rippleCountRef.current,size,x,y};rippleCountRef.current+=1;setRipples(oldRipples=>[...oldRipples,newRipple]);setTimeout(()=>{setRipples(oldRipples=>oldRipples.filter(r=>r.key!==newRipple.key));},1000);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"style\",{children:\"\\n        /* \\u9EA6\\u514B\\u98CE\\u6309\\u94AE\\u6837\\u5F0F */\\n        #mic-button-wrapper {\\n          position: fixed;\\n          z-index: 10000;\\n          user-select: none;\\n          pointer-events: auto;\\n          display: flex;\\n          flex-direction: column;\\n          align-items: center;\\n          gap: 4px;\\n        }\\n\\n        #listening-text {\\n          font-size: 12px;\\n          color: rgba(128, 128, 128, 0.7);\\n          user-select: none;\\n          pointer-events: none;\\n          font-weight: 500;\\n          opacity: 0;\\n          transition: opacity 0.3s ease;\\n          height: 16px;\\n          line-height: 16px;\\n        }\\n        #listening-text.visible {\\n          opacity: 1;\\n        }\\n\\n        #mic-button {\\n          background: none;\\n          border: none;\\n          padding: 0;\\n          outline: none;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          filter: none;\\n          transition: filter 0.3s ease;\\n\\n          width: 68px;\\n          height: 68px;\\n          cursor: grab;\\n        }\\n        #mic-button.recording {\\n          filter: drop-shadow(0 0 5px red);\\n        }\\n        #mic-button img {\\n          width: 48px;\\n          height: 48px;\\n          user-select: none;\\n          pointer-events: none;\\n          -webkit-user-drag: none;\\n        }\\n\\n        /* \\u8BED\\u8A00\\u548C\\u58F0\\u7EB9\\u8BC6\\u522B\\u533A\\u57DF\\u6837\\u5F0F */\\n        #controls-container {\\n          max-width: 700px;\\n          margin: 20px auto 12px auto;\\n          font-family: Arial, sans-serif;\\n          color: white;\\n          display: flex;\\n          align-items: center;\\n          gap: 20px;\\n          user-select: none;\\n          flex-wrap: wrap;\\n        }\\n        #controls-container label {\\n          font-size: 14px;\\n          user-select: none;\\n          display: flex;\\n          align-items: center;\\n          gap: 6px;\\n        }\\n        #langInput, #wakeWordsInput {\\n          padding: 6px;\\n          font-size: 12px;\\n          width: 140px;\\n          background-color: #333;\\n          border: 1px solid #666;\\n          border-radius: 3px;\\n          color: white;\\n          user-select: text;\\n        }\\n        #speakerVerificationLabel {\\n          font-size: 14px;\\n        }\\n        #wakeWordToggleLabel {\\n          font-size: 14px;\\n          display: flex;\\n          align-items: center;\\n          gap: 6px;\\n        }\\n\\n        /* \\u7EAF CSS \\u73BB\\u7483\\u6001\\u5F55\\u5236\\u58F0\\u7EB9\\u6309\\u94AE */\\n        #speaker-record-button {\\n          position: relative;\\n          overflow: hidden;\\n          background: rgba(255, 255, 255, 0.1);\\n          border-radius: 16px;\\n          border: 1px solid rgba(255, 255, 255, 0.3);\\n          color: white;\\n          padding: 3px 10px;\\n          font-size: 13px;\\n          font-weight: 600;\\n          cursor: pointer;\\n          user-select: none;\\n          box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\\n          backdrop-filter: blur(10px);\\n          -webkit-backdrop-filter: blur(12px);\\n          WebkitBackdropFilter: 'blur(10px)',\\n          transition: all 0.3s ease;\\n          display: inline-flex;\\n          align-items: center;\\n          justify-content: center;\\n          outline: none;\\n          border-image: none;\\n        }\\n        #speaker-record-button:hover:not(:disabled) {\\n          background: rgba(255, 255, 255, 0.2);\\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\\n          transform: scale(1.05);\\n          filter: brightness(1.1);\\n        }\\n        #speaker-record-button:disabled {\\n          opacity: 0.4;\\n          cursor: not-allowed;\\n          box-shadow: none;\\n          background: rgba(255, 255, 255, 0.05);\\n          filter: none;\\n          transform: none;\\n        }\\n\\n        /* \\u989D\\u5916\\u5149\\u6CFD\\u5C42 */\\n        #speaker-record-button::before {\\n          content: '';\\n          position: absolute;\\n          top: -100%;\\n          left: -100%;\\n          width: 100%;\\n          height: 100%;\\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\\n          pointer-events: none;\\n          filter: blur(10px);\\n          opacity: 0.6;\\n          transition: opacity 0.3s ease;\\n          border-radius: inherit;\\n          z-index: 0;\\n        }\\n\\n        /* \\u4FDD\\u7559\\u6CE2\\u7EB9\\u6548\\u679C\\u7684\\u6837\\u5F0F */\\n        .ripple {\\n          position: absolute;\\n          border-radius: 150%;\\n          background: rgba(91, 155, 255, 0.7);\\n          animation: rippleEffect 1s ease-out;\\n          pointer-events: none;\\n          transform: scale(0);\\n          opacity: 0.75;\\n          z-index: 1;\\n        }\\n\\n        @keyframes rippleEffect {\\n          to {\\n            transform: scale(4);\\n            opacity: 0;\\n          }\\n        }\\n      \"}),/*#__PURE__*/_jsxs(\"div\",{id:\"mic-button-wrapper\",ref:micButtonRef,style:{left:26,top:26,position:'fixed'},children:[/*#__PURE__*/_jsx(\"div\",{id:\"listening-text\",className:isRecording?'visible':'',\"aria-live\":\"polite\",role:\"status\",children:\"\\u8046\\u542C\\u4E2D...\"}),/*#__PURE__*/_jsx(\"button\",{id:\"mic-button\",className:isRecording?'recording':'',onClick:()=>isRecording?stopRecording():startRecording(),\"aria-label\":isRecording?'停止录音':'开始录音',title:isRecording?'点击停止录音':'点击开始录音',type:\"button\",disabled:isSpeakerRecording,children:/*#__PURE__*/_jsx(\"img\",{src:\"/core/client/ai-butler/image/mic-icon.png\",alt:\"\\u9EA6\\u514B\\u98CE\",draggable:false})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"controls-container\",\"aria-label\":\"\\u8BED\\u97F3\\u8BC6\\u522B\\u8BBE\\u7F6E\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"langInput\",children:\"\\u8BED\\u8A00\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{id:\"langInput\",type:\"text\",value:lang,onChange:e=>setLang(e.target.value),disabled:isRecording||isSpeakerRecording,placeholder:\"auto\",autoComplete:\"off\"}),/*#__PURE__*/_jsxs(\"label\",{id:\"speakerVerificationLabel\",htmlFor:\"speakerVerificationCheckbox\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"speakerVerificationCheckbox\",type:\"checkbox\",checked:speakerVerification,disabled:isRecording||isSpeakerRecording,onChange:e=>setSpeakerVerification(e.target.checked)}),\"\\u58F0\\u7EB9\\u8BC6\\u522B\"]}),/*#__PURE__*/_jsxs(\"label\",{id:\"wakeWordToggleLabel\",htmlFor:\"wakeWordToggleCheckbox\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"wakeWordToggleCheckbox\",type:\"checkbox\",checked:wakeWordEnabled,disabled:isRecording||isSpeakerRecording,onChange:e=>setWakeWordEnabled(e.target.checked)}),\"\\u8BED\\u97F3\\u5524\\u9192\"]}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"wakeWordsInput\",style:{flexGrow:1},children:[\"\\u5524\\u9192\\u8BCD\\uFF08\\u62FC\\u97F3\\uFF0C\\u591A\\u4E2A\\u7528\\u9017\\u53F7\\u5206\\u9694\\uFF09\\uFF1A\",/*#__PURE__*/_jsx(\"input\",{id:\"wakeWordsInput\",type:\"text\",value:wakeWords,onChange:e=>setWakeWords(e.target.value),disabled:isRecording||isSpeakerRecording||!wakeWordEnabled,placeholder:\"\\u5982\\uFF1Azhan qi lai, ni hao xiao qian\",autoComplete:\"off\",style:{marginLeft:8}})]}),/*#__PURE__*/_jsxs(\"button\",{id:\"speaker-record-button\",ref:speakerButtonRef,onClick:handleSpeakerRecordClick,disabled:isRecording||isSpeakerRecording,type:\"button\",\"aria-live\":\"polite\",\"aria-label\":\"\\u5F55\\u5236\\u58F0\\u7EB9\",title:\"\\u5F55\\u5236\\u7EA62\\u79D2\\u58F0\\u97F3\\u7528\\u4E8E\\u58F0\\u7EB9\\u8BC6\\u522B\\uFF0C\\u5F55\\u5236\\u5B8C\\u6210\\u81EA\\u52A8\\u4E0A\\u4F20\",children:[\"\\u5F55\\u5236\\u58F0\\u7EB9 (2\\u79D2)\",ripples.map(_ref=>{let{key,size,x,y}=_ref;return/*#__PURE__*/_jsx(\"span\",{className:\"ripple\",style:{width:size,height:size,top:y,left:x}},key);})]})]}),speakerUploadStatus&&/*#__PURE__*/_jsx(\"div\",{id:\"speaker-record-status\",role:\"alert\",\"aria-live\":\"polite\",\"aria-atomic\":\"true\",style:{maxWidth:700,margin:'4px auto 0 auto'},children:speakerUploadStatus}),/*#__PURE__*/_jsx(\"div\",{id:\"transcriptionResult\",style:{maxWidth:700,margin:'12px auto 20px auto',fontFamily:'Arial, sans-serif',whiteSpace:'pre-wrap',backgroundColor:'transparent',padding:10,border:'1px solid transparent',borderRadius:5,minHeight:150,fontFamily:'monospace',fontSize:14,overflowY:'auto',maxHeight:300,userSelect:'text',color:transcription?'white':'rgba(255, 255, 255, 0.5)'},children:transcription||'识别文字展示区...'})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","useRecorderContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AudioTranscriber","isRecording","transcription","lang","speakerVerification","wakeWordEnabled","wakeWords","setLang","setSpeakerVerification","setWakeWordEnabled","setWakeWords","startRecording","stopRecording","setTranscription","micButtonRef","isDraggingRef","offsetXRef","offsetYRef","storageKey","isSpeakerRecording","setIsSpeakerRecording","speakerUploadStatus","setSpeakerUploadStatus","speakerRecorderRef","speakerAudioChunksRef","sendTextMessage","text","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","stopSpeakerRecording","localStorage","setItem","_unused","toString","_unused2","_unused3","_unused4","startSpeakerRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","current","options","mimeType","mediaRecorder","MediaRecorder","e","ondataavailable","event","size","push","onstop","blob","Blob","type","formData","FormData","append","uploadUrl","res","concat","result","err","message","getTracks","forEach","track","stop","setTimeout","start","state","catch","button","savedPosStr","getItem","left","top","pos","parse","_unused5","style","position","zIndex","cursor","onMouseDown","clientX","offsetLeft","clientY","offsetTop","preventDefault","onMouseMove","newLeft","newTop","maxLeft","window","innerWidth","offsetWidth","maxTop","innerHeight","offsetHeight","Math","min","max","onMouseUp","onTouchStart","touches","length","touch","onTouchMove","onTouchEnd","addEventListener","document","passive","removeEventListener","ripples","setRipples","rippleCountRef","speakerButtonRef","handleSpeakerRecordClick","createRipple","rect","getBoundingClientRect","width","height","x","y","newRipple","key","oldRipples","filter","r","children","id","ref","className","role","onClick","title","disabled","src","alt","draggable","htmlFor","value","onChange","target","placeholder","autoComplete","checked","flexGrow","marginLeft","map","_ref","maxWidth","margin","fontFamily","whiteSpace","backgroundColor","padding","border","borderRadius","minHeight","fontSize","overflowY","maxHeight","userSelect","color"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\r\n\r\nexport default function AudioTranscriber() {\r\n  // 从全局录音上下文中取状态和操作\r\n  const {\r\n    isRecording,\r\n    transcription,\r\n    lang,\r\n    speakerVerification,\r\n    wakeWordEnabled,\r\n    wakeWords,\r\n    setLang,\r\n    setSpeakerVerification,\r\n    setWakeWordEnabled,\r\n    setWakeWords,\r\n    startRecording,\r\n    stopRecording,\r\n    setTranscription,\r\n  } = useRecorderContext();\r\n\r\n  // 拖拽相关引用，仅用于麦克风按钮\r\n  const micButtonRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  // localStorage 保存位置的 key\r\n  const storageKey = 'audioTranscriberMicButtonPosition';\r\n\r\n  // 新增声纹识别录音状态和上传状态（保持本组件私有状态）\r\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\r\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\r\n  const speakerRecorderRef = useRef(null);\r\n  const speakerAudioChunksRef = useRef([]);\r\n\r\n  // 发送文本消息到 LLM 服务\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 组件卸载时清理资源\r\n  useEffect(() => {\r\n    return () => {\r\n      stopRecording();\r\n      stopSpeakerRecording();\r\n    };\r\n  }, []); // 这里改成空依赖数组，避免多次调用\r\n\r\n  // 监听语言和声纹识别开关的变化，保存状态到 localStorage，确保切换页时记忆选择\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberLang', lang);\r\n    } catch {}\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString());\r\n    } catch {}\r\n  }, [speakerVerification]);\r\n\r\n  // 监听语音唤醒开关和唤醒词变化，保存到 localStorage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWordEnabled', wakeWordEnabled.toString());\r\n    } catch {}\r\n  }, [wakeWordEnabled]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWords', wakeWords);\r\n    } catch {}\r\n  }, [wakeWords]);\r\n\r\n  // 录制声纹相关函数（未变）\r\n  function startSpeakerRecording() {\r\n    if (isSpeakerRecording) return;\r\n\r\n    setSpeakerUploadStatus('请求麦克风权限...');\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then((stream) => {\r\n        setSpeakerUploadStatus('开始录音2秒...');\r\n        speakerAudioChunksRef.current = [];\r\n        const options = { mimeType: 'audio/wav' }; // 一些浏览器不支持wav mimeType，下面用默认就好\r\n        let mediaRecorder;\r\n        try {\r\n          mediaRecorder = new MediaRecorder(stream, options);\r\n        } catch (e) {\r\n          mediaRecorder = new MediaRecorder(stream);\r\n        }\r\n        speakerRecorderRef.current = mediaRecorder;\r\n\r\n        mediaRecorder.ondataavailable = (event) => {\r\n          if (event.data && event.data.size > 0) {\r\n            speakerAudioChunksRef.current.push(event.data);\r\n          }\r\n        };\r\n\r\n        mediaRecorder.onstop = async () => {\r\n          setSpeakerUploadStatus('录音结束，准备上传...');\r\n          const blob = new Blob(speakerAudioChunksRef.current, { type: 'audio/wav' });\r\n\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('file', blob, 'speaker.wav');\r\n\r\n            const uploadUrl = 'http://192.168.168.77:6007/api/uploadSpeaker';\r\n\r\n            const res = await fetch(uploadUrl, {\r\n              method: 'POST',\r\n              body: formData,\r\n            });\r\n\r\n            if (!res.ok) {\r\n              throw new Error(`上传失败，状态码: ${res.status}`);\r\n            }\r\n            const result = await res.json();\r\n            setSpeakerUploadStatus('上传成功');\r\n            console.log('上传成功，服务器返回：', result);\r\n          } catch (err) {\r\n            setSpeakerUploadStatus('上传失败: ' + err.message);\r\n            console.error('上传失败', err);\r\n          }\r\n          stream.getTracks().forEach(track => track.stop());\r\n          setTimeout(() => setSpeakerUploadStatus(''), 3000);\r\n          setIsSpeakerRecording(false);\r\n        };\r\n\r\n        mediaRecorder.start();\r\n\r\n        setIsSpeakerRecording(true);\r\n\r\n        setTimeout(() => {\r\n          if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\r\n            speakerRecorderRef.current.stop();\r\n          }\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        setSpeakerUploadStatus('获取麦克风权限失败: ' + err.message);\r\n        console.error('获取麦克风权限失败', err);\r\n      });\r\n  }\r\n\r\n  function stopSpeakerRecording() {\r\n    if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\r\n      speakerRecorderRef.current.stop();\r\n      setIsSpeakerRecording(false);\r\n    }\r\n  }\r\n\r\n  // 拖拽事件处理，仅麦克风按钮（未变）\r\n  useEffect(() => {\r\n    if (!micButtonRef.current) return;\r\n    const button = micButtonRef.current;\r\n\r\n    const savedPosStr = localStorage.getItem(storageKey);\r\n    let left = 26;\r\n    let top = 26;\r\n    if (savedPosStr) {\r\n      try {\r\n        const pos = JSON.parse(savedPosStr);\r\n        if (\r\n          typeof pos.left === 'number' &&\r\n          typeof pos.top === 'number' &&\r\n          pos.left >= 0 &&\r\n          pos.top >= 0\r\n        ) {\r\n          left = pos.left;\r\n          top = pos.top;\r\n        }\r\n      } catch {}\r\n    }\r\n\r\n    button.style.position = 'fixed';\r\n    button.style.left = `${left}px`;\r\n    button.style.top = `${top}px`;\r\n    button.style.zIndex = '10000';\r\n    button.style.cursor = 'grab';\r\n\r\n    isDraggingRef.current = false;\r\n    offsetXRef.current = 0;\r\n    offsetYRef.current = 0;\r\n\r\n    const onMouseDown = (e) => {\r\n      if (e.button !== 0) return;\r\n      isDraggingRef.current = true;\r\n      offsetXRef.current = e.clientX - button.offsetLeft;\r\n      offsetYRef.current = e.clientY - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n      e.preventDefault();\r\n    };\r\n    const onMouseMove = (e) => {\r\n      if (!isDraggingRef.current) return;\r\n      let newLeft = e.clientX - offsetXRef.current;\r\n      let newTop = e.clientY - offsetYRef.current;\r\n\r\n      const maxLeft = window.innerWidth - button.offsetWidth;\r\n      const maxTop = window.innerHeight - button.offsetHeight;\r\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n      newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n    };\r\n    const onMouseUp = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      localStorage.setItem(\r\n        storageKey,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n    };\r\n\r\n    const onTouchStart = (e) => {\r\n      if (e.touches.length === 0) return;\r\n      isDraggingRef.current = true;\r\n      const touch = e.touches[0];\r\n      offsetXRef.current = touch.clientX - button.offsetLeft;\r\n      offsetYRef.current = touch.clientY - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n    };\r\n    const onTouchMove = (e) => {\r\n      if (!isDraggingRef.current || e.touches.length === 0) return;\r\n      const touch = e.touches[0];\r\n      let newLeft = touch.clientX - offsetXRef.current;\r\n      let newTop = touch.clientY - offsetYRef.current;\r\n\r\n      const maxLeft = window.innerWidth - button.offsetWidth;\r\n      const maxTop = window.innerHeight - button.offsetHeight;\r\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n      newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n\r\n      e.preventDefault();\r\n    };\r\n    const onTouchEnd = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      localStorage.setItem(\r\n        storageKey,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n    };\r\n\r\n    button.addEventListener('mousedown', onMouseDown);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    button.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    return () => {\r\n      button.removeEventListener('mousedown', onMouseDown);\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      button.removeEventListener('touchstart', onTouchStart);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  // 新增波纹动画相关，useState管理波纹数组\r\n  const [ripples, setRipples] = useState([]);\r\n  const rippleCountRef = useRef(0);\r\n  const speakerButtonRef = useRef(null);\r\n\r\n  // 录制声纹按钮点击函数封装，附加波纹效果\r\n  const handleSpeakerRecordClick = (event) => {\r\n    if (isRecording || isSpeakerRecording) return;\r\n\r\n    createRipple(event);\r\n    startSpeakerRecording();\r\n  };\r\n\r\n  // 创建波纹，添加到ripples数组\r\n  const createRipple = (event) => {\r\n    if (!speakerButtonRef.current) return;\r\n\r\n    const rect = speakerButtonRef.current.getBoundingClientRect();\r\n    const size = Math.max(rect.width, rect.height);\r\n    const x = event.clientX - rect.left - size / 2;\r\n    const y = event.clientY - rect.top - size / 2;\r\n\r\n    const newRipple = {\r\n      key: rippleCountRef.current,\r\n      size,\r\n      x,\r\n      y,\r\n    };\r\n    rippleCountRef.current += 1;\r\n\r\n    setRipples((oldRipples) => [...oldRipples, newRipple]);\r\n\r\n    setTimeout(() => {\r\n      setRipples((oldRipples) => oldRipples.filter(r => r.key !== newRipple.key));\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        /* 麦克风按钮样式 */\r\n        #mic-button-wrapper {\r\n          position: fixed;\r\n          z-index: 10000;\r\n          user-select: none;\r\n          pointer-events: auto;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          gap: 4px;\r\n        }\r\n\r\n        #listening-text {\r\n          font-size: 12px;\r\n          color: rgba(128, 128, 128, 0.7);\r\n          user-select: none;\r\n          pointer-events: none;\r\n          font-weight: 500;\r\n          opacity: 0;\r\n          transition: opacity 0.3s ease;\r\n          height: 16px;\r\n          line-height: 16px;\r\n        }\r\n        #listening-text.visible {\r\n          opacity: 1;\r\n        }\r\n\r\n        #mic-button {\r\n          background: none;\r\n          border: none;\r\n          padding: 0;\r\n          outline: none;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          filter: none;\r\n          transition: filter 0.3s ease;\r\n\r\n          width: 68px;\r\n          height: 68px;\r\n          cursor: grab;\r\n        }\r\n        #mic-button.recording {\r\n          filter: drop-shadow(0 0 5px red);\r\n        }\r\n        #mic-button img {\r\n          width: 48px;\r\n          height: 48px;\r\n          user-select: none;\r\n          pointer-events: none;\r\n          -webkit-user-drag: none;\r\n        }\r\n\r\n        /* 语言和声纹识别区域样式 */\r\n        #controls-container {\r\n          max-width: 700px;\r\n          margin: 20px auto 12px auto;\r\n          font-family: Arial, sans-serif;\r\n          color: white;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 20px;\r\n          user-select: none;\r\n          flex-wrap: wrap;\r\n        }\r\n        #controls-container label {\r\n          font-size: 14px;\r\n          user-select: none;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n        #langInput, #wakeWordsInput {\r\n          padding: 6px;\r\n          font-size: 12px;\r\n          width: 140px;\r\n          background-color: #333;\r\n          border: 1px solid #666;\r\n          border-radius: 3px;\r\n          color: white;\r\n          user-select: text;\r\n        }\r\n        #speakerVerificationLabel {\r\n          font-size: 14px;\r\n        }\r\n        #wakeWordToggleLabel {\r\n          font-size: 14px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n\r\n        /* 纯 CSS 玻璃态录制声纹按钮 */\r\n        #speaker-record-button {\r\n          position: relative;\r\n          overflow: hidden;\r\n          background: rgba(255, 255, 255, 0.1);\r\n          border-radius: 16px;\r\n          border: 1px solid rgba(255, 255, 255, 0.3);\r\n          color: white;\r\n          padding: 3px 10px;\r\n          font-size: 13px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          user-select: none;\r\n          box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\r\n          backdrop-filter: blur(10px);\r\n          -webkit-backdrop-filter: blur(12px);\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n          transition: all 0.3s ease;\r\n          display: inline-flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          outline: none;\r\n          border-image: none;\r\n        }\r\n        #speaker-record-button:hover:not(:disabled) {\r\n          background: rgba(255, 255, 255, 0.2);\r\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\r\n          transform: scale(1.05);\r\n          filter: brightness(1.1);\r\n        }\r\n        #speaker-record-button:disabled {\r\n          opacity: 0.4;\r\n          cursor: not-allowed;\r\n          box-shadow: none;\r\n          background: rgba(255, 255, 255, 0.05);\r\n          filter: none;\r\n          transform: none;\r\n        }\r\n\r\n        /* 额外光泽层 */\r\n        #speaker-record-button::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: -100%;\r\n          left: -100%;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\r\n          pointer-events: none;\r\n          filter: blur(10px);\r\n          opacity: 0.6;\r\n          transition: opacity 0.3s ease;\r\n          border-radius: inherit;\r\n          z-index: 0;\r\n        }\r\n\r\n        /* 保留波纹效果的样式 */\r\n        .ripple {\r\n          position: absolute;\r\n          border-radius: 150%;\r\n          background: rgba(91, 155, 255, 0.7);\r\n          animation: rippleEffect 1s ease-out;\r\n          pointer-events: none;\r\n          transform: scale(0);\r\n          opacity: 0.75;\r\n          z-index: 1;\r\n        }\r\n\r\n        @keyframes rippleEffect {\r\n          to {\r\n            transform: scale(4);\r\n            opacity: 0;\r\n          }\r\n        }\r\n      `}</style>\r\n\r\n      {/* 麦克风及“聆听中”容器，控制整体定位、拖拽 */}\r\n      <div\r\n        id=\"mic-button-wrapper\"\r\n        ref={micButtonRef}\r\n        style={{ left: 26, top: 26, position: 'fixed' }}\r\n      >\r\n        <div id=\"listening-text\" className={isRecording ? 'visible' : ''} aria-live=\"polite\" role=\"status\">\r\n          聆听中...\r\n        </div>\r\n\r\n        <button\r\n          id=\"mic-button\"\r\n          className={isRecording ? 'recording' : ''}\r\n          onClick={() => (isRecording ? stopRecording() : startRecording())}\r\n          aria-label={isRecording ? '停止录音' : '开始录音'}\r\n          title={isRecording ? '点击停止录音' : '点击开始录音'}\r\n          type=\"button\"\r\n          disabled={isSpeakerRecording}\r\n        >\r\n          <img\r\n            src=\"/core/client/ai-butler/image/mic-icon.png\"\r\n            alt=\"麦克风\"\r\n            draggable={false}\r\n          />\r\n        </button>\r\n      </div>\r\n\r\n      {/* 语言、声纹识别及语音唤醒控制区域 */}\r\n      <div id=\"controls-container\" aria-label=\"语音识别设置\">\r\n\r\n        <label htmlFor=\"langInput\">语言：</label>\r\n        <input\r\n          id=\"langInput\"\r\n          type=\"text\"\r\n          value={lang}\r\n          onChange={(e) => setLang(e.target.value)}\r\n          disabled={isRecording || isSpeakerRecording}\r\n          placeholder=\"auto\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <label id=\"speakerVerificationLabel\" htmlFor=\"speakerVerificationCheckbox\">\r\n          <input\r\n            id=\"speakerVerificationCheckbox\"\r\n            type=\"checkbox\"\r\n            checked={speakerVerification}\r\n            disabled={isRecording || isSpeakerRecording}\r\n            onChange={(e) => setSpeakerVerification(e.target.checked)}\r\n          />\r\n          声纹识别\r\n        </label>\r\n\r\n        {/* 新增：语音唤醒开关 */}\r\n        <label id=\"wakeWordToggleLabel\" htmlFor=\"wakeWordToggleCheckbox\">\r\n          <input\r\n            id=\"wakeWordToggleCheckbox\"\r\n            type=\"checkbox\"\r\n            checked={wakeWordEnabled}\r\n            disabled={isRecording || isSpeakerRecording}\r\n            onChange={(e) => setWakeWordEnabled(e.target.checked)}\r\n          />\r\n          语音唤醒\r\n        </label>\r\n\r\n        {/* 新增：唤醒词输入框 */}\r\n        <label htmlFor=\"wakeWordsInput\" style={{ flexGrow: 1 }}>\r\n          唤醒词（拼音，多个用逗号分隔）：\r\n          <input\r\n            id=\"wakeWordsInput\"\r\n            type=\"text\"\r\n            value={wakeWords}\r\n            onChange={(e) => setWakeWords(e.target.value)}\r\n            disabled={isRecording || isSpeakerRecording || !wakeWordEnabled}\r\n            placeholder=\"如：zhan qi lai, ni hao xiao qian\"\r\n            autoComplete=\"off\"\r\n            style={{ marginLeft: 8 }}\r\n          />\r\n        </label>\r\n\r\n        {/* 纯 CSS 玻璃态录制声纹按钮 */}\r\n        <button\r\n          id=\"speaker-record-button\"\r\n          ref={speakerButtonRef}\r\n          onClick={handleSpeakerRecordClick}\r\n          disabled={isRecording || isSpeakerRecording}\r\n          type=\"button\"\r\n          aria-live=\"polite\"\r\n          aria-label=\"录制声纹\"\r\n          title=\"录制约2秒声音用于声纹识别，录制完成自动上传\"\r\n        >\r\n          录制声纹 (2秒)\r\n          {ripples.map(({ key, size, x, y }) => (\r\n            <span\r\n              key={key}\r\n              className=\"ripple\"\r\n              style={{\r\n                width: size,\r\n                height: size,\r\n                top: y,\r\n                left: x,\r\n              }}\r\n            />\r\n          ))}\r\n        </button>\r\n      </div>\r\n\r\n      {/* 声纹上传状态显示 */}\r\n      {speakerUploadStatus && (\r\n        <div\r\n          id=\"speaker-record-status\"\r\n          role=\"alert\"\r\n          aria-live=\"polite\"\r\n          aria-atomic=\"true\"\r\n          style={{ maxWidth: 700, margin: '4px auto 0 auto' }}\r\n        >\r\n          {speakerUploadStatus}\r\n        </div>\r\n      )}\r\n\r\n      {/* 转写结果展示 */}\r\n      <div\r\n        id=\"transcriptionResult\"\r\n        style={{\r\n          maxWidth: 700,\r\n          margin: '12px auto 20px auto',\r\n          fontFamily: 'Arial, sans-serif',\r\n          whiteSpace: 'pre-wrap',\r\n          backgroundColor: 'transparent',\r\n          padding: 10,\r\n          border: '1px solid transparent',\r\n          borderRadius: 5,\r\n          minHeight: 150,\r\n          fontFamily: 'monospace',\r\n          fontSize: 14,\r\n          overflowY: 'auto',\r\n          maxHeight: 300,\r\n          userSelect: 'text',\r\n          color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)',\r\n        }}\r\n      >\r\n        {transcription || '识别文字展示区...'}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}