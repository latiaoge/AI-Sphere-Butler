{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\WallpaperManager.jsx\",\n  _s = $RefreshSig$();\n// components/WallpaperManager.jsx\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const menuWallpapers = {\n  home: '/core/client/ai-butler/image/bg-home.jpeg',\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg'\n};\nconst WallpaperManager = ({\n  selectedMenu,\n  showGlassTransition\n}) => {\n  _s();\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers[selectedMenu] || menuWallpapers.home);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const targetWallpaper = menuWallpapers[selectedMenu] || menuWallpapers.home;\n    setIsLoading(true);\n    setError(null);\n\n    // 创建图片对象测试加载\n    const img = new Image();\n    img.onload = () => {\n      console.log('壁纸加载成功:', targetWallpaper);\n      setCurrentWallpaper(targetWallpaper);\n      setIsLoading(false);\n    };\n    img.onerror = err => {\n      console.error('壁纸加载失败:', targetWallpaper, err);\n      setError(`图片加载失败: ${targetWallpaper}`);\n      setIsLoading(false);\n    };\n    img.src = targetWallpaper;\n  }, [selectedMenu]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-wallpaper\",\n      style: {\n        backgroundImage: error ? 'none' : `url(${currentWallpaper})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n        opacity: isLoading || error ? 0 : 1,\n        transition: 'opacity 0.5s ease-in-out',\n        // 添加临时边框用于调试\n        border: '2px solid red'\n      },\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), process.env.NODE_ENV !== 'production' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: 10,\n        right: 10,\n        backgroundColor: 'rgba(0,0,0,0.7)',\n        color: 'white',\n        padding: 10,\n        fontSize: 12,\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5F53\\u524D\\u58C1\\u7EB8: \", currentWallpaper]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u52A0\\u8F7D\\u72B6\\u6001: \", isLoading ? '加载中...' : '已加载']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(WallpaperManager, \"ikbXpNm7EwPRfM0YRUjqMzve6b8=\");\n_c = WallpaperManager;\nexport default WallpaperManager;\nvar _c;\n$RefreshReg$(_c, \"WallpaperManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","menuWallpapers","home","butler","car","homeassistant","ops","settings","WallpaperManager","selectedMenu","showGlassTransition","_s","currentWallpaper","setCurrentWallpaper","isLoading","setIsLoading","error","setError","targetWallpaper","img","Image","onload","console","log","onerror","err","src","children","className","style","backgroundImage","backgroundSize","backgroundPosition","position","top","left","width","height","zIndex","opacity","transition","border","fileName","_jsxFileName","lineNumber","columnNumber","process","env","NODE_ENV","bottom","right","backgroundColor","color","padding","fontSize","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/WallpaperManager.jsx"],"sourcesContent":["// components/WallpaperManager.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport const menuWallpapers = {\r\n  home: '/core/client/ai-butler/image/bg-home.jpeg',\r\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\r\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\r\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\r\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\r\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg',\r\n};\r\n\r\nconst WallpaperManager = ({ selectedMenu, showGlassTransition }) => {\r\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers[selectedMenu] || menuWallpapers.home);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const targetWallpaper = menuWallpapers[selectedMenu] || menuWallpapers.home;\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    // 创建图片对象测试加载\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      console.log('壁纸加载成功:', targetWallpaper);\r\n      setCurrentWallpaper(targetWallpaper);\r\n      setIsLoading(false);\r\n    };\r\n    img.onerror = (err) => {\r\n      console.error('壁纸加载失败:', targetWallpaper, err);\r\n      setError(`图片加载失败: ${targetWallpaper}`);\r\n      setIsLoading(false);\r\n    };\r\n    img.src = targetWallpaper;\r\n  }, [selectedMenu]);\r\n\r\n  return (\r\n    <>\r\n      {/* 壁纸容器 */}\r\n      <div \r\n        className=\"app-wallpaper\"\r\n        style={{\r\n          backgroundImage: error ? 'none' : `url(${currentWallpaper})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          zIndex: -1,\r\n          opacity: isLoading || error ? 0 : 1,\r\n          transition: 'opacity 0.5s ease-in-out',\r\n          // 添加临时边框用于调试\r\n          border: '2px solid red' \r\n        }}\r\n        aria-hidden=\"true\"\r\n      />\r\n      \r\n      {/* 调试信息 */}\r\n      {process.env.NODE_ENV !== 'production' && (\r\n        <div style={{ position: 'fixed', bottom: 10, right: 10, backgroundColor: 'rgba(0,0,0,0.7)', color: 'white', padding: 10, fontSize: 12, zIndex: 1000 }}>\r\n          <p>当前壁纸: {currentWallpaper}</p>\r\n          <p>加载状态: {isLoading ? '加载中...' : '已加载'}</p>\r\n          {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WallpaperManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}