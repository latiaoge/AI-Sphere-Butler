{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\AudioTranscriber.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useRecorder } from '../hooks/useRecorder';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AudioTranscriber() {\n  _s();\n  // 录音状态\n  const [isRecording, setIsRecording] = useState(false);\n  // 转写文本内容\n  const [transcription, setTranscription] = useState('');\n  // 语言参数，默认 auto\n  const [lang, setLang] = useState('auto');\n  // 是否开启声纹识别\n  const [speakerVerification, setSpeakerVerification] = useState(false);\n\n  // 自定义录音 Hook，管理录音功能\n  const recorder = useRecorder();\n\n  // WebSocket 实例引用\n  const wsRef = useRef(null);\n  // 定时发送音频的定时器引用\n  const intervalRef = useRef(null);\n\n  // 拖拽相关引用，仅用于麦克风按钮\n  const micButtonRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const offsetXRef = useRef(0);\n  const offsetYRef = useRef(0);\n\n  /**\r\n   * 发送文本消息到 LLM 服务\r\n   * @param {string} text - 要发送的文本\r\n   */\n  const sendTextMessage = async text => {\n    if (!text.trim()) return;\n    try {\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('网络响应失败，状态码: ' + response.status);\n      }\n      const data = await response.json();\n      console.log('文本发送成功，服务器返回：', data);\n    } catch (error) {\n      console.error('文本发送失败：', error);\n    }\n  };\n\n  // 组件卸载时清理资源\n  useEffect(() => {\n    return () => {\n      stopRecording();\n    };\n  }, []);\n\n  /**\r\n   * 启动录音并建立 WebSocket 连接\r\n   */\n  function startRecording() {\n    if (isRecording) return;\n\n    // 根据语言和声纹识别参数拼接 WebSocket URL 查询参数\n    let params = [];\n    if (lang) params.push(`lang=${encodeURIComponent(lang)}`);\n    if (speakerVerification) params.push('sv=1'); // 声纹识别参数，勾选时添加\n    const queryStr = params.length > 0 ? `?${params.join('&')}` : '';\n\n    // 请根据实际服务器地址修改此处 ws 地址和端口\n    const wsUrl = `ws://192.168.168.77:6007/ws/transcribe${queryStr}`;\n    const ws = new WebSocket(wsUrl);\n    ws.binaryType = 'arraybuffer';\n    ws.onopen = () => {\n      console.log('WebSocket 已连接');\n\n      // 启动录音\n      recorder.start().catch(e => {\n        alert('启动录音失败: ' + e.message);\n        ws.close();\n      });\n\n      // 定时发送音频数据（每 500ms 发送一次）\n      intervalRef.current = setInterval(() => {\n        if (ws.readyState === 1) {\n          const audioBlob = recorder.getAudioBlob();\n          if (audioBlob.size > 0) {\n            console.log('发送音频数据，大小：', audioBlob.size);\n            ws.send(audioBlob);\n            recorder.clearBuffer();\n          }\n        }\n      }, 500);\n    };\n    ws.onmessage = evt => {\n      try {\n        const resJson = JSON.parse(evt.data);\n        if (resJson.code === 0) {\n          // 收到转写正确结果\n          const recognizedText = resJson.data || '无识别结果';\n\n          // 更新转写文本展示\n          setTranscription(prev => prev + '\\n' + recognizedText);\n\n          // 识别到有效文本时，发送给后端 LLM 服务\n          if (recognizedText && recognizedText.trim() && recognizedText !== '无识别结果') {\n            sendTextMessage(recognizedText);\n          }\n        } else {\n          // 其他情况输出原始数据\n          setTranscription(prev => prev + '\\n' + evt.data);\n        }\n      } catch (e) {\n        console.error('解析转写消息失败', e);\n        setTranscription(prev => prev + '\\n' + evt.data);\n      }\n    };\n    ws.onclose = () => {\n      console.log('WebSocket 已关闭');\n      stopRecording();\n    };\n    ws.onerror = e => {\n      console.error('WebSocket 错误', e);\n    };\n    wsRef.current = ws;\n    setIsRecording(true);\n  }\n\n  /**\r\n   * 停止录音并关闭 WebSocket 连接\r\n   */\n  function stopRecording() {\n    if (!isRecording) return;\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n    recorder.stop();\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    setIsRecording(false);\n  }\n\n  // 拖拽事件处理，仅麦克风按钮\n  const onMouseDown = e => {\n    if (!micButtonRef.current) return;\n    isDraggingRef.current = true;\n    offsetXRef.current = e.clientX - micButtonRef.current.offsetLeft;\n    offsetYRef.current = e.clientY - micButtonRef.current.offsetTop;\n    micButtonRef.current.style.cursor = 'grabbing';\n    e.preventDefault();\n  };\n  const onMouseMove = e => {\n    if (isDraggingRef.current && micButtonRef.current) {\n      let newLeft = e.clientX - offsetXRef.current;\n      let newTop = e.clientY - offsetYRef.current;\n\n      // 限制拖动范围不超出窗口\n      const button = micButtonRef.current;\n      const maxLeft = window.innerWidth - button.offsetWidth;\n      const maxTop = window.innerHeight - button.offsetHeight;\n      if (newLeft < 0) newLeft = 0;\n      if (newTop < 0) newTop = 0;\n      if (newLeft > maxLeft) newLeft = maxLeft;\n      if (newTop > maxTop) newTop = maxTop;\n      button.style.left = `${newLeft}px`;\n      button.style.top = `${newTop}px`;\n    }\n  };\n  const onMouseUp = () => {\n    if (micButtonRef.current) {\n      isDraggingRef.current = false;\n      micButtonRef.current.style.cursor = 'grab';\n    }\n  };\n  const onTouchStart = e => {\n    if (!micButtonRef.current || e.touches.length === 0) return;\n    isDraggingRef.current = true;\n    const touch = e.touches[0];\n    offsetXRef.current = touch.clientX - micButtonRef.current.offsetLeft;\n    offsetYRef.current = touch.clientY - micButtonRef.current.offsetTop;\n    micButtonRef.current.style.cursor = 'grabbing';\n  };\n  const onTouchMove = e => {\n    if (isDraggingRef.current && micButtonRef.current && e.touches.length > 0) {\n      const touch = e.touches[0];\n      let newLeft = touch.clientX - offsetXRef.current;\n      let newTop = touch.clientY - offsetYRef.current;\n      const button = micButtonRef.current;\n      const maxLeft = window.innerWidth - button.offsetWidth;\n      const maxTop = window.innerHeight - button.offsetHeight;\n      if (newLeft < 0) newLeft = 0;\n      if (newTop < 0) newTop = 0;\n      if (newLeft > maxLeft) newLeft = maxLeft;\n      if (newTop > maxTop) newTop = maxTop;\n      button.style.left = `${newLeft}px`;\n      button.style.top = `${newTop}px`;\n    }\n  };\n  const onTouchEnd = () => {\n    if (micButtonRef.current) {\n      isDraggingRef.current = false;\n      micButtonRef.current.style.cursor = 'grab';\n    }\n  };\n  useEffect(() => {\n    // 初始化麦克风按钮位置和样式\n    if (!micButtonRef.current) return;\n    const button = micButtonRef.current;\n    button.style.position = 'fixed';\n    button.style.left = '26px';\n    button.style.top = '26px';\n    button.style.zIndex = 10000;\n    button.style.cursor = 'grab';\n\n    // 取消这里对宽高的设置，改由 CSS 控制\n    // button.style.width = '68px';\n    // button.style.height = '68px';\n\n    // 绑定拖拽事件\n    button.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    button.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    document.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onTouchEnd);\n    return () => {\n      button.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      button.removeEventListener('touchstart', onTouchStart);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* 麦克风按钮样式 */\n        #mic-button {\n          background: none;\n          border: none;\n          padding: 0;\n          outline: none;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          filter: none;\n          transition: filter 0.3s ease;\n\n          width: 88px;\n          height: 88px;\n          position: fixed;\n          cursor: grab;\n          z-index: 10000;\n        }\n        #mic-button.recording {\n          filter: drop-shadow(0 0 5px red);\n        }\n        #mic-button img {\n          width: 68px;\n          height: 68px;\n          user-select: none;\n          pointer-events: none;\n          -webkit-user-drag: none;\n        }\n\n        /* 语言和声纹识别区域样式 */\n        #controls-container {\n          max-width: 700px;\n          margin: 20px auto 12px auto;\n          font-family: Arial, sans-serif;\n          color: white;\n          display: flex;\n          align-items: center;\n          gap: 20px;\n          user-select: none;\n        }\n        #controls-container label {\n          font-size: 14px;\n          user-select: none;\n        }\n        #langInput {\n          padding: 4px;\n          font-size: 14px;\n          width: 120px;\n          background-color: #333;\n          border: 1px solid #666;\n          border-radius: 3px;\n          color: white;\n          user-select: text;\n        }\n        #speakerVerificationLabel {\n          display: flex;\n          align-items: center;\n          font-size: 14px;\n          user-select: none;\n        }\n        #speakerVerificationLabel input {\n          margin-right: 6px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"mic-button\",\n      ref: micButtonRef,\n      className: isRecording ? 'recording' : '',\n      onClick: () => isRecording ? stopRecording() : startRecording(),\n      \"aria-label\": isRecording ? '停止录音' : '开始录音',\n      title: isRecording ? '点击停止录音' : '点击开始录音',\n      type: \"button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/core/client/ai-butler/image/mic-icon.png\",\n        alt: \"\\u9EA6\\u514B\\u98CE\",\n        draggable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls-container\",\n      \"aria-label\": \"\\u8BED\\u97F3\\u8BC6\\u522B\\u8BBE\\u7F6E\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"langInput\",\n        children: \"\\u8BED\\u8A00\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"langInput\",\n        type: \"text\",\n        value: lang,\n        onChange: e => setLang(e.target.value),\n        disabled: isRecording,\n        placeholder: \"auto\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"speakerVerificationLabel\",\n        htmlFor: \"speakerVerificationCheckbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"speakerVerificationCheckbox\",\n          type: \"checkbox\",\n          checked: speakerVerification,\n          disabled: isRecording,\n          onChange: e => setSpeakerVerification(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), \"\\u58F0\\u7EB9\\u8BC6\\u522B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"transcriptionResult\",\n      style: {\n        maxWidth: 700,\n        margin: '12px auto 20px auto',\n        fontFamily: 'Arial, sans-serif',\n        whiteSpace: 'pre-wrap',\n        backgroundColor: 'transparent',\n        padding: 10,\n        border: '1px solid transparent',\n        borderRadius: 5,\n        minHeight: 150,\n        fontFamily: 'monospace',\n        fontSize: 14,\n        overflowY: 'auto',\n        maxHeight: 300,\n        userSelect: 'text',\n        color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)'\n      },\n      children: transcription || '识别文字展示区...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioTranscriber, \"vXmrLAmJ9CuU6njQq3UgGkuepiM=\", false, function () {\n  return [useRecorder];\n});\n_c = AudioTranscriber;\nvar _c;\n$RefreshReg$(_c, \"AudioTranscriber\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useRecorder","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioTranscriber","_s","isRecording","setIsRecording","transcription","setTranscription","lang","setLang","speakerVerification","setSpeakerVerification","recorder","wsRef","intervalRef","micButtonRef","isDraggingRef","offsetXRef","offsetYRef","sendTextMessage","text","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","stopRecording","startRecording","params","push","encodeURIComponent","queryStr","length","join","wsUrl","ws","WebSocket","binaryType","onopen","start","catch","e","alert","message","close","current","setInterval","readyState","audioBlob","getAudioBlob","size","send","clearBuffer","onmessage","evt","resJson","parse","code","recognizedText","prev","onclose","onerror","stop","clearInterval","onMouseDown","clientX","offsetLeft","clientY","offsetTop","style","cursor","preventDefault","onMouseMove","newLeft","newTop","button","maxLeft","window","innerWidth","offsetWidth","maxTop","innerHeight","offsetHeight","left","top","onMouseUp","onTouchStart","touches","touch","onTouchMove","onTouchEnd","position","zIndex","addEventListener","document","passive","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","className","onClick","title","type","src","alt","draggable","htmlFor","value","onChange","target","disabled","placeholder","autoComplete","checked","maxWidth","margin","fontFamily","whiteSpace","backgroundColor","padding","border","borderRadius","minHeight","fontSize","overflowY","maxHeight","userSelect","color","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecorder } from '../hooks/useRecorder';\r\n\r\nexport default function AudioTranscriber() {\r\n  // 录音状态\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  // 转写文本内容\r\n  const [transcription, setTranscription] = useState('');\r\n  // 语言参数，默认 auto\r\n  const [lang, setLang] = useState('auto');\r\n  // 是否开启声纹识别\r\n  const [speakerVerification, setSpeakerVerification] = useState(false);\r\n\r\n  // 自定义录音 Hook，管理录音功能\r\n  const recorder = useRecorder();\r\n\r\n  // WebSocket 实例引用\r\n  const wsRef = useRef(null);\r\n  // 定时发送音频的定时器引用\r\n  const intervalRef = useRef(null);\r\n\r\n  // 拖拽相关引用，仅用于麦克风按钮\r\n  const micButtonRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  /**\r\n   * 发送文本消息到 LLM 服务\r\n   * @param {string} text - 要发送的文本\r\n   */\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 组件卸载时清理资源\r\n  useEffect(() => {\r\n    return () => {\r\n      stopRecording();\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * 启动录音并建立 WebSocket 连接\r\n   */\r\n  function startRecording() {\r\n    if (isRecording) return;\r\n\r\n    // 根据语言和声纹识别参数拼接 WebSocket URL 查询参数\r\n    let params = [];\r\n    if (lang) params.push(`lang=${encodeURIComponent(lang)}`);\r\n    if (speakerVerification) params.push('sv=1'); // 声纹识别参数，勾选时添加\r\n    const queryStr = params.length > 0 ? `?${params.join('&')}` : '';\r\n\r\n    // 请根据实际服务器地址修改此处 ws 地址和端口\r\n    const wsUrl = `ws://192.168.168.77:6007/ws/transcribe${queryStr}`;\r\n    const ws = new WebSocket(wsUrl);\r\n    ws.binaryType = 'arraybuffer';\r\n\r\n    ws.onopen = () => {\r\n      console.log('WebSocket 已连接');\r\n\r\n      // 启动录音\r\n      recorder.start().catch((e) => {\r\n        alert('启动录音失败: ' + e.message);\r\n        ws.close();\r\n      });\r\n\r\n      // 定时发送音频数据（每 500ms 发送一次）\r\n      intervalRef.current = setInterval(() => {\r\n        if (ws.readyState === 1) {\r\n          const audioBlob = recorder.getAudioBlob();\r\n          if (audioBlob.size > 0) {\r\n            console.log('发送音频数据，大小：', audioBlob.size);\r\n            ws.send(audioBlob);\r\n            recorder.clearBuffer();\r\n          }\r\n        }\r\n      }, 500);\r\n    };\r\n\r\n    ws.onmessage = (evt) => {\r\n      try {\r\n        const resJson = JSON.parse(evt.data);\r\n        if (resJson.code === 0) {\r\n          // 收到转写正确结果\r\n          const recognizedText = resJson.data || '无识别结果';\r\n\r\n          // 更新转写文本展示\r\n          setTranscription((prev) => prev + '\\n' + recognizedText);\r\n\r\n          // 识别到有效文本时，发送给后端 LLM 服务\r\n          if (recognizedText && recognizedText.trim() && recognizedText !== '无识别结果') {\r\n            sendTextMessage(recognizedText);\r\n          }\r\n        } else {\r\n          // 其他情况输出原始数据\r\n          setTranscription((prev) => prev + '\\n' + evt.data);\r\n        }\r\n      } catch (e) {\r\n        console.error('解析转写消息失败', e);\r\n        setTranscription((prev) => prev + '\\n' + evt.data);\r\n      }\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket 已关闭');\r\n      stopRecording();\r\n    };\r\n\r\n    ws.onerror = (e) => {\r\n      console.error('WebSocket 错误', e);\r\n    };\r\n\r\n    wsRef.current = ws;\r\n    setIsRecording(true);\r\n  }\r\n\r\n  /**\r\n   * 停止录音并关闭 WebSocket 连接\r\n   */\r\n  function stopRecording() {\r\n    if (!isRecording) return;\r\n\r\n    if (wsRef.current) {\r\n      wsRef.current.close();\r\n      wsRef.current = null;\r\n    }\r\n    recorder.stop();\r\n\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n\r\n    setIsRecording(false);\r\n  }\r\n\r\n  // 拖拽事件处理，仅麦克风按钮\r\n  const onMouseDown = (e) => {\r\n    if (!micButtonRef.current) return;\r\n    isDraggingRef.current = true;\r\n    offsetXRef.current = e.clientX - micButtonRef.current.offsetLeft;\r\n    offsetYRef.current = e.clientY - micButtonRef.current.offsetTop;\r\n    micButtonRef.current.style.cursor = 'grabbing';\r\n    e.preventDefault();\r\n  };\r\n  const onMouseMove = (e) => {\r\n    if (isDraggingRef.current && micButtonRef.current) {\r\n      let newLeft = e.clientX - offsetXRef.current;\r\n      let newTop = e.clientY - offsetYRef.current;\r\n\r\n      // 限制拖动范围不超出窗口\r\n      const button = micButtonRef.current;\r\n      const maxLeft = window.innerWidth - button.offsetWidth;\r\n      const maxTop = window.innerHeight - button.offsetHeight;\r\n      if (newLeft < 0) newLeft = 0;\r\n      if (newTop < 0) newTop = 0;\r\n      if (newLeft > maxLeft) newLeft = maxLeft;\r\n      if (newTop > maxTop) newTop = maxTop;\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n    }\r\n  };\r\n  const onMouseUp = () => {\r\n    if (micButtonRef.current) {\r\n      isDraggingRef.current = false;\r\n      micButtonRef.current.style.cursor = 'grab';\r\n    }\r\n  };\r\n  const onTouchStart = (e) => {\r\n    if (!micButtonRef.current || e.touches.length === 0) return;\r\n    isDraggingRef.current = true;\r\n    const touch = e.touches[0];\r\n    offsetXRef.current = touch.clientX - micButtonRef.current.offsetLeft;\r\n    offsetYRef.current = touch.clientY - micButtonRef.current.offsetTop;\r\n    micButtonRef.current.style.cursor = 'grabbing';\r\n  };\r\n  const onTouchMove = (e) => {\r\n    if (isDraggingRef.current && micButtonRef.current && e.touches.length > 0) {\r\n      const touch = e.touches[0];\r\n      let newLeft = touch.clientX - offsetXRef.current;\r\n      let newTop = touch.clientY - offsetYRef.current;\r\n\r\n      const button = micButtonRef.current;\r\n      const maxLeft = window.innerWidth - button.offsetWidth;\r\n      const maxTop = window.innerHeight - button.offsetHeight;\r\n      if (newLeft < 0) newLeft = 0;\r\n      if (newTop < 0) newTop = 0;\r\n      if (newLeft > maxLeft) newLeft = maxLeft;\r\n      if (newTop > maxTop) newTop = maxTop;\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n    }\r\n  };\r\n  const onTouchEnd = () => {\r\n    if (micButtonRef.current) {\r\n      isDraggingRef.current = false;\r\n      micButtonRef.current.style.cursor = 'grab';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 初始化麦克风按钮位置和样式\r\n    if (!micButtonRef.current) return;\r\n    const button = micButtonRef.current;\r\n    button.style.position = 'fixed';\r\n    button.style.left = '26px';\r\n    button.style.top = '26px';\r\n    button.style.zIndex = 10000;\r\n    button.style.cursor = 'grab';\r\n\r\n    // 取消这里对宽高的设置，改由 CSS 控制\r\n    // button.style.width = '68px';\r\n    // button.style.height = '68px';\r\n\r\n    // 绑定拖拽事件\r\n    button.addEventListener('mousedown', onMouseDown);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    button.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    return () => {\r\n      button.removeEventListener('mousedown', onMouseDown);\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      button.removeEventListener('touchstart', onTouchStart);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        /* 麦克风按钮样式 */\r\n        #mic-button {\r\n          background: none;\r\n          border: none;\r\n          padding: 0;\r\n          outline: none;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          filter: none;\r\n          transition: filter 0.3s ease;\r\n\r\n          width: 88px;\r\n          height: 88px;\r\n          position: fixed;\r\n          cursor: grab;\r\n          z-index: 10000;\r\n        }\r\n        #mic-button.recording {\r\n          filter: drop-shadow(0 0 5px red);\r\n        }\r\n        #mic-button img {\r\n          width: 68px;\r\n          height: 68px;\r\n          user-select: none;\r\n          pointer-events: none;\r\n          -webkit-user-drag: none;\r\n        }\r\n\r\n        /* 语言和声纹识别区域样式 */\r\n        #controls-container {\r\n          max-width: 700px;\r\n          margin: 20px auto 12px auto;\r\n          font-family: Arial, sans-serif;\r\n          color: white;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 20px;\r\n          user-select: none;\r\n        }\r\n        #controls-container label {\r\n          font-size: 14px;\r\n          user-select: none;\r\n        }\r\n        #langInput {\r\n          padding: 4px;\r\n          font-size: 14px;\r\n          width: 120px;\r\n          background-color: #333;\r\n          border: 1px solid #666;\r\n          border-radius: 3px;\r\n          color: white;\r\n          user-select: text;\r\n        }\r\n        #speakerVerificationLabel {\r\n          display: flex;\r\n          align-items: center;\r\n          font-size: 14px;\r\n          user-select: none;\r\n        }\r\n        #speakerVerificationLabel input {\r\n          margin-right: 6px;\r\n        }\r\n      `}</style>\r\n\r\n      {/* 可拖动的麦克风按钮 */}\r\n      <button\r\n        id=\"mic-button\"\r\n        ref={micButtonRef}\r\n        className={isRecording ? 'recording' : ''}\r\n        onClick={() => (isRecording ? stopRecording() : startRecording())}\r\n        aria-label={isRecording ? '停止录音' : '开始录音'}\r\n        title={isRecording ? '点击停止录音' : '点击开始录音'}\r\n        type=\"button\"\r\n      >\r\n        <img\r\n          src=\"/core/client/ai-butler/image/mic-icon.png\"\r\n          alt=\"麦克风\"\r\n          draggable={false}\r\n        />\r\n      </button>\r\n\r\n      {/* 语言和声纹识别固定显示区域 */}\r\n      <div id=\"controls-container\" aria-label=\"语音识别设置\">\r\n        <label htmlFor=\"langInput\">语言：</label>\r\n        <input\r\n          id=\"langInput\"\r\n          type=\"text\"\r\n          value={lang}\r\n          onChange={(e) => setLang(e.target.value)}\r\n          disabled={isRecording}\r\n          placeholder=\"auto\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <label id=\"speakerVerificationLabel\" htmlFor=\"speakerVerificationCheckbox\">\r\n          <input\r\n            id=\"speakerVerificationCheckbox\"\r\n            type=\"checkbox\"\r\n            checked={speakerVerification}\r\n            disabled={isRecording}\r\n            onChange={(e) => setSpeakerVerification(e.target.checked)}\r\n          />\r\n          声纹识别\r\n        </label>\r\n      </div>\r\n\r\n      {/* 转写结果展示区域 */}\r\n      <div\r\n        id=\"transcriptionResult\"\r\n        style={{\r\n          maxWidth: 700,\r\n          margin: '12px auto 20px auto',\r\n          fontFamily: 'Arial, sans-serif',\r\n          whiteSpace: 'pre-wrap',\r\n          backgroundColor: 'transparent',\r\n          padding: 10,\r\n          border: '1px solid transparent',\r\n          borderRadius: 5,\r\n          minHeight: 150,\r\n          fontFamily: 'monospace',\r\n          fontSize: 14,\r\n          overflowY: 'auto',\r\n          maxHeight: 300,\r\n          userSelect: 'text',\r\n          color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)',\r\n        }}\r\n      >\r\n        {transcription || '识别文字展示区...'}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD;EACA,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD;EACA,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EACxC;EACA,MAAM,CAACgB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAErE;EACA,MAAMkB,QAAQ,GAAGf,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMgB,KAAK,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC1B;EACA,MAAMmB,WAAW,GAAGnB,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMoB,YAAY,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMqB,aAAa,GAAGrB,MAAM,CAAC,KAAK,CAAC;EACnC,MAAMsB,UAAU,GAAGtB,MAAM,CAAC,CAAC,CAAC;EAC5B,MAAMuB,UAAU,GAAGvB,MAAM,CAAC,CAAC,CAAC;;EAE5B;AACF;AACA;AACA;EACE,MAAMwB,eAAe,GAAG,MAAOC,IAAI,IAAK;IACtC,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER;QAAK,CAAC;MAC/B,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,GAAGR,QAAQ,CAACS,MAAM,CAAC;MACnD;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;IACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACjC;EACF,CAAC;;EAED;EACAxC,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXyC,aAAa,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;EACE,SAASC,cAAcA,CAAA,EAAG;IACxB,IAAIlC,WAAW,EAAE;;IAEjB;IACA,IAAImC,MAAM,GAAG,EAAE;IACf,IAAI/B,IAAI,EAAE+B,MAAM,CAACC,IAAI,CAAC,QAAQC,kBAAkB,CAACjC,IAAI,CAAC,EAAE,CAAC;IACzD,IAAIE,mBAAmB,EAAE6B,MAAM,CAACC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9C,MAAME,QAAQ,GAAGH,MAAM,CAACI,MAAM,GAAG,CAAC,GAAG,IAAIJ,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE;;IAEhE;IACA,MAAMC,KAAK,GAAG,yCAAyCH,QAAQ,EAAE;IACjE,MAAMI,EAAE,GAAG,IAAIC,SAAS,CAACF,KAAK,CAAC;IAC/BC,EAAE,CAACE,UAAU,GAAG,aAAa;IAE7BF,EAAE,CAACG,MAAM,GAAG,MAAM;MAChBf,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;;MAE5B;MACAvB,QAAQ,CAACsC,KAAK,CAAC,CAAC,CAACC,KAAK,CAAEC,CAAC,IAAK;QAC5BC,KAAK,CAAC,UAAU,GAAGD,CAAC,CAACE,OAAO,CAAC;QAC7BR,EAAE,CAACS,KAAK,CAAC,CAAC;MACZ,CAAC,CAAC;;MAEF;MACAzC,WAAW,CAAC0C,OAAO,GAAGC,WAAW,CAAC,MAAM;QACtC,IAAIX,EAAE,CAACY,UAAU,KAAK,CAAC,EAAE;UACvB,MAAMC,SAAS,GAAG/C,QAAQ,CAACgD,YAAY,CAAC,CAAC;UACzC,IAAID,SAAS,CAACE,IAAI,GAAG,CAAC,EAAE;YACtB3B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEwB,SAAS,CAACE,IAAI,CAAC;YACzCf,EAAE,CAACgB,IAAI,CAACH,SAAS,CAAC;YAClB/C,QAAQ,CAACmD,WAAW,CAAC,CAAC;UACxB;QACF;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC;IAEDjB,EAAE,CAACkB,SAAS,GAAIC,GAAG,IAAK;MACtB,IAAI;QACF,MAAMC,OAAO,GAAGvC,IAAI,CAACwC,KAAK,CAACF,GAAG,CAACjC,IAAI,CAAC;QACpC,IAAIkC,OAAO,CAACE,IAAI,KAAK,CAAC,EAAE;UACtB;UACA,MAAMC,cAAc,GAAGH,OAAO,CAAClC,IAAI,IAAI,OAAO;;UAE9C;UACAzB,gBAAgB,CAAE+D,IAAI,IAAKA,IAAI,GAAG,IAAI,GAAGD,cAAc,CAAC;;UAExD;UACA,IAAIA,cAAc,IAAIA,cAAc,CAAChD,IAAI,CAAC,CAAC,IAAIgD,cAAc,KAAK,OAAO,EAAE;YACzElD,eAAe,CAACkD,cAAc,CAAC;UACjC;QACF,CAAC,MAAM;UACL;UACA9D,gBAAgB,CAAE+D,IAAI,IAAKA,IAAI,GAAG,IAAI,GAAGL,GAAG,CAACjC,IAAI,CAAC;QACpD;MACF,CAAC,CAAC,OAAOoB,CAAC,EAAE;QACVlB,OAAO,CAACE,KAAK,CAAC,UAAU,EAAEgB,CAAC,CAAC;QAC5B7C,gBAAgB,CAAE+D,IAAI,IAAKA,IAAI,GAAG,IAAI,GAAGL,GAAG,CAACjC,IAAI,CAAC;MACpD;IACF,CAAC;IAEDc,EAAE,CAACyB,OAAO,GAAG,MAAM;MACjBrC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BE,aAAa,CAAC,CAAC;IACjB,CAAC;IAEDS,EAAE,CAAC0B,OAAO,GAAIpB,CAAC,IAAK;MAClBlB,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEgB,CAAC,CAAC;IAClC,CAAC;IAEDvC,KAAK,CAAC2C,OAAO,GAAGV,EAAE;IAClBzC,cAAc,CAAC,IAAI,CAAC;EACtB;;EAEA;AACF;AACA;EACE,SAASgC,aAAaA,CAAA,EAAG;IACvB,IAAI,CAACjC,WAAW,EAAE;IAElB,IAAIS,KAAK,CAAC2C,OAAO,EAAE;MACjB3C,KAAK,CAAC2C,OAAO,CAACD,KAAK,CAAC,CAAC;MACrB1C,KAAK,CAAC2C,OAAO,GAAG,IAAI;IACtB;IACA5C,QAAQ,CAAC6D,IAAI,CAAC,CAAC;IAEf,IAAI3D,WAAW,CAAC0C,OAAO,EAAE;MACvBkB,aAAa,CAAC5D,WAAW,CAAC0C,OAAO,CAAC;MAClC1C,WAAW,CAAC0C,OAAO,GAAG,IAAI;IAC5B;IAEAnD,cAAc,CAAC,KAAK,CAAC;EACvB;;EAEA;EACA,MAAMsE,WAAW,GAAIvB,CAAC,IAAK;IACzB,IAAI,CAACrC,YAAY,CAACyC,OAAO,EAAE;IAC3BxC,aAAa,CAACwC,OAAO,GAAG,IAAI;IAC5BvC,UAAU,CAACuC,OAAO,GAAGJ,CAAC,CAACwB,OAAO,GAAG7D,YAAY,CAACyC,OAAO,CAACqB,UAAU;IAChE3D,UAAU,CAACsC,OAAO,GAAGJ,CAAC,CAAC0B,OAAO,GAAG/D,YAAY,CAACyC,OAAO,CAACuB,SAAS;IAC/DhE,YAAY,CAACyC,OAAO,CAACwB,KAAK,CAACC,MAAM,GAAG,UAAU;IAC9C7B,CAAC,CAAC8B,cAAc,CAAC,CAAC;EACpB,CAAC;EACD,MAAMC,WAAW,GAAI/B,CAAC,IAAK;IACzB,IAAIpC,aAAa,CAACwC,OAAO,IAAIzC,YAAY,CAACyC,OAAO,EAAE;MACjD,IAAI4B,OAAO,GAAGhC,CAAC,CAACwB,OAAO,GAAG3D,UAAU,CAACuC,OAAO;MAC5C,IAAI6B,MAAM,GAAGjC,CAAC,CAAC0B,OAAO,GAAG5D,UAAU,CAACsC,OAAO;;MAE3C;MACA,MAAM8B,MAAM,GAAGvE,YAAY,CAACyC,OAAO;MACnC,MAAM+B,OAAO,GAAGC,MAAM,CAACC,UAAU,GAAGH,MAAM,CAACI,WAAW;MACtD,MAAMC,MAAM,GAAGH,MAAM,CAACI,WAAW,GAAGN,MAAM,CAACO,YAAY;MACvD,IAAIT,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAG,CAAC;MAC5B,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC;MAC1B,IAAID,OAAO,GAAGG,OAAO,EAAEH,OAAO,GAAGG,OAAO;MACxC,IAAIF,MAAM,GAAGM,MAAM,EAAEN,MAAM,GAAGM,MAAM;MAEpCL,MAAM,CAACN,KAAK,CAACc,IAAI,GAAG,GAAGV,OAAO,IAAI;MAClCE,MAAM,CAACN,KAAK,CAACe,GAAG,GAAG,GAAGV,MAAM,IAAI;IAClC;EACF,CAAC;EACD,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIjF,YAAY,CAACyC,OAAO,EAAE;MACxBxC,aAAa,CAACwC,OAAO,GAAG,KAAK;MAC7BzC,YAAY,CAACyC,OAAO,CAACwB,KAAK,CAACC,MAAM,GAAG,MAAM;IAC5C;EACF,CAAC;EACD,MAAMgB,YAAY,GAAI7C,CAAC,IAAK;IAC1B,IAAI,CAACrC,YAAY,CAACyC,OAAO,IAAIJ,CAAC,CAAC8C,OAAO,CAACvD,MAAM,KAAK,CAAC,EAAE;IACrD3B,aAAa,CAACwC,OAAO,GAAG,IAAI;IAC5B,MAAM2C,KAAK,GAAG/C,CAAC,CAAC8C,OAAO,CAAC,CAAC,CAAC;IAC1BjF,UAAU,CAACuC,OAAO,GAAG2C,KAAK,CAACvB,OAAO,GAAG7D,YAAY,CAACyC,OAAO,CAACqB,UAAU;IACpE3D,UAAU,CAACsC,OAAO,GAAG2C,KAAK,CAACrB,OAAO,GAAG/D,YAAY,CAACyC,OAAO,CAACuB,SAAS;IACnEhE,YAAY,CAACyC,OAAO,CAACwB,KAAK,CAACC,MAAM,GAAG,UAAU;EAChD,CAAC;EACD,MAAMmB,WAAW,GAAIhD,CAAC,IAAK;IACzB,IAAIpC,aAAa,CAACwC,OAAO,IAAIzC,YAAY,CAACyC,OAAO,IAAIJ,CAAC,CAAC8C,OAAO,CAACvD,MAAM,GAAG,CAAC,EAAE;MACzE,MAAMwD,KAAK,GAAG/C,CAAC,CAAC8C,OAAO,CAAC,CAAC,CAAC;MAC1B,IAAId,OAAO,GAAGe,KAAK,CAACvB,OAAO,GAAG3D,UAAU,CAACuC,OAAO;MAChD,IAAI6B,MAAM,GAAGc,KAAK,CAACrB,OAAO,GAAG5D,UAAU,CAACsC,OAAO;MAE/C,MAAM8B,MAAM,GAAGvE,YAAY,CAACyC,OAAO;MACnC,MAAM+B,OAAO,GAAGC,MAAM,CAACC,UAAU,GAAGH,MAAM,CAACI,WAAW;MACtD,MAAMC,MAAM,GAAGH,MAAM,CAACI,WAAW,GAAGN,MAAM,CAACO,YAAY;MACvD,IAAIT,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAG,CAAC;MAC5B,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC;MAC1B,IAAID,OAAO,GAAGG,OAAO,EAAEH,OAAO,GAAGG,OAAO;MACxC,IAAIF,MAAM,GAAGM,MAAM,EAAEN,MAAM,GAAGM,MAAM;MAEpCL,MAAM,CAACN,KAAK,CAACc,IAAI,GAAG,GAAGV,OAAO,IAAI;MAClCE,MAAM,CAACN,KAAK,CAACe,GAAG,GAAG,GAAGV,MAAM,IAAI;IAClC;EACF,CAAC;EACD,MAAMgB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAItF,YAAY,CAACyC,OAAO,EAAE;MACxBxC,aAAa,CAACwC,OAAO,GAAG,KAAK;MAC7BzC,YAAY,CAACyC,OAAO,CAACwB,KAAK,CAACC,MAAM,GAAG,MAAM;IAC5C;EACF,CAAC;EAEDrF,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACmB,YAAY,CAACyC,OAAO,EAAE;IAC3B,MAAM8B,MAAM,GAAGvE,YAAY,CAACyC,OAAO;IACnC8B,MAAM,CAACN,KAAK,CAACsB,QAAQ,GAAG,OAAO;IAC/BhB,MAAM,CAACN,KAAK,CAACc,IAAI,GAAG,MAAM;IAC1BR,MAAM,CAACN,KAAK,CAACe,GAAG,GAAG,MAAM;IACzBT,MAAM,CAACN,KAAK,CAACuB,MAAM,GAAG,KAAK;IAC3BjB,MAAM,CAACN,KAAK,CAACC,MAAM,GAAG,MAAM;;IAE5B;IACA;IACA;;IAEA;IACAK,MAAM,CAACkB,gBAAgB,CAAC,WAAW,EAAE7B,WAAW,CAAC;IACjD8B,QAAQ,CAACD,gBAAgB,CAAC,WAAW,EAAErB,WAAW,CAAC;IACnDsB,QAAQ,CAACD,gBAAgB,CAAC,SAAS,EAAER,SAAS,CAAC;IAE/CV,MAAM,CAACkB,gBAAgB,CAAC,YAAY,EAAEP,YAAY,EAAE;MAAES,OAAO,EAAE;IAAM,CAAC,CAAC;IACvED,QAAQ,CAACD,gBAAgB,CAAC,WAAW,EAAEJ,WAAW,EAAE;MAAEM,OAAO,EAAE;IAAM,CAAC,CAAC;IACvED,QAAQ,CAACD,gBAAgB,CAAC,UAAU,EAAEH,UAAU,CAAC;IAEjD,OAAO,MAAM;MACXf,MAAM,CAACqB,mBAAmB,CAAC,WAAW,EAAEhC,WAAW,CAAC;MACpD8B,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAExB,WAAW,CAAC;MACtDsB,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEX,SAAS,CAAC;MAElDV,MAAM,CAACqB,mBAAmB,CAAC,YAAY,EAAEV,YAAY,CAAC;MACtDQ,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,WAAW,CAAC;MACtDK,QAAQ,CAACE,mBAAmB,CAAC,UAAU,EAAEN,UAAU,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtG,OAAA,CAAAE,SAAA;IAAA2G,QAAA,gBACE7G,OAAA;MAAA6G,QAAA,EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGVjH,OAAA;MACEkH,EAAE,EAAC,YAAY;MACfC,GAAG,EAAEnG,YAAa;MAClBoG,SAAS,EAAE/G,WAAW,GAAG,WAAW,GAAG,EAAG;MAC1CgH,OAAO,EAAEA,CAAA,KAAOhH,WAAW,GAAGiC,aAAa,CAAC,CAAC,GAAGC,cAAc,CAAC,CAAG;MAClE,cAAYlC,WAAW,GAAG,MAAM,GAAG,MAAO;MAC1CiH,KAAK,EAAEjH,WAAW,GAAG,QAAQ,GAAG,QAAS;MACzCkH,IAAI,EAAC,QAAQ;MAAAV,QAAA,eAEb7G,OAAA;QACEwH,GAAG,EAAC,2CAA2C;QAC/CC,GAAG,EAAC,oBAAK;QACTC,SAAS,EAAE;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAGTjH,OAAA;MAAKkH,EAAE,EAAC,oBAAoB;MAAC,cAAW,sCAAQ;MAAAL,QAAA,gBAC9C7G,OAAA;QAAO2H,OAAO,EAAC,WAAW;QAAAd,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCjH,OAAA;QACEkH,EAAE,EAAC,WAAW;QACdK,IAAI,EAAC,MAAM;QACXK,KAAK,EAAEnH,IAAK;QACZoH,QAAQ,EAAGxE,CAAC,IAAK3C,OAAO,CAAC2C,CAAC,CAACyE,MAAM,CAACF,KAAK,CAAE;QACzCG,QAAQ,EAAE1H,WAAY;QACtB2H,WAAW,EAAC,MAAM;QAClBC,YAAY,EAAC;MAAK;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eAEFjH,OAAA;QAAOkH,EAAE,EAAC,0BAA0B;QAACS,OAAO,EAAC,6BAA6B;QAAAd,QAAA,gBACxE7G,OAAA;UACEkH,EAAE,EAAC,6BAA6B;UAChCK,IAAI,EAAC,UAAU;UACfW,OAAO,EAAEvH,mBAAoB;UAC7BoH,QAAQ,EAAE1H,WAAY;UACtBwH,QAAQ,EAAGxE,CAAC,IAAKzC,sBAAsB,CAACyC,CAAC,CAACyE,MAAM,CAACI,OAAO;QAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,4BAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGNjH,OAAA;MACEkH,EAAE,EAAC,qBAAqB;MACxBjC,KAAK,EAAE;QACLkD,QAAQ,EAAE,GAAG;QACbC,MAAM,EAAE,qBAAqB;QAC7BC,UAAU,EAAE,mBAAmB;QAC/BC,UAAU,EAAE,UAAU;QACtBC,eAAe,EAAE,aAAa;QAC9BC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,uBAAuB;QAC/BC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE,GAAG;QACdN,UAAU,EAAE,WAAW;QACvBO,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE,GAAG;QACdC,UAAU,EAAE,MAAM;QAClBC,KAAK,EAAEzI,aAAa,GAAG,OAAO,GAAG;MACnC,CAAE;MAAAsG,QAAA,EAEDtG,aAAa,IAAI;IAAY;MAAAuG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA,eACN,CAAC;AAEP;AAAC7G,EAAA,CAnYuBD,gBAAgB;EAAA,QAWrBL,WAAW;AAAA;AAAAmJ,EAAA,GAXN9I,gBAAgB;AAAA,IAAA8I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}