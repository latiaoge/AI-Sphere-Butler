{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\AudioTranscriber.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useRecorder } from '../hooks/useRecorder'; // 你的自定义录音hook\nimport './AudioTranscriber.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AudioTranscriber() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [lang, setLang] = useState('auto');\n  const [speakerVerification, setSpeakerVerification] = useState(false);\n  const recorder = useRecorder();\n  const wsRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  // 拖拽相关\n  const micButtonRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const offsetXRef = useRef(0);\n  const offsetYRef = useRef(0);\n\n  // 发送文本给后台 LLM 服务\n  const sendTextMessage = async text => {\n    if (!text.trim()) return;\n    try {\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('网络响应失败，状态码: ' + response.status);\n      }\n      const data = await response.json();\n      console.log('文本发送成功，服务器返回：', data);\n    } catch (error) {\n      console.error('文本发送失败：', error);\n    }\n  };\n\n  // 组件卸载时清理\n  useEffect(() => {\n    return () => stopRecording();\n  }, []);\n\n  // 启动录音和 websocket 连接\n  const startRecording = () => {\n    if (isRecording) return;\n    let params = [];\n    if (lang) params.push(`lang=${encodeURIComponent(lang)}`);\n    if (speakerVerification) params.push('sv=1');\n    const queryStr = params.length > 0 ? `?${params.join('&')}` : '';\n    const wsUrl = `ws://192.168.168.77:6007/ws/transcribe${queryStr}`;\n    const ws = new WebSocket(wsUrl);\n    ws.binaryType = 'arraybuffer';\n    ws.onopen = () => {\n      console.log('WebSocket 已连接');\n      recorder.start().catch(e => {\n        alert('启动录音失败: ' + e.message);\n        ws.close();\n      });\n      intervalRef.current = setInterval(() => {\n        if (ws.readyState === WebSocket.OPEN) {\n          const audioBlob = recorder.getAudioBlob();\n          if (audioBlob.size > 0) {\n            console.log('发送音频数据，大小：', audioBlob.size);\n            ws.send(audioBlob);\n            recorder.clearBuffer();\n          }\n        }\n      }, 500);\n    };\n    ws.onmessage = evt => {\n      try {\n        const resJson = JSON.parse(evt.data);\n        if (resJson.code === 0) {\n          const recognizedText = resJson.data || '无识别结果';\n          setTranscription(prev => prev + (prev ? '\\n' : '') + recognizedText);\n          if (recognizedText && recognizedText.trim() && recognizedText !== '无识别结果') {\n            sendTextMessage(recognizedText);\n          }\n        } else {\n          setTranscription(prev => prev + (prev ? '\\n' : '') + evt.data);\n        }\n      } catch (e) {\n        console.error('解析转写消息失败', e);\n        setTranscription(prev => prev + (prev ? '\\n' : '') + evt.data);\n      }\n    };\n    ws.onclose = () => {\n      console.log('WebSocket 已关闭');\n      stopRecording();\n    };\n    ws.onerror = e => {\n      console.error('WebSocket 错误', e);\n    };\n    wsRef.current = ws;\n    setIsRecording(true);\n  };\n\n  // 停止录音和 websocket\n  const stopRecording = () => {\n    if (!isRecording) return;\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n    recorder.stop();\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    setIsRecording(false);\n  };\n\n  // 拖拽事件处理\n  const onMouseDown = e => {\n    if (!micButtonRef.current) return;\n    if (e.button !== 0) return; // 仅左键拖拽\n    isDraggingRef.current = true;\n    offsetXRef.current = e.clientX - micButtonRef.current.offsetLeft;\n    offsetYRef.current = e.clientY - micButtonRef.current.offsetTop;\n    micButtonRef.current.classList.add('dragging');\n    e.preventDefault();\n  };\n  const onMouseMove = e => {\n    if (!isDraggingRef.current || !micButtonRef.current) return;\n    let newLeft = e.clientX - offsetXRef.current;\n    let newTop = e.clientY - offsetYRef.current;\n    const btn = micButtonRef.current;\n    const maxLeft = window.innerWidth - btn.offsetWidth;\n    const maxTop = window.innerHeight - btn.offsetHeight;\n    newLeft = Math.min(Math.max(0, newLeft), maxLeft);\n    newTop = Math.min(Math.max(0, newTop), maxTop);\n    btn.style.left = `${newLeft}px`;\n    btn.style.top = `${newTop}px`;\n  };\n  const onMouseUp = () => {\n    if (!micButtonRef.current) return;\n    isDraggingRef.current = false;\n    micButtonRef.current.classList.remove('dragging');\n  };\n  const onTouchStart = e => {\n    if (!micButtonRef.current || e.touches.length === 0) return;\n    isDraggingRef.current = true;\n    const touch = e.touches[0];\n    offsetXRef.current = touch.clientX - micButtonRef.current.offsetLeft;\n    offsetYRef.current = touch.clientY - micButtonRef.current.offsetTop;\n    micButtonRef.current.classList.add('dragging');\n  };\n  const onTouchMove = e => {\n    if (!isDraggingRef.current || !micButtonRef.current || e.touches.length === 0) return;\n    const touch = e.touches[0];\n    let newLeft = touch.clientX - offsetXRef.current;\n    let newTop = touch.clientY - offsetYRef.current;\n    const btn = micButtonRef.current;\n    const maxLeft = window.innerWidth - btn.offsetWidth;\n    const maxTop = window.innerHeight - btn.offsetHeight;\n    newLeft = Math.min(Math.max(0, newLeft), maxLeft);\n    newTop = Math.min(Math.max(0, newTop), maxTop);\n    btn.style.left = `${newLeft}px`;\n    btn.style.top = `${newTop}px`;\n    e.preventDefault();\n  };\n  const onTouchEnd = () => {\n    if (!micButtonRef.current) return;\n    isDraggingRef.current = false;\n    micButtonRef.current.classList.remove('dragging');\n  };\n\n  // 绑定拖拽事件监听（全局 document）\n  useEffect(() => {\n    const button = micButtonRef.current;\n    if (!button) return;\n\n    // 初始化按钮位置和样式\n    button.style.position = 'fixed';\n    button.style.left = '26px';\n    button.style.top = '26px';\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    document.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onTouchEnd);\n    button.addEventListener('mousedown', onMouseDown);\n    button.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    return () => {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n      button.removeEventListener('mousedown', onMouseDown);\n      button.removeEventListener('touchstart', onTouchStart);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"mic-button\",\n      ref: micButtonRef,\n      className: isRecording ? 'recording' : '',\n      onClick: () => isRecording ? stopRecording() : startRecording(),\n      \"aria-label\": isRecording ? '停止录音' : '开始录音',\n      title: isRecording ? '点击停止录音' : '点击开始录音',\n      type: \"button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/core/client/ai-butler/image/mic-icon.png\",\n        alt: \"\\u9EA6\\u514B\\u98CE\",\n        draggable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls-container\",\n      \"aria-label\": \"\\u8BED\\u97F3\\u8BC6\\u522B\\u8BBE\\u7F6E\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"langInput\",\n        children: \"\\u8BED\\u8A00\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"langInput\",\n        type: \"text\",\n        value: lang,\n        onChange: e => setLang(e.target.value),\n        disabled: isRecording,\n        placeholder: \"auto\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"speakerVerificationLabel\",\n        htmlFor: \"speakerVerificationCheckbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"speakerVerificationCheckbox\",\n          type: \"checkbox\",\n          checked: speakerVerification,\n          disabled: isRecording,\n          onChange: e => setSpeakerVerification(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), \"\\u58F0\\u7EB9\\u8BC6\\u522B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"transcriptionResult\",\n      className: \"transcript\",\n      style: {\n        maxWidth: 700,\n        margin: '12px auto 20px auto',\n        minHeight: 150,\n        fontFamily: 'monospace',\n        fontSize: 14,\n        overflowY: 'auto',\n        maxHeight: 300,\n        userSelect: 'text',\n        color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)',\n        whiteSpace: 'pre-wrap',\n        backgroundColor: 'transparent',\n        border: '1px solid transparent',\n        borderRadius: 5\n      },\n      children: transcription || '识别文字展示区...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioTranscriber, \"vXmrLAmJ9CuU6njQq3UgGkuepiM=\", false, function () {\n  return [useRecorder];\n});\n_c = AudioTranscriber;\nvar _c;\n$RefreshReg$(_c, \"AudioTranscriber\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useRecorder","jsxDEV","_jsxDEV","AudioTranscriber","_s","isRecording","setIsRecording","transcription","setTranscription","lang","setLang","speakerVerification","setSpeakerVerification","recorder","wsRef","intervalRef","micButtonRef","isDraggingRef","offsetXRef","offsetYRef","sendTextMessage","text","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","stopRecording","startRecording","params","push","encodeURIComponent","queryStr","length","join","wsUrl","ws","WebSocket","binaryType","onopen","start","catch","e","alert","message","close","current","setInterval","readyState","OPEN","audioBlob","getAudioBlob","size","send","clearBuffer","onmessage","evt","resJson","parse","code","recognizedText","prev","onclose","onerror","stop","clearInterval","onMouseDown","button","clientX","offsetLeft","clientY","offsetTop","classList","add","preventDefault","onMouseMove","newLeft","newTop","btn","maxLeft","window","innerWidth","offsetWidth","maxTop","innerHeight","offsetHeight","Math","min","max","style","left","top","onMouseUp","remove","onTouchStart","touches","touch","onTouchMove","onTouchEnd","position","document","addEventListener","passive","removeEventListener","className","children","id","ref","onClick","title","type","src","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","target","disabled","placeholder","autoComplete","checked","maxWidth","margin","minHeight","fontFamily","fontSize","overflowY","maxHeight","userSelect","color","whiteSpace","backgroundColor","border","borderRadius","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecorder } from '../hooks/useRecorder'; // 你的自定义录音hook\r\nimport './AudioTranscriber.module.css';\r\n\r\nexport default function AudioTranscriber() {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcription, setTranscription] = useState('');\r\n  const [lang, setLang] = useState('auto');\r\n  const [speakerVerification, setSpeakerVerification] = useState(false);\r\n\r\n  const recorder = useRecorder();\r\n\r\n  const wsRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  // 拖拽相关\r\n  const micButtonRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  // 发送文本给后台 LLM 服务\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 组件卸载时清理\r\n  useEffect(() => {\r\n    return () => stopRecording();\r\n  }, []);\r\n\r\n  // 启动录音和 websocket 连接\r\n  const startRecording = () => {\r\n    if (isRecording) return;\r\n\r\n    let params = [];\r\n    if (lang) params.push(`lang=${encodeURIComponent(lang)}`);\r\n    if (speakerVerification) params.push('sv=1');\r\n    const queryStr = params.length > 0 ? `?${params.join('&')}` : '';\r\n\r\n    const wsUrl = `ws://192.168.168.77:6007/ws/transcribe${queryStr}`;\r\n    const ws = new WebSocket(wsUrl);\r\n    ws.binaryType = 'arraybuffer';\r\n\r\n    ws.onopen = () => {\r\n      console.log('WebSocket 已连接');\r\n      recorder.start().catch((e) => {\r\n        alert('启动录音失败: ' + e.message);\r\n        ws.close();\r\n      });\r\n\r\n      intervalRef.current = setInterval(() => {\r\n        if (ws.readyState === WebSocket.OPEN) {\r\n          const audioBlob = recorder.getAudioBlob();\r\n          if (audioBlob.size > 0) {\r\n            console.log('发送音频数据，大小：', audioBlob.size);\r\n            ws.send(audioBlob);\r\n            recorder.clearBuffer();\r\n          }\r\n        }\r\n      }, 500);\r\n    };\r\n\r\n    ws.onmessage = (evt) => {\r\n      try {\r\n        const resJson = JSON.parse(evt.data);\r\n        if (resJson.code === 0) {\r\n          const recognizedText = resJson.data || '无识别结果';\r\n\r\n          setTranscription((prev) => prev + (prev ? '\\n' : '') + recognizedText);\r\n\r\n          if (recognizedText && recognizedText.trim() && recognizedText !== '无识别结果') {\r\n            sendTextMessage(recognizedText);\r\n          }\r\n        } else {\r\n          setTranscription((prev) => prev + (prev ? '\\n' : '') + evt.data);\r\n        }\r\n      } catch (e) {\r\n        console.error('解析转写消息失败', e);\r\n        setTranscription((prev) => prev + (prev ? '\\n' : '') + evt.data);\r\n      }\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket 已关闭');\r\n      stopRecording();\r\n    };\r\n\r\n    ws.onerror = (e) => {\r\n      console.error('WebSocket 错误', e);\r\n    };\r\n\r\n    wsRef.current = ws;\r\n    setIsRecording(true);\r\n  };\r\n\r\n  // 停止录音和 websocket\r\n  const stopRecording = () => {\r\n    if (!isRecording) return;\r\n\r\n    if (wsRef.current) {\r\n      wsRef.current.close();\r\n      wsRef.current = null;\r\n    }\r\n    recorder.stop();\r\n\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n\r\n    setIsRecording(false);\r\n  };\r\n\r\n  // 拖拽事件处理\r\n  const onMouseDown = (e) => {\r\n    if (!micButtonRef.current) return;\r\n    if (e.button !== 0) return; // 仅左键拖拽\r\n    isDraggingRef.current = true;\r\n    offsetXRef.current = e.clientX - micButtonRef.current.offsetLeft;\r\n    offsetYRef.current = e.clientY - micButtonRef.current.offsetTop;\r\n    micButtonRef.current.classList.add('dragging');\r\n    e.preventDefault();\r\n  };\r\n  const onMouseMove = (e) => {\r\n    if (!isDraggingRef.current || !micButtonRef.current) return;\r\n    let newLeft = e.clientX - offsetXRef.current;\r\n    let newTop = e.clientY - offsetYRef.current;\r\n\r\n    const btn = micButtonRef.current;\r\n    const maxLeft = window.innerWidth - btn.offsetWidth;\r\n    const maxTop = window.innerHeight - btn.offsetHeight;\r\n\r\n    newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n    newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n    btn.style.left = `${newLeft}px`;\r\n    btn.style.top = `${newTop}px`;\r\n  };\r\n  const onMouseUp = () => {\r\n    if (!micButtonRef.current) return;\r\n    isDraggingRef.current = false;\r\n    micButtonRef.current.classList.remove('dragging');\r\n  };\r\n\r\n  const onTouchStart = (e) => {\r\n    if (!micButtonRef.current || e.touches.length === 0) return;\r\n    isDraggingRef.current = true;\r\n    const touch = e.touches[0];\r\n    offsetXRef.current = touch.clientX - micButtonRef.current.offsetLeft;\r\n    offsetYRef.current = touch.clientY - micButtonRef.current.offsetTop;\r\n    micButtonRef.current.classList.add('dragging');\r\n  };\r\n  const onTouchMove = (e) => {\r\n    if (!isDraggingRef.current || !micButtonRef.current || e.touches.length === 0) return;\r\n    const touch = e.touches[0];\r\n    let newLeft = touch.clientX - offsetXRef.current;\r\n    let newTop = touch.clientY - offsetYRef.current;\r\n\r\n    const btn = micButtonRef.current;\r\n    const maxLeft = window.innerWidth - btn.offsetWidth;\r\n    const maxTop = window.innerHeight - btn.offsetHeight;\r\n\r\n    newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n    newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n    btn.style.left = `${newLeft}px`;\r\n    btn.style.top = `${newTop}px`;\r\n\r\n    e.preventDefault();\r\n  };\r\n  const onTouchEnd = () => {\r\n    if (!micButtonRef.current) return;\r\n    isDraggingRef.current = false;\r\n    micButtonRef.current.classList.remove('dragging');\r\n  };\r\n\r\n  // 绑定拖拽事件监听（全局 document）\r\n  useEffect(() => {\r\n    const button = micButtonRef.current;\r\n    if (!button) return;\r\n\r\n    // 初始化按钮位置和样式\r\n    button.style.position = 'fixed';\r\n    button.style.left = '26px';\r\n    button.style.top = '26px';\r\n\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    button.addEventListener('mousedown', onMouseDown);\r\n    button.addEventListener('touchstart', onTouchStart, { passive: false });\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n\r\n      button.removeEventListener('mousedown', onMouseDown);\r\n      button.removeEventListener('touchstart', onTouchStart);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* 麦克风按钮 */}\r\n      <button\r\n        id=\"mic-button\"\r\n        ref={micButtonRef}\r\n        className={isRecording ? 'recording' : ''}\r\n        onClick={() => (isRecording ? stopRecording() : startRecording())}\r\n        aria-label={isRecording ? '停止录音' : '开始录音'}\r\n        title={isRecording ? '点击停止录音' : '点击开始录音'}\r\n        type=\"button\"\r\n      >\r\n        <img\r\n          src=\"/core/client/ai-butler/image/mic-icon.png\"\r\n          alt=\"麦克风\"\r\n          draggable={false}\r\n        />\r\n      </button>\r\n\r\n      {/* 语言和声纹识别控制 */}\r\n      <div id=\"controls-container\" aria-label=\"语音识别设置\">\r\n        <label htmlFor=\"langInput\">语言：</label>\r\n        <input\r\n          id=\"langInput\"\r\n          type=\"text\"\r\n          value={lang}\r\n          onChange={(e) => setLang(e.target.value)}\r\n          disabled={isRecording}\r\n          placeholder=\"auto\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <label id=\"speakerVerificationLabel\" htmlFor=\"speakerVerificationCheckbox\">\r\n          <input\r\n            id=\"speakerVerificationCheckbox\"\r\n            type=\"checkbox\"\r\n            checked={speakerVerification}\r\n            disabled={isRecording}\r\n            onChange={(e) => setSpeakerVerification(e.target.checked)}\r\n          />\r\n          声纹识别\r\n        </label>\r\n      </div>\r\n\r\n      {/* 转写文本 */}\r\n      <div\r\n        id=\"transcriptionResult\"\r\n        className=\"transcript\"\r\n        style={{\r\n          maxWidth: 700,\r\n          margin: '12px auto 20px auto',\r\n          minHeight: 150,\r\n          fontFamily: 'monospace',\r\n          fontSize: 14,\r\n          overflowY: 'auto',\r\n          maxHeight: 300,\r\n          userSelect: 'text',\r\n          color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)',\r\n          whiteSpace: 'pre-wrap',\r\n          backgroundColor: 'transparent',\r\n          border: '1px solid transparent',\r\n          borderRadius: 5,\r\n        }}\r\n      >\r\n        {transcription || '识别文字展示区...'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}