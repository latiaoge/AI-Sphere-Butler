{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\FloatingContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\n\n/**\r\n * FloatingContainer 组件\r\n * - 长方形透明触摸区域（hand-area），无文字\r\n * - 长按 500ms 进入拖动模式\r\n * - 拖动时显示触摸反馈（文本气泡），拖动结束后隐藏\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FloatingContainer() {\n  _s();\n  const handAreaRef = useRef(null);\n  const feedbackRef = useRef(null);\n\n  // 拖拽状态和偏移量\n  const isDraggingRef = useRef(false);\n  const dragStartTimeoutRef = useRef(null);\n  const offsetXRef = useRef(0);\n  const offsetYRef = useRef(0);\n\n  // 触摸反馈显示状态（拖动时显示）\n  const [feedbackActive, setFeedbackActive] = useState(false);\n  // 触摸反馈位置\n  const [feedbackPos, setFeedbackPos] = useState({\n    left: 0,\n    top: 0\n  });\n\n  /**\r\n   * 发送文本到服务器\r\n   * @param {string} text\r\n   */\n  const sendTextMessage = async text => {\n    if (!text.trim()) return;\n    try {\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('网络响应失败，状态码: ' + response.status);\n      }\n      const data = await response.json();\n      console.log('文本发送成功，服务器返回：', data);\n    } catch (error) {\n      console.error('文本发送失败：', error);\n    }\n  };\n  useEffect(() => {\n    const handArea = handAreaRef.current;\n    const feedback = feedbackRef.current;\n    if (!handArea || !feedback) return;\n\n    // 移动开始时，显示反馈并发送文本（可根据需求决定是否发送）\n    const startDraggingFeedback = (clientX, clientY) => {\n      setFeedbackPos({\n        left: clientX,\n        top: clientY\n      });\n      setFeedbackActive(true);\n\n      // 发送反馈文本，可选\n      const touchText = '我摸了摸你胸肌，你该怎么说，我希望你每次回答我不一样的话！';\n      sendTextMessage(touchText);\n    };\n    // 移动更新反馈位置\n    const updateDraggingFeedback = (clientX, clientY) => {\n      setFeedbackPos({\n        left: clientX,\n        top: clientY\n      });\n    };\n    // 移动结束后隐藏反馈\n    const endDraggingFeedback = () => {\n      setFeedbackActive(false);\n    };\n\n    // 长按拖动事件\n    const onMouseDown = event => {\n      event.preventDefault();\n      dragStartTimeoutRef.current = setTimeout(() => {\n        isDraggingRef.current = true;\n        handArea.style.cursor = 'grabbing';\n        const rect = handArea.getBoundingClientRect();\n        offsetXRef.current = event.clientX - rect.left;\n        offsetYRef.current = event.clientY - rect.top;\n        startDraggingFeedback(event.clientX, event.clientY);\n      }, 500);\n    };\n    const onMouseMove = event => {\n      if (isDraggingRef.current) {\n        let newLeft = event.clientX - offsetXRef.current;\n        let newTop = event.clientY - offsetYRef.current;\n        const maxLeft = window.innerWidth - handArea.offsetWidth;\n        const maxTop = window.innerHeight - handArea.offsetHeight;\n        newLeft = Math.min(Math.max(0, newLeft), maxLeft);\n        newTop = Math.min(Math.max(0, newTop), maxTop);\n        handArea.style.left = `${newLeft}px`;\n        handArea.style.top = `${newTop}px`;\n        updateDraggingFeedback(event.clientX, event.clientY);\n      }\n    };\n    const onMouseUp = () => {\n      clearTimeout(dragStartTimeoutRef.current);\n      if (isDraggingRef.current) {\n        isDraggingRef.current = false;\n        handArea.style.cursor = 'grab';\n        endDraggingFeedback();\n      }\n    };\n\n    // 触摸事件对应拖动 - 兼容移动端\n    const onTouchStart = event => {\n      if (event.touches.length === 0) return;\n      event.preventDefault();\n      dragStartTimeoutRef.current = setTimeout(() => {\n        isDraggingRef.current = true;\n        handArea.style.cursor = 'grabbing';\n        const touch = event.touches[0];\n        const rect = handArea.getBoundingClientRect();\n        offsetXRef.current = touch.clientX - rect.left;\n        offsetYRef.current = touch.clientY - rect.top;\n        startDraggingFeedback(touch.clientX, touch.clientY);\n      }, 500);\n    };\n    const onTouchMove = event => {\n      if (isDraggingRef.current && event.touches.length > 0) {\n        const touch = event.touches[0];\n        let newLeft = touch.clientX - offsetXRef.current;\n        let newTop = touch.clientY - offsetYRef.current;\n        const maxLeft = window.innerWidth - handArea.offsetWidth;\n        const maxTop = window.innerHeight - handArea.offsetHeight;\n        newLeft = Math.min(Math.max(0, newLeft), maxLeft);\n        newTop = Math.min(Math.max(0, newTop), maxTop);\n        handArea.style.left = `${newLeft}px`;\n        handArea.style.top = `${newTop}px`;\n        updateDraggingFeedback(touch.clientX, touch.clientY);\n        event.preventDefault();\n      }\n    };\n    const onTouchEnd = () => {\n      clearTimeout(dragStartTimeoutRef.current);\n      if (isDraggingRef.current) {\n        isDraggingRef.current = false;\n        handArea.style.cursor = 'grab';\n        endDraggingFeedback();\n      }\n    };\n\n    // 初始化手臂触摸区域样式，固定定位和初始位置\n    handArea.style.position = 'fixed';\n    handArea.style.left = '100px';\n    handArea.style.top = '100px';\n    handArea.style.cursor = 'grab';\n    handArea.style.userSelect = 'none';\n\n    // 背景透明且无文字\n    handArea.style.backgroundColor = 'transparent';\n\n    // 绑定事件监听\n    handArea.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    handArea.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    document.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onTouchEnd);\n\n    // 组件卸载时清理事件\n    return () => {\n      handArea.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      handArea.removeEventListener('touchstart', onTouchStart);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .hand-area {\n          width: 140px;\n          height: 80px;\n          border-radius: 10px; /* 圆角长方形 */\n          /* 透明背景，鼠标穿透事件自己控制 */\n          background-color: transparent;\n          position: fixed;\n          user-select: none;\n          touch-action: none;\n          z-index: 10001;\n        }\n        .touch-feedback {\n          position: fixed;\n          pointer-events: none;\n          z-index: 10002;\n          background: rgba(255, 255, 255, 0.85);\n          color: #a00;\n          font-weight: bold;\n          padding: 6px 12px;\n          border-radius: 12px;\n          user-select: none;\n          transform: translate(-50%, -50%);\n          opacity: 0;\n          transition: opacity 0.3s ease;\n          font-family: Arial, sans-serif;\n          white-space: nowrap;\n          box-shadow: 0 0 5px rgba(160,0,0,0.6);\n          pointer-events: none;\n        }\n        .touch-feedback.active {\n          opacity: 1;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hand-area\",\n      ref: handAreaRef,\n      tabIndex: 0,\n      \"aria-label\": \"\\u53EF\\u62D6\\u52A8\\u89E6\\u6478\\u533A\\u57DF\",\n      role: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `touch-feedback${feedbackActive ? ' active' : ''}`,\n      ref: feedbackRef,\n      style: {\n        left: feedbackPos.left,\n        top: feedbackPos.top\n      },\n      \"aria-live\": \"polite\",\n      children: \"\\u6211\\u6478\\u4E86\\u6478\\u4F60\\u80F8\\u808C\\uFF0C\\u4F60\\u8BE5\\u600E\\u4E48\\u8BF4\\uFF0C\\u6211\\u5E0C\\u671B\\u4F60\\u6BCF\\u6B21\\u56DE\\u7B54\\u6211\\u4E0D\\u4E00\\u6837\\u7684\\u8BDD\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(FloatingContainer, \"snnKbSjoEEMvmkL0JGIHlKqOy10=\");\n_c = FloatingContainer;\nvar _c;\n$RefreshReg$(_c, \"FloatingContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FloatingContainer","_s","handAreaRef","feedbackRef","isDraggingRef","dragStartTimeoutRef","offsetXRef","offsetYRef","feedbackActive","setFeedbackActive","feedbackPos","setFeedbackPos","left","top","sendTextMessage","text","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","handArea","current","feedback","startDraggingFeedback","clientX","clientY","touchText","updateDraggingFeedback","endDraggingFeedback","onMouseDown","event","preventDefault","setTimeout","style","cursor","rect","getBoundingClientRect","onMouseMove","newLeft","newTop","maxLeft","window","innerWidth","offsetWidth","maxTop","innerHeight","offsetHeight","Math","min","max","onMouseUp","clearTimeout","onTouchStart","touches","length","touch","onTouchMove","onTouchEnd","position","userSelect","backgroundColor","addEventListener","document","passive","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","tabIndex","role","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/FloatingContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\n/**\r\n * FloatingContainer 组件\r\n * - 长方形透明触摸区域（hand-area），无文字\r\n * - 长按 500ms 进入拖动模式\r\n * - 拖动时显示触摸反馈（文本气泡），拖动结束后隐藏\r\n */\r\n\r\nexport default function FloatingContainer() {\r\n  const handAreaRef = useRef(null);\r\n  const feedbackRef = useRef(null);\r\n\r\n  // 拖拽状态和偏移量\r\n  const isDraggingRef = useRef(false);\r\n  const dragStartTimeoutRef = useRef(null);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  // 触摸反馈显示状态（拖动时显示）\r\n  const [feedbackActive, setFeedbackActive] = useState(false);\r\n  // 触摸反馈位置\r\n  const [feedbackPos, setFeedbackPos] = useState({ left: 0, top: 0 });\r\n\r\n  /**\r\n   * 发送文本到服务器\r\n   * @param {string} text\r\n   */\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handArea = handAreaRef.current;\r\n    const feedback = feedbackRef.current;\r\n    if (!handArea || !feedback) return;\r\n\r\n    // 移动开始时，显示反馈并发送文本（可根据需求决定是否发送）\r\n    const startDraggingFeedback = (clientX, clientY) => {\r\n      setFeedbackPos({ left: clientX, top: clientY });\r\n      setFeedbackActive(true);\r\n\r\n      // 发送反馈文本，可选\r\n      const touchText =\r\n        '我摸了摸你胸肌，你该怎么说，我希望你每次回答我不一样的话！';\r\n      sendTextMessage(touchText);\r\n    };\r\n    // 移动更新反馈位置\r\n    const updateDraggingFeedback = (clientX, clientY) => {\r\n      setFeedbackPos({ left: clientX, top: clientY });\r\n    };\r\n    // 移动结束后隐藏反馈\r\n    const endDraggingFeedback = () => {\r\n      setFeedbackActive(false);\r\n    };\r\n\r\n    // 长按拖动事件\r\n    const onMouseDown = (event) => {\r\n      event.preventDefault();\r\n\r\n      dragStartTimeoutRef.current = setTimeout(() => {\r\n        isDraggingRef.current = true;\r\n        handArea.style.cursor = 'grabbing';\r\n\r\n        const rect = handArea.getBoundingClientRect();\r\n        offsetXRef.current = event.clientX - rect.left;\r\n        offsetYRef.current = event.clientY - rect.top;\r\n\r\n        startDraggingFeedback(event.clientX, event.clientY);\r\n      }, 500);\r\n    };\r\n    const onMouseMove = (event) => {\r\n      if (isDraggingRef.current) {\r\n        let newLeft = event.clientX - offsetXRef.current;\r\n        let newTop = event.clientY - offsetYRef.current;\r\n\r\n        const maxLeft = window.innerWidth - handArea.offsetWidth;\r\n        const maxTop = window.innerHeight - handArea.offsetHeight;\r\n\r\n        newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n        newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n        handArea.style.left = `${newLeft}px`;\r\n        handArea.style.top = `${newTop}px`;\r\n\r\n        updateDraggingFeedback(event.clientX, event.clientY);\r\n      }\r\n    };\r\n    const onMouseUp = () => {\r\n      clearTimeout(dragStartTimeoutRef.current);\r\n      if (isDraggingRef.current) {\r\n        isDraggingRef.current = false;\r\n        handArea.style.cursor = 'grab';\r\n\r\n        endDraggingFeedback();\r\n      }\r\n    };\r\n\r\n    // 触摸事件对应拖动 - 兼容移动端\r\n    const onTouchStart = (event) => {\r\n      if (event.touches.length === 0) return;\r\n      event.preventDefault();\r\n\r\n      dragStartTimeoutRef.current = setTimeout(() => {\r\n        isDraggingRef.current = true;\r\n        handArea.style.cursor = 'grabbing';\r\n\r\n        const touch = event.touches[0];\r\n        const rect = handArea.getBoundingClientRect();\r\n        offsetXRef.current = touch.clientX - rect.left;\r\n        offsetYRef.current = touch.clientY - rect.top;\r\n\r\n        startDraggingFeedback(touch.clientX, touch.clientY);\r\n      }, 500);\r\n    };\r\n    const onTouchMove = (event) => {\r\n      if (isDraggingRef.current && event.touches.length > 0) {\r\n        const touch = event.touches[0];\r\n\r\n        let newLeft = touch.clientX - offsetXRef.current;\r\n        let newTop = touch.clientY - offsetYRef.current;\r\n\r\n        const maxLeft = window.innerWidth - handArea.offsetWidth;\r\n        const maxTop = window.innerHeight - handArea.offsetHeight;\r\n\r\n        newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n        newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n        handArea.style.left = `${newLeft}px`;\r\n        handArea.style.top = `${newTop}px`;\r\n\r\n        updateDraggingFeedback(touch.clientX, touch.clientY);\r\n\r\n        event.preventDefault();\r\n      }\r\n    };\r\n    const onTouchEnd = () => {\r\n      clearTimeout(dragStartTimeoutRef.current);\r\n      if (isDraggingRef.current) {\r\n        isDraggingRef.current = false;\r\n        handArea.style.cursor = 'grab';\r\n\r\n        endDraggingFeedback();\r\n      }\r\n    };\r\n\r\n    // 初始化手臂触摸区域样式，固定定位和初始位置\r\n    handArea.style.position = 'fixed';\r\n    handArea.style.left = '100px';\r\n    handArea.style.top = '100px';\r\n    handArea.style.cursor = 'grab';\r\n    handArea.style.userSelect = 'none';\r\n\r\n    // 背景透明且无文字\r\n    handArea.style.backgroundColor = 'transparent';\r\n\r\n    // 绑定事件监听\r\n    handArea.addEventListener('mousedown', onMouseDown);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    handArea.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    // 组件卸载时清理事件\r\n    return () => {\r\n      handArea.removeEventListener('mousedown', onMouseDown);\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      handArea.removeEventListener('touchstart', onTouchStart);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        .hand-area {\r\n          width: 140px;\r\n          height: 80px;\r\n          border-radius: 10px; /* 圆角长方形 */\r\n          /* 透明背景，鼠标穿透事件自己控制 */\r\n          background-color: transparent;\r\n          position: fixed;\r\n          user-select: none;\r\n          touch-action: none;\r\n          z-index: 10001;\r\n        }\r\n        .touch-feedback {\r\n          position: fixed;\r\n          pointer-events: none;\r\n          z-index: 10002;\r\n          background: rgba(255, 255, 255, 0.85);\r\n          color: #a00;\r\n          font-weight: bold;\r\n          padding: 6px 12px;\r\n          border-radius: 12px;\r\n          user-select: none;\r\n          transform: translate(-50%, -50%);\r\n          opacity: 0;\r\n          transition: opacity 0.3s ease;\r\n          font-family: Arial, sans-serif;\r\n          white-space: nowrap;\r\n          box-shadow: 0 0 5px rgba(160,0,0,0.6);\r\n          pointer-events: none;\r\n        }\r\n        .touch-feedback.active {\r\n          opacity: 1;\r\n        }\r\n      `}</style>\r\n\r\n      <div\r\n        className=\"hand-area\"\r\n        ref={handAreaRef}\r\n        tabIndex={0}\r\n        aria-label=\"可拖动触摸区域\"\r\n        role=\"button\"\r\n      >\r\n        {/* 无文字 */}\r\n      </div>\r\n\r\n      <div\r\n        className={`touch-feedback${feedbackActive ? ' active' : ''}`}\r\n        ref={feedbackRef}\r\n        style={{ left: feedbackPos.left, top: feedbackPos.top }}\r\n        aria-live=\"polite\"\r\n      >\r\n        我摸了摸你胸肌，你该怎么说，我希望你每次回答我不一样的话！\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}