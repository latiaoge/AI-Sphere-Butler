{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\WallpaperManager.jsx\",\n  _s = $RefreshSig$();\n// components/WallpaperManager.jsx\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const menuWallpapers = {\n  home: '/core/client/ai-butler/image/bg-home.jpeg',\n  // 这里仍留图片作为备用\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg'\n};\n\n// 视频文件路径（请替换成实际mp4路径）\nconst homeVideoSrc = '/core/client/ai-butler/video/bg-home.mp4';\nconst WallpaperManager = ({\n  selectedMenu,\n  showGlassTransition\n}) => {\n  _s();\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers.home); // 默认使用home壁纸\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n  const [isVideoError, setIsVideoError] = useState(false);\n  const [isImageLoading, setIsImageLoading] = useState(true);\n  const [imageLoadError, setImageLoadError] = useState(false);\n\n  // 新增：摄像头流状态\n  const [cameraStream, setCameraStream] = useState(null);\n  const videoRef = useRef(null);\n  useEffect(() => {\n    // 重置所有状态\n    setIsVideoLoaded(false);\n    setIsVideoError(false);\n    setImageLoadError(false);\n    setIsImageLoading(true);\n    if (selectedMenu === 'home') {\n      // 主页，优先尝试使用摄像头作为背景\n      setCurrentWallpaper(menuWallpapers.home);\n      setIsImageLoading(false);\n\n      // 请求摄像头权限，获取视频流\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n      }).then(stream => {\n        setCameraStream(stream);\n        setIsVideoLoaded(true);\n        setIsVideoError(false);\n      }).catch(err => {\n        console.warn('获取摄像头失败，使用视频背景或图片备用', err);\n        setCameraStream(null);\n        setIsVideoError(false); // 让视频背景尝试加载\n        setIsVideoLoaded(false);\n      });\n      return;\n    }\n\n    // 其他菜单，加载对应图片\n    const targetWallpaper = menuWallpapers[selectedMenu] || menuWallpapers.home;\n    const img = new Image();\n    img.onload = () => {\n      setCurrentWallpaper(targetWallpaper);\n      setIsImageLoading(false);\n    };\n    img.onerror = () => {\n      console.error('壁纸加载失败:', targetWallpaper);\n      // 尝试加载默认home壁纸\n      const homeImg = new Image();\n      homeImg.onload = () => {\n        setCurrentWallpaper(menuWallpapers.home);\n        setIsImageLoading(false);\n      };\n      homeImg.onerror = () => {\n        setImageLoadError(true);\n        setIsImageLoading(false);\n      };\n      homeImg.src = menuWallpapers.home;\n    };\n    img.src = targetWallpaper;\n\n    // 确保清理摄像头流\n    if (cameraStream) {\n      cameraStream.getTracks().forEach(track => track.stop());\n      setCameraStream(null);\n    }\n  }, [selectedMenu]);\n  useEffect(() => {\n    // 当有摄像头流且 video 元素准备好时，设置流源\n    if (cameraStream && videoRef.current) {\n      videoRef.current.srcObject = cameraStream;\n      videoRef.current.play().catch(() => {});\n    }\n  }, [cameraStream]);\n\n  // 公共样式\n  const baseStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    zIndex: -1,\n    pointerEvents: 'none',\n    transition: 'opacity 0.5s ease-in-out',\n    backgroundColor: '#000' // 防止闪屏\n  };\n\n  // 摄像头视频专用样式\n  const cameraVideoStyle = {\n    ...baseStyle,\n    objectFit: 'cover',\n    opacity: isVideoLoaded && !isVideoError ? 1 : 0\n  };\n\n  // 本来的视频专用样式，带objectFit\n  const videoStyle = {\n    ...baseStyle,\n    objectFit: 'cover',\n    opacity: isVideoLoaded && !isVideoError ? 1 : 0\n  };\n\n  // 图片专用样式\n  const imageStyle = {\n    ...baseStyle,\n    backgroundImage: `url(${currentWallpaper})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    opacity: (selectedMenu !== 'home' || isVideoError) && !isImageLoading && !imageLoadError ? 1 : 0\n  };\n\n  // 视频加载成功回调\n  const handleVideoCanPlay = () => {\n    setIsVideoLoaded(true);\n    setIsVideoError(false);\n  };\n\n  // 视频加载失败回调\n  const handleVideoError = () => {\n    console.error('视频加载失败，切换为壁纸');\n    setIsVideoError(true);\n    setIsVideoLoaded(false);\n  };\n  if (selectedMenu === 'home') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: cameraStream ? /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true,\n        playsInline: true,\n        style: cameraVideoStyle,\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // 摄像头失败后，回退原先的视频背景\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          playsInline: true,\n          preload: \"auto\",\n          style: videoStyle,\n          src: homeVideoSrc,\n          \"aria-hidden\": \"true\",\n          onCanPlay: handleVideoCanPlay,\n          onError: handleVideoError\n        }, homeVideoSrc, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), (isVideoError || !isVideoLoaded) && !isImageLoading && !imageLoadError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-wallpaper\",\n          style: imageStyle,\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false);\n  }\n\n  // 其他菜单只显示图片背景\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isImageLoading && !imageLoadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-wallpaper\",\n      style: imageStyle,\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), imageLoadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-wallpaper\",\n      style: {\n        ...baseStyle,\n        backgroundColor: '#222',\n        opacity: 1\n      },\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(WallpaperManager, \"s5MlO8TBETv+i5drP4g6qGMraIE=\");\n_c = WallpaperManager;\nexport default WallpaperManager;\nvar _c;\n$RefreshReg$(_c, \"WallpaperManager\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","menuWallpapers","home","butler","car","homeassistant","ops","settings","homeVideoSrc","WallpaperManager","selectedMenu","showGlassTransition","_s","currentWallpaper","setCurrentWallpaper","isVideoLoaded","setIsVideoLoaded","isVideoError","setIsVideoError","isImageLoading","setIsImageLoading","imageLoadError","setImageLoadError","cameraStream","setCameraStream","videoRef","navigator","mediaDevices","getUserMedia","video","audio","then","stream","catch","err","console","warn","targetWallpaper","img","Image","onload","onerror","error","homeImg","src","getTracks","forEach","track","stop","current","srcObject","play","baseStyle","position","top","left","width","height","zIndex","pointerEvents","transition","backgroundColor","cameraVideoStyle","objectFit","opacity","videoStyle","imageStyle","backgroundImage","backgroundSize","backgroundPosition","handleVideoCanPlay","handleVideoError","children","ref","autoPlay","muted","playsInline","style","fileName","_jsxFileName","lineNumber","columnNumber","loop","preload","onCanPlay","onError","className","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/WallpaperManager.jsx"],"sourcesContent":["// components/WallpaperManager.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport const menuWallpapers = {\r\n  home: '/core/client/ai-butler/image/bg-home.jpeg', // 这里仍留图片作为备用\r\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\r\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\r\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\r\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\r\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg',\r\n};\r\n\r\n// 视频文件路径（请替换成实际mp4路径）\r\nconst homeVideoSrc = '/core/client/ai-butler/video/bg-home.mp4';\r\n\r\nconst WallpaperManager = ({ selectedMenu, showGlassTransition }) => {\r\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers.home); // 默认使用home壁纸\r\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\r\n  const [isVideoError, setIsVideoError] = useState(false);\r\n  const [isImageLoading, setIsImageLoading] = useState(true);\r\n  const [imageLoadError, setImageLoadError] = useState(false);\r\n\r\n  // 新增：摄像头流状态\r\n  const [cameraStream, setCameraStream] = useState(null);\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // 重置所有状态\r\n    setIsVideoLoaded(false);\r\n    setIsVideoError(false);\r\n    setImageLoadError(false);\r\n    setIsImageLoading(true);\r\n\r\n    if (selectedMenu === 'home') {\r\n      // 主页，优先尝试使用摄像头作为背景\r\n      setCurrentWallpaper(menuWallpapers.home);\r\n      setIsImageLoading(false);\r\n\r\n      // 请求摄像头权限，获取视频流\r\n      navigator.mediaDevices.getUserMedia({ video: true, audio: false })\r\n        .then((stream) => {\r\n          setCameraStream(stream);\r\n          setIsVideoLoaded(true);\r\n          setIsVideoError(false);\r\n        })\r\n        .catch((err) => {\r\n          console.warn('获取摄像头失败，使用视频背景或图片备用', err);\r\n          setCameraStream(null);\r\n          setIsVideoError(false); // 让视频背景尝试加载\r\n          setIsVideoLoaded(false);\r\n        });\r\n\r\n      return;\r\n    }\r\n\r\n    // 其他菜单，加载对应图片\r\n    const targetWallpaper = menuWallpapers[selectedMenu] || menuWallpapers.home;\r\n\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      setCurrentWallpaper(targetWallpaper);\r\n      setIsImageLoading(false);\r\n    };\r\n    img.onerror = () => {\r\n      console.error('壁纸加载失败:', targetWallpaper);\r\n      // 尝试加载默认home壁纸\r\n      const homeImg = new Image();\r\n      homeImg.onload = () => {\r\n        setCurrentWallpaper(menuWallpapers.home);\r\n        setIsImageLoading(false);\r\n      };\r\n      homeImg.onerror = () => {\r\n        setImageLoadError(true);\r\n        setIsImageLoading(false);\r\n      };\r\n      homeImg.src = menuWallpapers.home;\r\n    };\r\n    img.src = targetWallpaper;\r\n\r\n    // 确保清理摄像头流\r\n    if (cameraStream) {\r\n      cameraStream.getTracks().forEach(track => track.stop());\r\n      setCameraStream(null);\r\n    }\r\n  }, [selectedMenu]);\r\n\r\n  useEffect(() => {\r\n    // 当有摄像头流且 video 元素准备好时，设置流源\r\n    if (cameraStream && videoRef.current) {\r\n      videoRef.current.srcObject = cameraStream;\r\n      videoRef.current.play().catch(() => {});\r\n    }\r\n  }, [cameraStream]);\r\n\r\n  // 公共样式\r\n  const baseStyle = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: -1,\r\n    pointerEvents: 'none',\r\n    transition: 'opacity 0.5s ease-in-out',\r\n    backgroundColor: '#000', // 防止闪屏\r\n  };\r\n\r\n  // 摄像头视频专用样式\r\n  const cameraVideoStyle = {\r\n    ...baseStyle,\r\n    objectFit: 'cover',\r\n    opacity: isVideoLoaded && !isVideoError ? 1 : 0,\r\n  };\r\n\r\n  // 本来的视频专用样式，带objectFit\r\n  const videoStyle = {\r\n    ...baseStyle,\r\n    objectFit: 'cover',\r\n    opacity: isVideoLoaded && !isVideoError ? 1 : 0,\r\n  };\r\n\r\n  // 图片专用样式\r\n  const imageStyle = {\r\n    ...baseStyle,\r\n    backgroundImage: `url(${currentWallpaper})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    opacity: (selectedMenu !== 'home' || isVideoError) && !isImageLoading && !imageLoadError ? 1 : 0,\r\n  };\r\n\r\n  // 视频加载成功回调\r\n  const handleVideoCanPlay = () => {\r\n    setIsVideoLoaded(true);\r\n    setIsVideoError(false);\r\n  };\r\n\r\n  // 视频加载失败回调\r\n  const handleVideoError = () => {\r\n    console.error('视频加载失败，切换为壁纸');\r\n    setIsVideoError(true);\r\n    setIsVideoLoaded(false);\r\n  };\r\n\r\n  if (selectedMenu === 'home') {\r\n    return (\r\n      <>\r\n        {/* 优先显示摄像头实时画面 */}\r\n        {cameraStream ? (\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            muted\r\n            playsInline\r\n            style={cameraVideoStyle}\r\n            aria-hidden=\"true\"\r\n          />\r\n        ) : (\r\n          // 摄像头失败后，回退原先的视频背景\r\n          <>\r\n            <video\r\n              key={homeVideoSrc}\r\n              autoPlay\r\n              loop\r\n              muted\r\n              playsInline\r\n              preload=\"auto\"\r\n              style={videoStyle}\r\n              src={homeVideoSrc}\r\n              aria-hidden=\"true\"\r\n              onCanPlay={handleVideoCanPlay}\r\n              onError={handleVideoError}\r\n            />\r\n            {(isVideoError || !isVideoLoaded) && !isImageLoading && !imageLoadError && (\r\n              <div\r\n                className=\"app-wallpaper\"\r\n                style={imageStyle}\r\n                aria-hidden=\"true\"\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  // 其他菜单只显示图片背景\r\n  return (\r\n    <>\r\n      {(!isImageLoading && !imageLoadError) && (\r\n        <div\r\n          className=\"app-wallpaper\"\r\n          style={imageStyle}\r\n          aria-hidden=\"true\"\r\n        />\r\n      )}\r\n      {imageLoadError && (\r\n        <div\r\n          className=\"app-wallpaper\"\r\n          style={{\r\n            ...baseStyle,\r\n            backgroundColor: '#222',\r\n            opacity: 1,\r\n          }}\r\n          aria-hidden=\"true\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WallpaperManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}