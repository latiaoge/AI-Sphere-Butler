{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\AudioTranscriber.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AudioTranscriber() {\n  _s();\n  // 从全局录音上下文中取状态和操作\n  const {\n    isRecording,\n    transcription,\n    lang,\n    speakerVerification,\n    wakeWordEnabled,\n    wakeWords,\n    setLang,\n    setSpeakerVerification,\n    setWakeWordEnabled,\n    setWakeWords,\n    startRecording,\n    stopRecording,\n    setTranscription\n  } = useRecorderContext();\n\n  // 控制面板展开/折叠状态，初始为折叠（只显示麦克风按钮）\n  const [expanded, setExpanded] = useState(false);\n\n  // 拖拽相关引用，仅用于麦克风按钮（折叠态）\n  const micButtonRef = useRef(null);\n  const wrapperRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const offsetXRef = useRef(0);\n  const offsetYRef = useRef(0);\n\n  // 面板拖拽相关引用（展开态）\n  const panelRef = useRef(null);\n  const panelDragState = useRef({\n    isDragging: false,\n    offsetX: 0,\n    offsetY: 0\n  });\n\n  // localStorage 保存位置的 key\n  const MIC_STORAGE_KEY = 'audioTranscriberMicButtonPosition';\n  const PANEL_STORAGE_KEY = 'audioTranscriberPanelPosition';\n\n  // 新增声纹识别录音状态和上传状态（保持本组件私有状态）\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\n  const speakerRecorderRef = useRef(null);\n  const speakerAudioChunksRef = useRef([]);\n\n  // 面板位置和大小（展开时）\n  const [panelPosition, setPanelPosition] = useState(() => {\n    try {\n      const saved = localStorage.getItem(PANEL_STORAGE_KEY);\n      if (saved) return JSON.parse(saved);\n    } catch {}\n    return {\n      left: 100,\n      top: 100,\n      width: 360,\n      height: 280\n    };\n  });\n\n  // 麦克风按钮位置（折叠时）\n  const [micPosition, setMicPosition] = useState(() => {\n    try {\n      const saved = localStorage.getItem(MIC_STORAGE_KEY);\n      if (saved) return JSON.parse(saved);\n    } catch {}\n    return {\n      left: 26,\n      top: 26\n    };\n  });\n\n  // 发送文本消息到 LLM 服务（保持不变）\n  const sendTextMessage = async text => {\n    if (!text.trim()) return;\n    try {\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('网络响应失败，状态码: ' + response.status);\n      }\n      const data = await response.json();\n      console.log('文本发送成功，服务器返回：', data);\n    } catch (error) {\n      console.error('文本发送失败：', error);\n    }\n  };\n\n  // 组件卸载清理\n  useEffect(() => {\n    return () => {\n      stopRecording();\n      stopSpeakerRecording();\n    };\n  }, []);\n\n  // 监听语言和声纹识别开关变化存localStorage（保持不变）\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberLang', lang);\n    } catch {}\n  }, [lang]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString());\n    } catch {}\n  }, [speakerVerification]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('wakeWordEnabled', wakeWordEnabled.toString());\n    } catch {}\n  }, [wakeWordEnabled]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('wakeWords', wakeWords);\n    } catch {}\n  }, [wakeWords]);\n\n  // 录制声纹相关函数保持不变\n  function startSpeakerRecording() {\n    if (isSpeakerRecording) return;\n    setSpeakerUploadStatus('请求麦克风权限...');\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      setSpeakerUploadStatus('开始录音2秒...');\n      speakerAudioChunksRef.current = [];\n      let mediaRecorder;\n      try {\n        mediaRecorder = new MediaRecorder(stream, {\n          mimeType: 'audio/wav'\n        });\n      } catch (e) {\n        mediaRecorder = new MediaRecorder(stream);\n      }\n      speakerRecorderRef.current = mediaRecorder;\n      mediaRecorder.ondataavailable = event => {\n        if (event.data && event.data.size > 0) {\n          speakerAudioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = async () => {\n        setSpeakerUploadStatus('录音结束，准备上传...');\n        const blob = new Blob(speakerAudioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        try {\n          const formData = new FormData();\n          formData.append('file', blob, 'speaker.wav');\n          const uploadUrl = 'http://192.168.168.77:6007/api/uploadSpeaker';\n          const res = await fetch(uploadUrl, {\n            method: 'POST',\n            body: formData\n          });\n          if (!res.ok) throw new Error(`上传失败，状态码: ${res.status}`);\n          const result = await res.json();\n          setSpeakerUploadStatus('上传成功');\n          console.log('上传成功，服务器返回：', result);\n        } catch (err) {\n          setSpeakerUploadStatus('上传失败: ' + err.message);\n          console.error('上传失败', err);\n        }\n        stream.getTracks().forEach(track => track.stop());\n        setTimeout(() => setSpeakerUploadStatus(''), 3000);\n        setIsSpeakerRecording(false);\n      };\n      mediaRecorder.start();\n      setIsSpeakerRecording(true);\n      setTimeout(() => {\n        if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\n          speakerRecorderRef.current.stop();\n        }\n      }, 2000);\n    }).catch(err => {\n      setSpeakerUploadStatus('获取麦克风权限失败: ' + err.message);\n      console.error('获取麦克风权限失败', err);\n    });\n  }\n  function stopSpeakerRecording() {\n    if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\n      speakerRecorderRef.current.stop();\n      setIsSpeakerRecording(false);\n    }\n  }\n\n  // 保存位置到 localStorage\n  const saveMicPosition = pos => {\n    setMicPosition(pos);\n    try {\n      localStorage.setItem(MIC_STORAGE_KEY, JSON.stringify(pos));\n    } catch {}\n  };\n  const savePanelPosition = pos => {\n    setPanelPosition(pos);\n    try {\n      localStorage.setItem(PANEL_STORAGE_KEY, JSON.stringify(pos));\n    } catch {}\n  };\n\n  // 拖拽逻辑 - 麦克风按钮（折叠态）\n  useEffect(() => {\n    if (!micButtonRef.current || !wrapperRef.current) return;\n    const button = micButtonRef.current;\n    const wrapper = wrapperRef.current;\n\n    // 初始化按钮位置\n    let left = micPosition.left;\n    let top = micPosition.top;\n    button.style.position = 'absolute';\n    button.style.left = `${left}px`;\n    button.style.top = `${top}px`;\n    button.style.zIndex = '10000';\n    button.style.cursor = 'grab';\n    isDraggingRef.current = false;\n    offsetXRef.current = 0;\n    offsetYRef.current = 0;\n\n    // 鼠标事件\n    const onMouseDown = e => {\n      if (e.button !== 0) return;\n      isDraggingRef.current = true;\n      const wrapperRect = wrapper.getBoundingClientRect();\n      offsetXRef.current = e.clientX - wrapperRect.left - button.offsetLeft;\n      offsetYRef.current = e.clientY - wrapperRect.top - button.offsetTop;\n      button.style.cursor = 'grabbing';\n      e.preventDefault();\n    };\n    const onMouseMove = e => {\n      if (!isDraggingRef.current) return;\n      const wrapperRect = wrapper.getBoundingClientRect();\n      let newLeft = e.clientX - wrapperRect.left - offsetXRef.current;\n      let newTop = e.clientY - wrapperRect.top - offsetYRef.current;\n\n      // 限制范围在面板内\n      newLeft = Math.min(Math.max(0, newLeft), wrapper.clientWidth - button.offsetWidth);\n      newTop = Math.min(Math.max(0, newTop), wrapper.clientHeight - button.offsetHeight);\n      button.style.left = `${newLeft}px`;\n      button.style.top = `${newTop}px`;\n    };\n    const onMouseUp = () => {\n      if (!isDraggingRef.current) return;\n      isDraggingRef.current = false;\n      button.style.cursor = 'grab';\n      localStorage.setItem(MIC_STORAGE_KEY, JSON.stringify({\n        left: button.offsetLeft,\n        top: button.offsetTop\n      }));\n      setMicPosition({\n        left: button.offsetLeft,\n        top: button.offsetTop\n      });\n    };\n\n    // 触摸事件\n    const onTouchStart = e => {\n      if (e.touches.length === 0) return;\n      isDraggingRef.current = true;\n      const wrapperRect = wrapper.getBoundingClientRect();\n      const touch = e.touches[0];\n      offsetXRef.current = touch.clientX - wrapperRect.left - button.offsetLeft;\n      offsetYRef.current = touch.clientY - wrapperRect.top - button.offsetTop;\n      button.style.cursor = 'grabbing';\n    };\n    const onTouchMove = e => {\n      if (!isDraggingRef.current || e.touches.length === 0) return;\n      const wrapperRect = wrapper.getBoundingClientRect();\n      const touch = e.touches[0];\n      let newLeft = touch.clientX - wrapperRect.left - offsetXRef.current;\n      let newTop = touch.clientY - wrapperRect.top - offsetYRef.current;\n      newLeft = Math.min(Math.max(0, newLeft), wrapper.clientWidth - button.offsetWidth);\n      newTop = Math.min(Math.max(0, newTop), wrapper.clientHeight - button.offsetHeight);\n      button.style.left = `${newLeft}px`;\n      button.style.top = `${newTop}px`;\n      e.preventDefault();\n    };\n    const onTouchEnd = () => {\n      if (!isDraggingRef.current) return;\n      isDraggingRef.current = false;\n      button.style.cursor = 'grab';\n      localStorage.setItem(MIC_STORAGE_KEY, JSON.stringify({\n        left: button.offsetLeft,\n        top: button.offsetTop\n      }));\n      setMicPosition({\n        left: button.offsetLeft,\n        top: button.offsetTop\n      });\n    };\n    button.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    button.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    document.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onTouchEnd);\n\n    // 清理事件监听\n    return () => {\n      button.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      button.removeEventListener('touchstart', onTouchStart);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    };\n  }, [micPosition]);\n\n  // 拖拽逻辑 - 面板（展开态）\n  useEffect(() => {\n    if (!expanded || !panelRef.current) return;\n    const panel = panelRef.current;\n    panel.style.position = 'fixed';\n    panel.style.left = `${panelPosition.left}px`;\n    panel.style.top = `${panelPosition.top}px`;\n    panel.style.width = `${panelPosition.width}px`;\n    panel.style.height = `${panelPosition.height}px`;\n    panel.style.zIndex = 9999;\n    panel.style.cursor = 'grab';\n    const onMouseDown = e => {\n      if (e.button !== 0) return;\n      if (!e.target.closest('.panel-header')) return;\n      panelDragState.current.isDragging = true;\n      panelDragState.current.offsetX = e.clientX - panel.offsetLeft;\n      panelDragState.current.offsetY = e.clientY - panel.offsetTop;\n      panel.style.cursor = 'grabbing';\n      e.preventDefault();\n    };\n    const onMouseMove = e => {\n      if (!panelDragState.current.isDragging) return;\n      e.preventDefault();\n      let newLeft = e.clientX - panelDragState.current.offsetX;\n      let newTop = e.clientY - panelDragState.current.offsetY;\n      const maxLeft = window.innerWidth - panel.offsetWidth;\n      const maxTop = window.innerHeight - panel.offsetHeight;\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\n      newTop = Math.min(Math.max(0, newTop), maxTop);\n      panel.style.left = `${newLeft}px`;\n      panel.style.top = `${newTop}px`;\n    };\n    const onMouseUp = () => {\n      if (!panelDragState.current.isDragging) return;\n      panelDragState.current.isDragging = false;\n      panel.style.cursor = 'grab';\n      savePanelPosition({\n        left: panel.offsetLeft,\n        top: panel.offsetTop,\n        width: panel.offsetWidth,\n        height: panel.offsetHeight\n      });\n    };\n\n    // 触摸事件\n    const onTouchStart = e => {\n      if (e.touches.length === 0) return;\n      if (!e.target.closest('.panel-header')) return;\n      panelDragState.current.isDragging = true;\n      const touch = e.touches[0];\n      panelDragState.current.offsetX = touch.clientX - panel.offsetLeft;\n      panelDragState.current.offsetY = touch.clientY - panel.offsetTop;\n      panel.style.cursor = 'grabbing';\n      e.preventDefault();\n    };\n    const onTouchMove = e => {\n      if (!panelDragState.current.isDragging) return;\n      const touch = e.touches[0];\n      let newLeft = touch.clientX - panelDragState.current.offsetX;\n      let newTop = touch.clientY - panelDragState.current.offsetY;\n      const maxLeft = window.innerWidth - panel.offsetWidth;\n      const maxTop = window.innerHeight - panel.offsetHeight;\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\n      newTop = Math.min(Math.max(0, newTop), maxTop);\n      panel.style.left = `${newLeft}px`;\n      panel.style.top = `${newTop}px`;\n      e.preventDefault();\n    };\n    const onTouchEnd = () => {\n      if (!panelDragState.current.isDragging) return;\n      panelDragState.current.isDragging = false;\n      panel.style.cursor = 'grab';\n      savePanelPosition({\n        left: panel.offsetLeft,\n        top: panel.offsetTop,\n        width: panel.offsetWidth,\n        height: panel.offsetHeight\n      });\n    };\n    panel.addEventListener('mousedown', onMouseDown);\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n    panel.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    window.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    });\n    window.addEventListener('touchend', onTouchEnd);\n    return () => {\n      panel.removeEventListener('mousedown', onMouseDown);\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n      panel.removeEventListener('touchstart', onTouchStart);\n      window.removeEventListener('touchmove', onTouchMove);\n      window.removeEventListener('touchend', onTouchEnd);\n    };\n  }, [expanded, panelPosition]);\n\n  // 双击节流，单击/双击事件合并处理\n  const lastClickTimeRef = useRef(0);\n  const DOUBLE_CLICK_DELAY = 400;\n  const handleMicClick = () => {\n    const now = Date.now();\n    if (now - lastClickTimeRef.current < DOUBLE_CLICK_DELAY) {\n      // 双击切换展开/折叠\n      setExpanded(prev => !prev);\n    } else {\n      // 单击控制录音开关\n      if (isRecording) stopRecording();else startRecording();\n    }\n    lastClickTimeRef.current = now;\n  };\n\n  // 省略声纹录制波纹效果部分，保持不变即可...\n  const [ripples, setRipples] = useState([]);\n  const rippleCountRef = useRef(0);\n  const speakerButtonRef = useRef(null);\n  const handleSpeakerRecordClick = event => {\n    if (isRecording || isSpeakerRecording) return;\n    createRipple(event);\n    startSpeakerRecording();\n  };\n  const createRipple = event => {\n    if (!speakerButtonRef.current) return;\n    const rect = speakerButtonRef.current.getBoundingClientRect();\n    const size = Math.max(rect.width, rect.height);\n    const x = event.clientX - rect.left - size / 2;\n    const y = event.clientY - rect.top - size / 2;\n    const newRipple = {\n      key: rippleCountRef.current,\n      size,\n      x,\n      y\n    };\n    rippleCountRef.current += 1;\n    setRipples(oldRipples => [...oldRipples, newRipple]);\n    setTimeout(() => {\n      setRipples(oldRipples => oldRipples.filter(r => r.key !== newRipple.key));\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* 麦克风按钮及容器样式 */\n        #mic-button-wrapper {\n          position: relative;\n          width: 100%;\n          height: 100%;\n          z-index: 10000;\n          user-select: none;\n          pointer-events: auto;\n          display: flex;\n          flex-direction: column;\n          align-items: flex-start;\n          gap: 4px;\n          overflow: visible;\n        }\n\n        #listening-text {\n          font-size: 12px;\n          color: rgba(128, 128, 128, 0.7);\n          user-select: none;\n          pointer-events: none;\n          font-weight: 500;\n          opacity: 0;\n          transition: opacity 0.3s ease;\n          height: 16px;\n          line-height: 16px;\n        }\n        #listening-text.visible {\n          opacity: 1;\n        }\n\n        #mic-button {\n          background: none;\n          border: none;\n          padding: 0;\n          outline: none;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          filter: none;\n          transition: filter 0.3s ease;\n\n          width: 68px;\n          height: 68px;\n          cursor: grab;\n          position: absolute; /* 绝对定位 */\n        }\n        #mic-button.recording {\n          filter: drop-shadow(0 0 5px red);\n        }\n        #mic-button img {\n          width: 48px;\n          height: 48px;\n          user-select: none;\n          pointer-events: none;\n          -webkit-user-drag: none;\n        }\n\n        /* 语言和声纹识别区域样式 */\n        #controls-container {\n          max-width: 700px;\n          margin: 20px auto 12px auto;\n          font-family: Arial, sans-serif;\n          color: white;\n          display: flex;\n          align-items: center;\n          gap: 20px;\n          user-select: none;\n          flex-wrap: wrap;\n        }\n        #controls-container label {\n          font-size: 14px;\n          user-select: none;\n          display: flex;\n          align-items: center;\n          gap: 6px;\n        }\n        #langInput, #wakeWordsInput {\n          padding: 6px;\n          font-size: 12px;\n          width: 140px;\n          background-color: #333;\n          border: 1px solid #666;\n          border-radius: 3px;\n          color: white;\n          user-select: text;\n        }\n        #speakerVerificationLabel {\n          font-size: 14px;\n        }\n        #wakeWordToggleLabel {\n          font-size: 14px;\n          display: flex;\n          align-items: center;\n          gap: 6px;\n        }\n\n        /* 纯 CSS 玻璃态录制声纹按钮 */\n        #speaker-record-button {\n          position: relative;\n          overflow: hidden;\n          background: rgba(255, 255, 255, 0.1);\n          border-radius: 16px;\n          border: 1px solid rgba(255, 255, 255, 0.3);\n          color: white;\n          padding: 3px 10px;\n          font-size: 13px;\n          font-weight: 600;\n          cursor: pointer;\n          user-select: none;\n          box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n          backdrop-filter: blur(10px);\n          -webkit-backdrop-filter: blur(12px);\n          WebkitBackdropFilter: 'blur(10px)',\n          transition: all 0.3s ease;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          outline: none;\n          border-image: none;\n        }\n        #speaker-record-button:hover:not(:disabled) {\n          background: rgba(255, 255, 255, 0.2);\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\n          transform: scale(1.05);\n          filter: brightness(1.1);\n        }\n        #speaker-record-button:disabled {\n          opacity: 0.4;\n          cursor: not-allowed;\n          box-shadow: none;\n          background: rgba(255, 255, 255, 0.05);\n          filter: none;\n          transform: none;\n        }\n\n        /* 额外光泽层 */\n        #speaker-record-button::before {\n          content: '';\n          position: absolute;\n          top: -100%;\n          left: -100%;\n          width: 100%;\n          height: 100%;\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\n          pointer-events: none;\n          filter: blur(10px);\n          opacity: 0.6;\n          transition: opacity 0.3s ease;\n          border-radius: inherit;\n          z-index: 0;\n        }\n\n        /* 保留波纹效果的样式 */\n        .ripple {\n          position: absolute;\n          border-radius: 150%;\n          background: rgba(91, 155, 255, 0.7);\n          animation: rippleEffect 1s ease-out;\n          pointer-events: none;\n          transform: scale(0);\n          opacity: 0.75;\n          z-index: 1;\n        }\n\n        @keyframes rippleEffect {\n          to {\n            transform: scale(4);\n            opacity: 0;\n          }\n        }\n\n        /* 面板展开状态样式 */\n        #audio-transcriber-panel {\n          position: fixed;\n          z-index: 10000;\n          background-color: rgba(0, 0, 0, 0.85);\n          border-radius: 8px;\n          box-shadow: 0 0 12px rgba(0, 229, 255, 0.8);\n          color: white;\n          display: flex;\n          flex-direction: column;\n          overflow: hidden;\n          user-select: none;\n        }\n\n        #audio-transcriber-panel .panel-header {\n          height: 40px;\n          background-color: rgba(0, 229, 255, 0.2);\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 0 12px;\n          cursor: grab;\n          user-select: none;\n        }\n\n        #audio-transcriber-panel .panel-header .mic-button {\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          background-color: rgba(0,229,255,0.8);\n          border: none;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          outline: none;\n          box-shadow: 0 0 10px rgba(0,229,255,0.7);\n          cursor: pointer;\n          user-select: none;\n        }\n\n        #audio-transcriber-panel .panel-header .mic-button.recording {\n          background-color: #ff4d4d;\n          box-shadow: 0 0 10px red;\n        }\n\n        #audio-transcriber-panel .panel-header .mic-button img {\n          width: 20px;\n          height: 20px;\n          user-select: none;\n          pointer-events: none;\n          -webkit-user-drag: none;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), !expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mic-button-wrapper\",\n      ref: wrapperRef,\n      style: {\n        position: 'fixed',\n        left: micPosition.left,\n        top: micPosition.top,\n        zIndex: 10000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"listening-text\",\n        className: isRecording ? 'visible' : '',\n        \"aria-live\": \"polite\",\n        role: \"status\",\n        style: {\n          marginBottom: 4\n        },\n        children: \"\\u8046\\u542C\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"mic-button\",\n        ref: micButtonRef,\n        className: isRecording ? 'recording' : '',\n        onClick: handleMicClick,\n        onDoubleClick: e => {\n          e.preventDefault();\n          setExpanded(true);\n        },\n        \"aria-label\": isRecording ? '停止录音，双击展开面板' : '开始录音，双击展开面板',\n        title: isRecording ? '点击停止录音，双击展开面板' : '点击开始录音，双击展开面板',\n        type: \"button\",\n        disabled: isSpeakerRecording,\n        style: {\n          width: 68,\n          height: 68,\n          cursor: 'grab',\n          userSelect: 'none',\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          background: 'none',\n          border: 'none',\n          padding: 0,\n          outline: 'none',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          filter: isRecording ? 'drop-shadow(0 0 5px red)' : 'none',\n          transition: 'filter 0.3s ease'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/core/client/ai-butler/image/mic-icon.png\",\n          alt: \"\\u9EA6\\u514B\\u98CE\",\n          draggable: false,\n          style: {\n            width: 48,\n            height: 48\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 9\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"audio-transcriber-panel\",\n      ref: panelRef,\n      role: \"region\",\n      \"aria-label\": \"\\u8BED\\u97F3\\u8BC6\\u522B\\u9762\\u677F\",\n      style: {\n        left: panelPosition.left,\n        top: panelPosition.top,\n        width: panelPosition.width,\n        height: panelPosition.height\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        title: \"\\u62D6\\u52A8\\u6B64\\u533A\\u57DF\\u79FB\\u52A8\\u9762\\u677F\\uFF0C\\u53CC\\u51FB\\u9EA6\\u514B\\u98CE\\u6309\\u94AE\\u6298\\u53E0\\u9762\\u677F\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mic-button${isRecording ? ' recording' : ''}`,\n          onClick: handleMicClick,\n          onDoubleClick: e => {\n            e.preventDefault();\n            setExpanded(false);\n          },\n          \"aria-label\": isRecording ? '停止录音，双击折叠面板' : '开始录音，双击折叠面板',\n          title: isRecording ? '点击停止录音，双击折叠面板' : '点击开始录音，双击折叠面板',\n          type: \"button\",\n          disabled: isSpeakerRecording,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/core/client/ai-butler/image/mic-icon.png\",\n            alt: \"\\u9EA6\\u514B\\u98CE\",\n            draggable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 'bold',\n            fontSize: 16,\n            userSelect: 'none'\n          },\n          children: \"\\u8BED\\u97F3\\u8BC6\\u522B\\u9762\\u677F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            opacity: 0.7,\n            userSelect: 'none'\n          },\n          children: \"\\u53CC\\u51FB\\u9EA6\\u514B\\u98CE\\u6309\\u94AE\\u6298\\u53E0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: 12,\n          fontFamily: 'Arial, sans-serif',\n          fontSize: 14,\n          userSelect: 'text'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'rgba(255,255,255,0.05)',\n            borderRadius: 4,\n            minHeight: 120,\n            whiteSpace: 'pre-wrap',\n            padding: 8,\n            marginBottom: 12,\n            color: transcription ? 'white' : 'rgba(255,255,255,0.5)'\n          },\n          \"aria-live\": \"polite\",\n          \"aria-atomic\": \"true\",\n          role: \"region\",\n          tabIndex: 0,\n          children: transcription || '识别文字展示区...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: 6\n          },\n          children: [\"\\u8BED\\u8A00\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"langInput\",\n            type: \"text\",\n            value: lang,\n            onChange: e => setLang(e.target.value),\n            disabled: isRecording || isSpeakerRecording,\n            placeholder: \"auto\",\n            autoComplete: \"off\",\n            style: {\n              marginLeft: 8,\n              padding: 4,\n              borderRadius: 4,\n              border: '1px solid #555',\n              backgroundColor: 'rgba(0,0,0,0.3)',\n              color: 'white',\n              width: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 8,\n            marginBottom: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"speakerVerificationCheckbox\",\n            type: \"checkbox\",\n            checked: speakerVerification,\n            disabled: isRecording || isSpeakerRecording,\n            onChange: e => setSpeakerVerification(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 15\n          }, this), \"\\u58F0\\u7EB9\\u8BC6\\u522B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 8,\n            marginBottom: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wakeWordToggleCheckbox\",\n            type: \"checkbox\",\n            checked: wakeWordEnabled,\n            disabled: isRecording || isSpeakerRecording,\n            onChange: e => setWakeWordEnabled(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 15\n          }, this), \"\\u8BED\\u97F3\\u5524\\u9192\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: 6\n          },\n          children: [\"\\u5524\\u9192\\u8BCD\\uFF08\\u62FC\\u97F3\\uFF0C\\u591A\\u4E2A\\u7528\\u9017\\u53F7\\u5206\\u9694\\uFF09\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wakeWordsInput\",\n            type: \"text\",\n            value: wakeWords,\n            onChange: e => setWakeWords(e.target.value),\n            disabled: isRecording || isSpeakerRecording || !wakeWordEnabled,\n            placeholder: \"\\u5982\\uFF1Azhan qi lai, ni hao xiao qian\",\n            autoComplete: \"off\",\n            style: {\n              marginLeft: 8,\n              padding: 4,\n              borderRadius: 4,\n              border: '1px solid #555',\n              backgroundColor: 'rgba(0,0,0,0.3)',\n              color: 'white',\n              width: '100%',\n              boxSizing: 'border-box'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"speaker-record-button\",\n          ref: speakerButtonRef,\n          onClick: handleSpeakerRecordClick,\n          disabled: isRecording || isSpeakerRecording,\n          type: \"button\",\n          \"aria-live\": \"polite\",\n          \"aria-label\": \"\\u5F55\\u5236\\u58F0\\u7EB9\",\n          title: \"\\u5F55\\u5236\\u7EA62\\u79D2\\u58F0\\u97F3\\u7528\\u4E8E\\u58F0\\u7EB9\\u8BC6\\u522B\\uFF0C\\u5F55\\u5236\\u5B8C\\u6210\\u81EA\\u52A8\\u4E0A\\u4F20\",\n          style: {\n            position: 'relative',\n            overflow: 'hidden',\n            background: 'rgba(255, 255, 255, 0.1)',\n            borderRadius: 16,\n            border: '1px solid rgba(255, 255, 255, 0.3)',\n            color: 'white',\n            padding: '3px 10px',\n            fontSize: 13,\n            fontWeight: 600,\n            cursor: 'pointer',\n            userSelect: 'none',\n            boxShadow: '0 4px 30px rgba(0, 0, 0, 0.1)',\n            backdropFilter: 'blur(10px)',\n            WebkitBackdropFilter: 'blur(12px)',\n            transition: 'all 0.3s ease',\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            outline: 'none',\n            borderImage: 'none'\n          },\n          children: [\"\\u5F55\\u5236\\u58F0\\u7EB9 (2\\u79D2)\", ripples.map(({\n            key,\n            size,\n            x,\n            y\n          }) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ripple\",\n            style: {\n              width: size,\n              height: size,\n              top: y,\n              left: x\n            }\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 13\n        }, this), speakerUploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"speaker-record-status\",\n          role: \"alert\",\n          \"aria-live\": \"polite\",\n          \"aria-atomic\": \"true\",\n          style: {\n            marginTop: 8\n          },\n          children: speakerUploadStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioTranscriber, \"vUmQoQ8IUnUDBo0eKmGS7M/tTgo=\", false, function () {\n  return [useRecorderContext];\n});\n_c = AudioTranscriber;\nvar _c;\n$RefreshReg$(_c, \"AudioTranscriber\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useRecorderContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioTranscriber","_s","isRecording","transcription","lang","speakerVerification","wakeWordEnabled","wakeWords","setLang","setSpeakerVerification","setWakeWordEnabled","setWakeWords","startRecording","stopRecording","setTranscription","expanded","setExpanded","micButtonRef","wrapperRef","isDraggingRef","offsetXRef","offsetYRef","panelRef","panelDragState","isDragging","offsetX","offsetY","MIC_STORAGE_KEY","PANEL_STORAGE_KEY","isSpeakerRecording","setIsSpeakerRecording","speakerUploadStatus","setSpeakerUploadStatus","speakerRecorderRef","speakerAudioChunksRef","panelPosition","setPanelPosition","saved","localStorage","getItem","JSON","parse","left","top","width","height","micPosition","setMicPosition","sendTextMessage","text","trim","response","fetch","method","headers","body","stringify","ok","Error","status","data","json","console","log","error","stopSpeakerRecording","setItem","toString","startSpeakerRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","current","mediaRecorder","MediaRecorder","mimeType","e","ondataavailable","event","size","push","onstop","blob","Blob","type","formData","FormData","append","uploadUrl","res","result","err","message","getTracks","forEach","track","stop","setTimeout","start","state","catch","saveMicPosition","pos","savePanelPosition","button","wrapper","style","position","zIndex","cursor","onMouseDown","wrapperRect","getBoundingClientRect","clientX","offsetLeft","clientY","offsetTop","preventDefault","onMouseMove","newLeft","newTop","Math","min","max","clientWidth","offsetWidth","clientHeight","offsetHeight","onMouseUp","onTouchStart","touches","length","touch","onTouchMove","onTouchEnd","addEventListener","document","passive","removeEventListener","panel","target","closest","maxLeft","window","innerWidth","maxTop","innerHeight","lastClickTimeRef","DOUBLE_CLICK_DELAY","handleMicClick","now","Date","prev","ripples","setRipples","rippleCountRef","speakerButtonRef","handleSpeakerRecordClick","createRipple","rect","x","y","newRipple","key","oldRipples","filter","r","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","className","role","marginBottom","onClick","onDoubleClick","title","disabled","userSelect","background","border","padding","outline","display","alignItems","justifyContent","transition","src","alt","draggable","fontWeight","fontSize","opacity","flex","overflowY","fontFamily","backgroundColor","borderRadius","minHeight","whiteSpace","color","tabIndex","value","onChange","placeholder","autoComplete","marginLeft","gap","checked","boxSizing","overflow","boxShadow","backdropFilter","WebkitBackdropFilter","borderImage","map","marginTop","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\r\n\r\nexport default function AudioTranscriber() {\r\n  // 从全局录音上下文中取状态和操作\r\n  const {\r\n    isRecording,\r\n    transcription,\r\n    lang,\r\n    speakerVerification,\r\n    wakeWordEnabled,\r\n    wakeWords,\r\n    setLang,\r\n    setSpeakerVerification,\r\n    setWakeWordEnabled,\r\n    setWakeWords,\r\n    startRecording,\r\n    stopRecording,\r\n    setTranscription,\r\n  } = useRecorderContext();\r\n\r\n  // 控制面板展开/折叠状态，初始为折叠（只显示麦克风按钮）\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  // 拖拽相关引用，仅用于麦克风按钮（折叠态）\r\n  const micButtonRef = useRef(null);\r\n  const wrapperRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  // 面板拖拽相关引用（展开态）\r\n  const panelRef = useRef(null);\r\n  const panelDragState = useRef({\r\n    isDragging: false,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n  });\r\n\r\n  // localStorage 保存位置的 key\r\n  const MIC_STORAGE_KEY = 'audioTranscriberMicButtonPosition';\r\n  const PANEL_STORAGE_KEY = 'audioTranscriberPanelPosition';\r\n\r\n  // 新增声纹识别录音状态和上传状态（保持本组件私有状态）\r\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\r\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\r\n  const speakerRecorderRef = useRef(null);\r\n  const speakerAudioChunksRef = useRef([]);\r\n\r\n  // 面板位置和大小（展开时）\r\n  const [panelPosition, setPanelPosition] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem(PANEL_STORAGE_KEY);\r\n      if (saved) return JSON.parse(saved);\r\n    } catch {}\r\n    return { left: 100, top: 100, width: 360, height: 280 };\r\n  });\r\n\r\n  // 麦克风按钮位置（折叠时）\r\n  const [micPosition, setMicPosition] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem(MIC_STORAGE_KEY);\r\n      if (saved) return JSON.parse(saved);\r\n    } catch {}\r\n    return { left: 26, top: 26 };\r\n  });\r\n\r\n  // 发送文本消息到 LLM 服务（保持不变）\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n    try {\r\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 组件卸载清理\r\n  useEffect(() => {\r\n    return () => {\r\n      stopRecording();\r\n      stopSpeakerRecording();\r\n    };\r\n  }, []);\r\n\r\n  // 监听语言和声纹识别开关变化存localStorage（保持不变）\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberLang', lang);\r\n    } catch {}\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString());\r\n    } catch {}\r\n  }, [speakerVerification]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWordEnabled', wakeWordEnabled.toString());\r\n    } catch {}\r\n  }, [wakeWordEnabled]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWords', wakeWords);\r\n    } catch {}\r\n  }, [wakeWords]);\r\n\r\n  // 录制声纹相关函数保持不变\r\n  function startSpeakerRecording() {\r\n    if (isSpeakerRecording) return;\r\n    setSpeakerUploadStatus('请求麦克风权限...');\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then((stream) => {\r\n        setSpeakerUploadStatus('开始录音2秒...');\r\n        speakerAudioChunksRef.current = [];\r\n        let mediaRecorder;\r\n        try {\r\n          mediaRecorder = new MediaRecorder(stream, { mimeType: 'audio/wav' });\r\n        } catch (e) {\r\n          mediaRecorder = new MediaRecorder(stream);\r\n        }\r\n        speakerRecorderRef.current = mediaRecorder;\r\n        mediaRecorder.ondataavailable = (event) => {\r\n          if (event.data && event.data.size > 0) {\r\n            speakerAudioChunksRef.current.push(event.data);\r\n          }\r\n        };\r\n        mediaRecorder.onstop = async () => {\r\n          setSpeakerUploadStatus('录音结束，准备上传...');\r\n          const blob = new Blob(speakerAudioChunksRef.current, { type: 'audio/wav' });\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('file', blob, 'speaker.wav');\r\n            const uploadUrl = 'http://192.168.168.77:6007/api/uploadSpeaker';\r\n            const res = await fetch(uploadUrl, {\r\n              method: 'POST',\r\n              body: formData,\r\n            });\r\n            if (!res.ok) throw new Error(`上传失败，状态码: ${res.status}`);\r\n            const result = await res.json();\r\n            setSpeakerUploadStatus('上传成功');\r\n            console.log('上传成功，服务器返回：', result);\r\n          } catch (err) {\r\n            setSpeakerUploadStatus('上传失败: ' + err.message);\r\n            console.error('上传失败', err);\r\n          }\r\n          stream.getTracks().forEach(track => track.stop());\r\n          setTimeout(() => setSpeakerUploadStatus(''), 3000);\r\n          setIsSpeakerRecording(false);\r\n        };\r\n        mediaRecorder.start();\r\n        setIsSpeakerRecording(true);\r\n        setTimeout(() => {\r\n          if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\r\n            speakerRecorderRef.current.stop();\r\n          }\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        setSpeakerUploadStatus('获取麦克风权限失败: ' + err.message);\r\n        console.error('获取麦克风权限失败', err);\r\n      });\r\n  }\r\n  function stopSpeakerRecording() {\r\n    if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\r\n      speakerRecorderRef.current.stop();\r\n      setIsSpeakerRecording(false);\r\n    }\r\n  }\r\n\r\n  // 保存位置到 localStorage\r\n  const saveMicPosition = (pos) => {\r\n    setMicPosition(pos);\r\n    try {\r\n      localStorage.setItem(MIC_STORAGE_KEY, JSON.stringify(pos));\r\n    } catch {}\r\n  };\r\n  const savePanelPosition = (pos) => {\r\n    setPanelPosition(pos);\r\n    try {\r\n      localStorage.setItem(PANEL_STORAGE_KEY, JSON.stringify(pos));\r\n    } catch {}\r\n  };\r\n\r\n  // 拖拽逻辑 - 麦克风按钮（折叠态）\r\n  useEffect(() => {\r\n    if (!micButtonRef.current || !wrapperRef.current) return;\r\n    const button = micButtonRef.current;\r\n    const wrapper = wrapperRef.current;\r\n\r\n    // 初始化按钮位置\r\n    let left = micPosition.left;\r\n    let top = micPosition.top;\r\n\r\n    button.style.position = 'absolute';\r\n    button.style.left = `${left}px`;\r\n    button.style.top = `${top}px`;\r\n    button.style.zIndex = '10000';\r\n    button.style.cursor = 'grab';\r\n\r\n    isDraggingRef.current = false;\r\n    offsetXRef.current = 0;\r\n    offsetYRef.current = 0;\r\n\r\n    // 鼠标事件\r\n    const onMouseDown = (e) => {\r\n      if (e.button !== 0) return;\r\n      isDraggingRef.current = true;\r\n      const wrapperRect = wrapper.getBoundingClientRect();\r\n      offsetXRef.current = e.clientX - wrapperRect.left - button.offsetLeft;\r\n      offsetYRef.current = e.clientY - wrapperRect.top - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n      e.preventDefault();\r\n    };\r\n    const onMouseMove = (e) => {\r\n      if (!isDraggingRef.current) return;\r\n      const wrapperRect = wrapper.getBoundingClientRect();\r\n      let newLeft = e.clientX - wrapperRect.left - offsetXRef.current;\r\n      let newTop = e.clientY - wrapperRect.top - offsetYRef.current;\r\n\r\n      // 限制范围在面板内\r\n      newLeft = Math.min(Math.max(0, newLeft), wrapper.clientWidth - button.offsetWidth);\r\n      newTop = Math.min(Math.max(0, newTop), wrapper.clientHeight - button.offsetHeight);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n    };\r\n    const onMouseUp = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      localStorage.setItem(\r\n        MIC_STORAGE_KEY,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n      setMicPosition({ left: button.offsetLeft, top: button.offsetTop });\r\n    };\r\n\r\n    // 触摸事件\r\n    const onTouchStart = (e) => {\r\n      if (e.touches.length === 0) return;\r\n      isDraggingRef.current = true;\r\n      const wrapperRect = wrapper.getBoundingClientRect();\r\n      const touch = e.touches[0];\r\n      offsetXRef.current = touch.clientX - wrapperRect.left - button.offsetLeft;\r\n      offsetYRef.current = touch.clientY - wrapperRect.top - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n    };\r\n    const onTouchMove = (e) => {\r\n      if (!isDraggingRef.current || e.touches.length === 0) return;\r\n      const wrapperRect = wrapper.getBoundingClientRect();\r\n      const touch = e.touches[0];\r\n      let newLeft = touch.clientX - wrapperRect.left - offsetXRef.current;\r\n      let newTop = touch.clientY - wrapperRect.top - offsetYRef.current;\r\n\r\n      newLeft = Math.min(Math.max(0, newLeft), wrapper.clientWidth - button.offsetWidth);\r\n      newTop = Math.min(Math.max(0, newTop), wrapper.clientHeight - button.offsetHeight);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n\r\n      e.preventDefault();\r\n    };\r\n    const onTouchEnd = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      localStorage.setItem(\r\n        MIC_STORAGE_KEY,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n      setMicPosition({ left: button.offsetLeft, top: button.offsetTop });\r\n    };\r\n\r\n    button.addEventListener('mousedown', onMouseDown);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    button.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    // 清理事件监听\r\n    return () => {\r\n      button.removeEventListener('mousedown', onMouseDown);\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      button.removeEventListener('touchstart', onTouchStart);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, [micPosition]);\r\n\r\n  // 拖拽逻辑 - 面板（展开态）\r\n  useEffect(() => {\r\n    if (!expanded || !panelRef.current) return;\r\n    const panel = panelRef.current;\r\n\r\n    panel.style.position = 'fixed';\r\n    panel.style.left = `${panelPosition.left}px`;\r\n    panel.style.top = `${panelPosition.top}px`;\r\n    panel.style.width = `${panelPosition.width}px`;\r\n    panel.style.height = `${panelPosition.height}px`;\r\n    panel.style.zIndex = 9999;\r\n    panel.style.cursor = 'grab';\r\n\r\n    const onMouseDown = (e) => {\r\n      if (e.button !== 0) return;\r\n      if (!e.target.closest('.panel-header')) return;\r\n\r\n      panelDragState.current.isDragging = true;\r\n      panelDragState.current.offsetX = e.clientX - panel.offsetLeft;\r\n      panelDragState.current.offsetY = e.clientY - panel.offsetTop;\r\n      panel.style.cursor = 'grabbing';\r\n      e.preventDefault();\r\n    };\r\n    const onMouseMove = (e) => {\r\n      if (!panelDragState.current.isDragging) return;\r\n      e.preventDefault();\r\n      let newLeft = e.clientX - panelDragState.current.offsetX;\r\n      let newTop = e.clientY - panelDragState.current.offsetY;\r\n\r\n      const maxLeft = window.innerWidth - panel.offsetWidth;\r\n      const maxTop = window.innerHeight - panel.offsetHeight;\r\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n      newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n      panel.style.left = `${newLeft}px`;\r\n      panel.style.top = `${newTop}px`;\r\n    };\r\n    const onMouseUp = () => {\r\n      if (!panelDragState.current.isDragging) return;\r\n      panelDragState.current.isDragging = false;\r\n      panel.style.cursor = 'grab';\r\n\r\n      savePanelPosition({\r\n        left: panel.offsetLeft,\r\n        top: panel.offsetTop,\r\n        width: panel.offsetWidth,\r\n        height: panel.offsetHeight,\r\n      });\r\n    };\r\n\r\n    // 触摸事件\r\n    const onTouchStart = (e) => {\r\n      if (e.touches.length === 0) return;\r\n      if (!e.target.closest('.panel-header')) return;\r\n      panelDragState.current.isDragging = true;\r\n      const touch = e.touches[0];\r\n      panelDragState.current.offsetX = touch.clientX - panel.offsetLeft;\r\n      panelDragState.current.offsetY = touch.clientY - panel.offsetTop;\r\n      panel.style.cursor = 'grabbing';\r\n      e.preventDefault();\r\n    };\r\n    const onTouchMove = (e) => {\r\n      if (!panelDragState.current.isDragging) return;\r\n      const touch = e.touches[0];\r\n      let newLeft = touch.clientX - panelDragState.current.offsetX;\r\n      let newTop = touch.clientY - panelDragState.current.offsetY;\r\n\r\n      const maxLeft = window.innerWidth - panel.offsetWidth;\r\n      const maxTop = window.innerHeight - panel.offsetHeight;\r\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n      newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n      panel.style.left = `${newLeft}px`;\r\n      panel.style.top = `${newTop}px`;\r\n      e.preventDefault();\r\n    };\r\n    const onTouchEnd = () => {\r\n      if (!panelDragState.current.isDragging) return;\r\n      panelDragState.current.isDragging = false;\r\n      panel.style.cursor = 'grab';\r\n\r\n      savePanelPosition({\r\n        left: panel.offsetLeft,\r\n        top: panel.offsetTop,\r\n        width: panel.offsetWidth,\r\n        height: panel.offsetHeight,\r\n      });\r\n    };\r\n\r\n    panel.addEventListener('mousedown', onMouseDown);\r\n    window.addEventListener('mousemove', onMouseMove);\r\n    window.addEventListener('mouseup', onMouseUp);\r\n\r\n    panel.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    window.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    window.addEventListener('touchend', onTouchEnd);\r\n\r\n    return () => {\r\n      panel.removeEventListener('mousedown', onMouseDown);\r\n      window.removeEventListener('mousemove', onMouseMove);\r\n      window.removeEventListener('mouseup', onMouseUp);\r\n\r\n      panel.removeEventListener('touchstart', onTouchStart);\r\n      window.removeEventListener('touchmove', onTouchMove);\r\n      window.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, [expanded, panelPosition]);\r\n\r\n  // 双击节流，单击/双击事件合并处理\r\n  const lastClickTimeRef = useRef(0);\r\n  const DOUBLE_CLICK_DELAY = 400;\r\n\r\n  const handleMicClick = () => {\r\n    const now = Date.now();\r\n    if (now - lastClickTimeRef.current < DOUBLE_CLICK_DELAY) {\r\n      // 双击切换展开/折叠\r\n      setExpanded((prev) => !prev);\r\n    } else {\r\n      // 单击控制录音开关\r\n      if (isRecording) stopRecording();\r\n      else startRecording();\r\n    }\r\n    lastClickTimeRef.current = now;\r\n  };\r\n\r\n  // 省略声纹录制波纹效果部分，保持不变即可...\r\n  const [ripples, setRipples] = useState([]);\r\n  const rippleCountRef = useRef(0);\r\n  const speakerButtonRef = useRef(null);\r\n\r\n  const handleSpeakerRecordClick = (event) => {\r\n    if (isRecording || isSpeakerRecording) return;\r\n    createRipple(event);\r\n    startSpeakerRecording();\r\n  };\r\n\r\n  const createRipple = (event) => {\r\n    if (!speakerButtonRef.current) return;\r\n    const rect = speakerButtonRef.current.getBoundingClientRect();\r\n    const size = Math.max(rect.width, rect.height);\r\n    const x = event.clientX - rect.left - size / 2;\r\n    const y = event.clientY - rect.top - size / 2;\r\n\r\n    const newRipple = {\r\n      key: rippleCountRef.current,\r\n      size,\r\n      x,\r\n      y,\r\n    };\r\n    rippleCountRef.current += 1;\r\n\r\n    setRipples((oldRipples) => [...oldRipples, newRipple]);\r\n\r\n    setTimeout(() => {\r\n      setRipples((oldRipples) => oldRipples.filter(r => r.key !== newRipple.key));\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        /* 麦克风按钮及容器样式 */\r\n        #mic-button-wrapper {\r\n          position: relative;\r\n          width: 100%;\r\n          height: 100%;\r\n          z-index: 10000;\r\n          user-select: none;\r\n          pointer-events: auto;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: flex-start;\r\n          gap: 4px;\r\n          overflow: visible;\r\n        }\r\n\r\n        #listening-text {\r\n          font-size: 12px;\r\n          color: rgba(128, 128, 128, 0.7);\r\n          user-select: none;\r\n          pointer-events: none;\r\n          font-weight: 500;\r\n          opacity: 0;\r\n          transition: opacity 0.3s ease;\r\n          height: 16px;\r\n          line-height: 16px;\r\n        }\r\n        #listening-text.visible {\r\n          opacity: 1;\r\n        }\r\n\r\n        #mic-button {\r\n          background: none;\r\n          border: none;\r\n          padding: 0;\r\n          outline: none;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          filter: none;\r\n          transition: filter 0.3s ease;\r\n\r\n          width: 68px;\r\n          height: 68px;\r\n          cursor: grab;\r\n          position: absolute; /* 绝对定位 */\r\n        }\r\n        #mic-button.recording {\r\n          filter: drop-shadow(0 0 5px red);\r\n        }\r\n        #mic-button img {\r\n          width: 48px;\r\n          height: 48px;\r\n          user-select: none;\r\n          pointer-events: none;\r\n          -webkit-user-drag: none;\r\n        }\r\n\r\n        /* 语言和声纹识别区域样式 */\r\n        #controls-container {\r\n          max-width: 700px;\r\n          margin: 20px auto 12px auto;\r\n          font-family: Arial, sans-serif;\r\n          color: white;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 20px;\r\n          user-select: none;\r\n          flex-wrap: wrap;\r\n        }\r\n        #controls-container label {\r\n          font-size: 14px;\r\n          user-select: none;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n        #langInput, #wakeWordsInput {\r\n          padding: 6px;\r\n          font-size: 12px;\r\n          width: 140px;\r\n          background-color: #333;\r\n          border: 1px solid #666;\r\n          border-radius: 3px;\r\n          color: white;\r\n          user-select: text;\r\n        }\r\n        #speakerVerificationLabel {\r\n          font-size: 14px;\r\n        }\r\n        #wakeWordToggleLabel {\r\n          font-size: 14px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n\r\n        /* 纯 CSS 玻璃态录制声纹按钮 */\r\n        #speaker-record-button {\r\n          position: relative;\r\n          overflow: hidden;\r\n          background: rgba(255, 255, 255, 0.1);\r\n          border-radius: 16px;\r\n          border: 1px solid rgba(255, 255, 255, 0.3);\r\n          color: white;\r\n          padding: 3px 10px;\r\n          font-size: 13px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          user-select: none;\r\n          box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\r\n          backdrop-filter: blur(10px);\r\n          -webkit-backdrop-filter: blur(12px);\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n          transition: all 0.3s ease;\r\n          display: inline-flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          outline: none;\r\n          border-image: none;\r\n        }\r\n        #speaker-record-button:hover:not(:disabled) {\r\n          background: rgba(255, 255, 255, 0.2);\r\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\r\n          transform: scale(1.05);\r\n          filter: brightness(1.1);\r\n        }\r\n        #speaker-record-button:disabled {\r\n          opacity: 0.4;\r\n          cursor: not-allowed;\r\n          box-shadow: none;\r\n          background: rgba(255, 255, 255, 0.05);\r\n          filter: none;\r\n          transform: none;\r\n        }\r\n\r\n        /* 额外光泽层 */\r\n        #speaker-record-button::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: -100%;\r\n          left: -100%;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\r\n          pointer-events: none;\r\n          filter: blur(10px);\r\n          opacity: 0.6;\r\n          transition: opacity 0.3s ease;\r\n          border-radius: inherit;\r\n          z-index: 0;\r\n        }\r\n\r\n        /* 保留波纹效果的样式 */\r\n        .ripple {\r\n          position: absolute;\r\n          border-radius: 150%;\r\n          background: rgba(91, 155, 255, 0.7);\r\n          animation: rippleEffect 1s ease-out;\r\n          pointer-events: none;\r\n          transform: scale(0);\r\n          opacity: 0.75;\r\n          z-index: 1;\r\n        }\r\n\r\n        @keyframes rippleEffect {\r\n          to {\r\n            transform: scale(4);\r\n            opacity: 0;\r\n          }\r\n        }\r\n\r\n        /* 面板展开状态样式 */\r\n        #audio-transcriber-panel {\r\n          position: fixed;\r\n          z-index: 10000;\r\n          background-color: rgba(0, 0, 0, 0.85);\r\n          border-radius: 8px;\r\n          box-shadow: 0 0 12px rgba(0, 229, 255, 0.8);\r\n          color: white;\r\n          display: flex;\r\n          flex-direction: column;\r\n          overflow: hidden;\r\n          user-select: none;\r\n        }\r\n\r\n        #audio-transcriber-panel .panel-header {\r\n          height: 40px;\r\n          background-color: rgba(0, 229, 255, 0.2);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n          padding: 0 12px;\r\n          cursor: grab;\r\n          user-select: none;\r\n        }\r\n\r\n        #audio-transcriber-panel .panel-header .mic-button {\r\n          width: 36px;\r\n          height: 36px;\r\n          border-radius: 50%;\r\n          background-color: rgba(0,229,255,0.8);\r\n          border: none;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          outline: none;\r\n          box-shadow: 0 0 10px rgba(0,229,255,0.7);\r\n          cursor: pointer;\r\n          user-select: none;\r\n        }\r\n\r\n        #audio-transcriber-panel .panel-header .mic-button.recording {\r\n          background-color: #ff4d4d;\r\n          box-shadow: 0 0 10px red;\r\n        }\r\n\r\n        #audio-transcriber-panel .panel-header .mic-button img {\r\n          width: 20px;\r\n          height: 20px;\r\n          user-select: none;\r\n          pointer-events: none;\r\n          -webkit-user-drag: none;\r\n        }\r\n      `}</style>\r\n\r\n      {/* 折叠态显示单独麦克风按钮 */}\r\n      {!expanded && (\r\n        <div id=\"mic-button-wrapper\" ref={wrapperRef} style={{ position: 'fixed', left: micPosition.left, top: micPosition.top, zIndex: 10000 }}>\r\n          <div\r\n            id=\"listening-text\"\r\n            className={isRecording ? 'visible' : ''}\r\n            aria-live=\"polite\"\r\n            role=\"status\"\r\n            style={{ marginBottom: 4 }}\r\n          >\r\n            聆听中...\r\n          </div>\r\n\r\n          <button\r\n            id=\"mic-button\"\r\n            ref={micButtonRef}\r\n            className={isRecording ? 'recording' : ''}\r\n            onClick={handleMicClick}\r\n            onDoubleClick={(e) => { e.preventDefault(); setExpanded(true); }}\r\n            aria-label={isRecording ? '停止录音，双击展开面板' : '开始录音，双击展开面板'}\r\n            title={isRecording ? '点击停止录音，双击展开面板' : '点击开始录音，双击展开面板'}\r\n            type=\"button\"\r\n            disabled={isSpeakerRecording}\r\n            style={{\r\n              width: 68,\r\n              height: 68,\r\n              cursor: 'grab',\r\n              userSelect: 'none',\r\n              position: 'absolute',\r\n              left: 0,\r\n              top: 0,\r\n              background: 'none',\r\n              border: 'none',\r\n              padding: 0,\r\n              outline: 'none',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              filter: isRecording ? 'drop-shadow(0 0 5px red)' : 'none',\r\n              transition: 'filter 0.3s ease',\r\n            }}\r\n          >\r\n            <img\r\n              src=\"/core/client/ai-butler/image/mic-icon.png\"\r\n              alt=\"麦克风\"\r\n              draggable={false}\r\n              style={{ width: 48, height: 48 }}\r\n            />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 展开态显示完整面板 */}\r\n      {expanded && (\r\n        <div\r\n          id=\"audio-transcriber-panel\"\r\n          ref={panelRef}\r\n          role=\"region\"\r\n          aria-label=\"语音识别面板\"\r\n          style={{\r\n            left: panelPosition.left,\r\n            top: panelPosition.top,\r\n            width: panelPosition.width,\r\n            height: panelPosition.height,\r\n          }}\r\n        >\r\n          <div className=\"panel-header\" title=\"拖动此区域移动面板，双击麦克风按钮折叠面板\">\r\n            <button\r\n              className={`mic-button${isRecording ? ' recording' : ''}`}\r\n              onClick={handleMicClick}\r\n              onDoubleClick={(e) => { e.preventDefault(); setExpanded(false); }}\r\n              aria-label={isRecording ? '停止录音，双击折叠面板' : '开始录音，双击折叠面板'}\r\n              title={isRecording ? '点击停止录音，双击折叠面板' : '点击开始录音，双击折叠面板'}\r\n              type=\"button\"\r\n              disabled={isSpeakerRecording}\r\n            >\r\n              <img\r\n                src=\"/core/client/ai-butler/image/mic-icon.png\"\r\n                alt=\"麦克风\"\r\n                draggable={false}\r\n              />\r\n            </button>\r\n            <div style={{ fontWeight: 'bold', fontSize: 16, userSelect: 'none' }}>\r\n              语音识别面板\r\n            </div>\r\n            <div style={{ fontSize: 12, opacity: 0.7, userSelect: 'none' }}>\r\n              双击麦克风按钮折叠\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              overflowY: 'auto',\r\n              padding: 12,\r\n              fontFamily: 'Arial, sans-serif',\r\n              fontSize: 14,\r\n              userSelect: 'text',\r\n            }}\r\n          >\r\n            {/* 识别结果展示 */}\r\n            <div\r\n              style={{\r\n                backgroundColor: 'rgba(255,255,255,0.05)',\r\n                borderRadius: 4,\r\n                minHeight: 120,\r\n                whiteSpace: 'pre-wrap',\r\n                padding: 8,\r\n                marginBottom: 12,\r\n                color: transcription ? 'white' : 'rgba(255,255,255,0.5)',\r\n              }}\r\n              aria-live=\"polite\"\r\n              aria-atomic=\"true\"\r\n              role=\"region\"\r\n              tabIndex={0}\r\n            >\r\n              {transcription || '识别文字展示区...'}\r\n            </div>\r\n\r\n            {/* 语言选择 */}\r\n            <label style={{ display: 'block', marginBottom: 6 }}>\r\n              语言：\r\n              <input\r\n                id=\"langInput\"\r\n                type=\"text\"\r\n                value={lang}\r\n                onChange={(e) => setLang(e.target.value)}\r\n                disabled={isRecording || isSpeakerRecording}\r\n                placeholder=\"auto\"\r\n                autoComplete=\"off\"\r\n                style={{\r\n                  marginLeft: 8,\r\n                  padding: 4,\r\n                  borderRadius: 4,\r\n                  border: '1px solid #555',\r\n                  backgroundColor: 'rgba(0,0,0,0.3)',\r\n                  color: 'white',\r\n                  width: 100,\r\n                }}\r\n              />\r\n            </label>\r\n\r\n            {/* 声纹识别 */}\r\n            <label style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 6 }}>\r\n              <input\r\n                id=\"speakerVerificationCheckbox\"\r\n                type=\"checkbox\"\r\n                checked={speakerVerification}\r\n                disabled={isRecording || isSpeakerRecording}\r\n                onChange={(e) => setSpeakerVerification(e.target.checked)}\r\n              />\r\n              声纹识别\r\n            </label>\r\n\r\n            {/* 语音唤醒 */}\r\n            <label style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 6 }}>\r\n              <input\r\n                id=\"wakeWordToggleCheckbox\"\r\n                type=\"checkbox\"\r\n                checked={wakeWordEnabled}\r\n                disabled={isRecording || isSpeakerRecording}\r\n                onChange={(e) => setWakeWordEnabled(e.target.checked)}\r\n              />\r\n              语音唤醒\r\n            </label>\r\n\r\n            {/* 唤醒词输入 */}\r\n            <label style={{ display: 'block', marginBottom: 6 }}>\r\n              唤醒词（拼音，多个用逗号分隔）：\r\n              <input\r\n                id=\"wakeWordsInput\"\r\n                type=\"text\"\r\n                value={wakeWords}\r\n                onChange={(e) => setWakeWords(e.target.value)}\r\n                disabled={isRecording || isSpeakerRecording || !wakeWordEnabled}\r\n                placeholder=\"如：zhan qi lai, ni hao xiao qian\"\r\n                autoComplete=\"off\"\r\n                style={{\r\n                  marginLeft: 8,\r\n                  padding: 4,\r\n                  borderRadius: 4,\r\n                  border: '1px solid #555',\r\n                  backgroundColor: 'rgba(0,0,0,0.3)',\r\n                  color: 'white',\r\n                  width: '100%',\r\n                  boxSizing: 'border-box',\r\n                }}\r\n              />\r\n            </label>\r\n\r\n            <button\r\n              id=\"speaker-record-button\"\r\n              ref={speakerButtonRef}\r\n              onClick={handleSpeakerRecordClick}\r\n              disabled={isRecording || isSpeakerRecording}\r\n              type=\"button\"\r\n              aria-live=\"polite\"\r\n              aria-label=\"录制声纹\"\r\n              title=\"录制约2秒声音用于声纹识别，录制完成自动上传\"\r\n              style={{\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n                background: 'rgba(255, 255, 255, 0.1)',\r\n                borderRadius: 16,\r\n                border: '1px solid rgba(255, 255, 255, 0.3)',\r\n                color: 'white',\r\n                padding: '3px 10px',\r\n                fontSize: 13,\r\n                fontWeight: 600,\r\n                cursor: 'pointer',\r\n                userSelect: 'none',\r\n                boxShadow: '0 4px 30px rgba(0, 0, 0, 0.1)',\r\n                backdropFilter: 'blur(10px)',\r\n                WebkitBackdropFilter: 'blur(12px)',\r\n                transition: 'all 0.3s ease',\r\n                display: 'inline-flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                outline: 'none',\r\n                borderImage: 'none',\r\n              }}\r\n            >\r\n              录制声纹 (2秒)\r\n              {ripples.map(({ key, size, x, y }) => (\r\n                <span\r\n                  key={key}\r\n                  className=\"ripple\"\r\n                  style={{\r\n                    width: size,\r\n                    height: size,\r\n                    top: y,\r\n                    left: x,\r\n                  }}\r\n                />\r\n              ))}\r\n            </button>\r\n\r\n            {speakerUploadStatus && (\r\n              <div\r\n                id=\"speaker-record-status\"\r\n                role=\"alert\"\r\n                aria-live=\"polite\"\r\n                aria-atomic=\"true\"\r\n                style={{ marginTop: 8 }}\r\n              >\r\n                {speakerUploadStatus}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}