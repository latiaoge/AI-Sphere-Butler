{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\AudioTranscriber.jsx\",\n  _s = $RefreshSig$();\n// src/components/AudioTranscriber.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport micIcon from '../assets/icons/mic-icon.png';\nimport styles from './AudioTranscriber.module.css';\nimport { useRecorder } from '../hooks/useRecorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AudioTranscriber() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [lang, setLang] = useState('auto');\n  const [speakerVerification, setSpeakerVerification] = useState(false);\n  const recorder = useRecorder();\n  const wsRef = useRef(null);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      // 组件卸载时清理\n      stopRecording();\n    };\n  }, []);\n  function startRecording() {\n    if (isRecording) return;\n\n    // 构造WebSocket地址，注意根据实际地址修改\n    let params = [];\n    if (lang) params.push(`lang=${encodeURIComponent(lang)}`);\n    if (speakerVerification) params.push('sv=1');\n    const queryStr = params.length > 0 ? `?${params.join('&')}` : '';\n    const wsUrl = `ws://192.168.168.77:6007/ws/transcribe${queryStr}`;\n    const ws = new WebSocket(wsUrl);\n    ws.binaryType = 'arraybuffer';\n    ws.onopen = () => {\n      console.log('WebSocket 已连接');\n      recorder.start().catch(e => {\n        alert('启动录音失败: ' + e.message);\n        ws.close();\n      });\n      intervalRef.current = setInterval(() => {\n        if (ws.readyState === 1) {\n          const audioBlob = recorder.getAudioBlob();\n          if (audioBlob.size > 0) {\n            console.log('发送音频数据，大小：', audioBlob.size);\n            ws.send(audioBlob);\n            recorder.clearBuffer();\n          }\n        }\n      }, 500);\n    };\n    ws.onmessage = evt => {\n      try {\n        const resJson = JSON.parse(evt.data);\n        if (resJson.code === 0) {\n          setTranscription(prev => prev + '\\n' + (resJson.data || '无识别结果'));\n        } else {\n          // 其他情况也追加显示\n          setTranscription(prev => prev + '\\n' + evt.data);\n        }\n      } catch (e) {\n        console.error('解析转写消息失败', e);\n        setTranscription(prev => prev + '\\n' + evt.data);\n      }\n    };\n    ws.onclose = () => {\n      console.log('WebSocket 已关闭');\n      stopRecording();\n    };\n    ws.onerror = e => {\n      console.error('WebSocket 错误', e);\n    };\n    wsRef.current = ws;\n    setIsRecording(true);\n  }\n  function stopRecording() {\n    if (!isRecording) return;\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n    recorder.stop();\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    setIsRecording(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: '20px auto',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => isRecording ? stopRecording() : startRecording(),\n      style: {\n        padding: '8px 16px',\n        fontSize: 16,\n        backgroundColor: isRecording ? 'red' : '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: 4,\n        cursor: 'pointer',\n        marginBottom: 12\n      },\n      children: isRecording ? 'Stop Recording' : 'Start Recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"langInput\",\n        style: {\n          marginRight: 8\n        },\n        children: \"Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"langInput\",\n        type: \"text\",\n        value: lang,\n        onChange: e => setLang(e.target.value),\n        disabled: isRecording,\n        style: {\n          padding: 4,\n          fontSize: 14,\n          width: 120\n        },\n        placeholder: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: speakerVerification,\n          disabled: isRecording,\n          onChange: e => setSpeakerVerification(e.target.checked),\n          style: {\n            marginRight: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), \"Speaker Verification\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"transcriptionResult\",\n      style: {\n        whiteSpace: 'pre-wrap',\n        backgroundColor: '#f5f5f5',\n        padding: 10,\n        border: '1px solid #ddd',\n        borderRadius: 5,\n        minHeight: 150,\n        fontFamily: 'monospace',\n        fontSize: 14,\n        overflowY: 'auto',\n        maxHeight: 300\n      },\n      children: transcription || 'Transcription result will be displayed here...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioTranscriber, \"VwFjtSr5yTsZykcmQS99JeodP8A=\", false, function () {\n  return [useRecorder];\n});\n_c = AudioTranscriber;\nvar _c;\n$RefreshReg$(_c, \"AudioTranscriber\");","map":{"version":3,"names":["React","useState","useRef","useEffect","micIcon","styles","useRecorder","jsxDEV","_jsxDEV","AudioTranscriber","_s","isRecording","setIsRecording","transcription","setTranscription","lang","setLang","speakerVerification","setSpeakerVerification","recorder","wsRef","intervalRef","stopRecording","startRecording","params","push","encodeURIComponent","queryStr","length","join","wsUrl","ws","WebSocket","binaryType","onopen","console","log","start","catch","e","alert","message","close","current","setInterval","readyState","audioBlob","getAudioBlob","size","send","clearBuffer","onmessage","evt","resJson","JSON","parse","data","code","prev","error","onclose","onerror","stop","clearInterval","style","maxWidth","margin","fontFamily","children","onClick","padding","fontSize","backgroundColor","color","border","borderRadius","cursor","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","marginRight","id","type","value","onChange","target","disabled","width","placeholder","checked","whiteSpace","minHeight","overflowY","maxHeight","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["// src/components/AudioTranscriber.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport micIcon from '../assets/icons/mic-icon.png';\r\nimport styles from './AudioTranscriber.module.css';\r\nimport { useRecorder } from '../hooks/useRecorder';\r\n\r\nexport default function AudioTranscriber() {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcription, setTranscription] = useState('');\r\n\r\n  const [lang, setLang] = useState('auto');\r\n  const [speakerVerification, setSpeakerVerification] = useState(false);\r\n\r\n  const recorder = useRecorder();\r\n  const wsRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // 组件卸载时清理\r\n      stopRecording();\r\n    };\r\n  }, []);\r\n\r\n  function startRecording() {\r\n    if (isRecording) return;\r\n\r\n    // 构造WebSocket地址，注意根据实际地址修改\r\n    let params = [];\r\n    if (lang) params.push(`lang=${encodeURIComponent(lang)}`);\r\n    if (speakerVerification) params.push('sv=1');\r\n    const queryStr = params.length > 0 ? `?${params.join('&')}` : '';\r\n    const wsUrl = `ws://192.168.168.77:6007/ws/transcribe${queryStr}`;\r\n\r\n    const ws = new WebSocket(wsUrl);\r\n    ws.binaryType = 'arraybuffer';\r\n\r\n    ws.onopen = () => {\r\n      console.log('WebSocket 已连接');\r\n      recorder.start().catch((e) => {\r\n        alert('启动录音失败: ' + e.message);\r\n        ws.close();\r\n      });\r\n\r\n      intervalRef.current = setInterval(() => {\r\n        if (ws.readyState === 1) {\r\n          const audioBlob = recorder.getAudioBlob();\r\n          if (audioBlob.size > 0) {\r\n            console.log('发送音频数据，大小：', audioBlob.size);\r\n            ws.send(audioBlob);\r\n            recorder.clearBuffer();\r\n          }\r\n        }\r\n      }, 500);\r\n    };\r\n\r\n    ws.onmessage = (evt) => {\r\n      try {\r\n        const resJson = JSON.parse(evt.data);\r\n        if (resJson.code === 0) {\r\n          setTranscription((prev) => prev + '\\n' + (resJson.data || '无识别结果'));\r\n        } else {\r\n          // 其他情况也追加显示\r\n          setTranscription((prev) => prev + '\\n' + evt.data);\r\n        }\r\n      } catch (e) {\r\n        console.error('解析转写消息失败', e);\r\n        setTranscription((prev) => prev + '\\n' + evt.data);\r\n      }\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket 已关闭');\r\n      stopRecording();\r\n    };\r\n\r\n    ws.onerror = (e) => {\r\n      console.error('WebSocket 错误', e);\r\n    };\r\n\r\n    wsRef.current = ws;\r\n    setIsRecording(true);\r\n  }\r\n\r\n  function stopRecording() {\r\n    if (!isRecording) return;\r\n\r\n    if (wsRef.current) {\r\n      wsRef.current.close();\r\n      wsRef.current = null;\r\n    }\r\n    recorder.stop();\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n    setIsRecording(false);\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: 700, margin: '20px auto', fontFamily: 'Arial, sans-serif' }}>\r\n      <button\r\n        onClick={() => (isRecording ? stopRecording() : startRecording())}\r\n        style={{\r\n          padding: '8px 16px',\r\n          fontSize: 16,\r\n          backgroundColor: isRecording ? 'red' : '#4CAF50',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: 4,\r\n          cursor: 'pointer',\r\n          marginBottom: 12,\r\n        }}\r\n      >\r\n        {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n      </button>\r\n\r\n      <div style={{ marginBottom: 12 }}>\r\n        <label htmlFor=\"langInput\" style={{ marginRight: 8 }}>\r\n          Language:\r\n        </label>\r\n        <input\r\n          id=\"langInput\"\r\n          type=\"text\"\r\n          value={lang}\r\n          onChange={(e) => setLang(e.target.value)}\r\n          disabled={isRecording}\r\n          style={{ padding: 4, fontSize: 14, width: 120 }}\r\n          placeholder=\"auto\"\r\n        />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 20 }}>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={speakerVerification}\r\n            disabled={isRecording}\r\n            onChange={(e) => setSpeakerVerification(e.target.checked)}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          Speaker Verification\r\n        </label>\r\n      </div>\r\n\r\n      <div\r\n        id=\"transcriptionResult\"\r\n        style={{\r\n          whiteSpace: 'pre-wrap',\r\n          backgroundColor: '#f5f5f5',\r\n          padding: 10,\r\n          border: '1px solid #ddd',\r\n          borderRadius: 5,\r\n          minHeight: 150,\r\n          fontFamily: 'monospace',\r\n          fontSize: 14,\r\n          overflowY: 'auto',\r\n          maxHeight: 300,\r\n        }}\r\n      >\r\n        {transcription || 'Transcription result will be displayed here...'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}