{"ast":null,"code":"import _objectSpread from\"D:/XM/AI-Sphere-Butler/core/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/components/OldWebRTC.jsx\nimport React,{useEffect,useRef,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function OldWebRTC(_ref){let{renderVideo=true,keepConnection=false}=_ref;const videoRef=useRef(null);const audioRef=useRef(null);const pcRef=useRef(null);const textareaRef=useRef(null);const canvasRef=useRef(null);const ctxRef=useRef(null);const animationFrameIdRef=useRef(null);const reconnectTimerRef=useRef(null);const containerRef=useRef(null);const[useStun,setUseStun]=useState(false);const[started,setStarted]=useState(false);const[zoomWidth,setZoomWidth]=useState(600);const[videoReady,setVideoReady]=useState(false);const[alphaReady,setAlphaReady]=useState(false);const[processingMode,setProcessingMode]=useState('rgba');const[errorMessage,setErrorMessage]=useState('');const[debugInfo,setDebugInfo]=useState('');const[resourceCheckCount,setResourceCheckCount]=useState(0);const[maxResourceCheckCount]=useState(30);const[connectionAttempts,setConnectionAttempts]=useState(0);const[maxConnectionAttempts]=useState(5);// 检测浏览器是否支持WebCodecs\nconst[supportsWebCodecs,setSupportsWebCodecs]=useState(typeof window.VideoDecoder!=='undefined'&&typeof window.MediaStreamTrackProcessor!=='undefined');// 检测浏览器是否支持OffscreenCanvas\nconst[supportsOffscreenCanvas,setSupportsOffscreenCanvas]=useState(typeof window.OffscreenCanvas!=='undefined');// 立即更新的标志\nconst isStartedRef=useRef(false);const isVideoReadyRef=useRef(false);const videoTracksRef=useRef([]);const lastFrameTimeRef=useRef(0);const frameCountRef=useRef(0);const isProcessingRef=useRef(false);const initialWidth=600;const initialHeight=450;const SIGNALING_URL='/offer';const zoomStep=50;const[chatPos,setChatPos]=useState(()=>{try{const saved=localStorage.getItem('chatbox-position');if(saved){const pos=JSON.parse(saved);if(typeof pos.left==='number'&&typeof pos.top==='number'){return pos;}}}catch(_unused){}return{left:20,top:20};});const draggingRef=useRef(false);const dragOffsetRef=useRef({x:0,y:0});function onDragStart(e){var _e$touches;if(e.target.tagName.toLowerCase()==='textarea'){draggingRef.current=false;return;}draggingRef.current=true;const targetRect=e.currentTarget.getBoundingClientRect();if(e.type==='touchstart'&&(_e$touches=e.touches)!==null&&_e$touches!==void 0&&_e$touches[0]){dragOffsetRef.current={x:e.touches[0].clientX-targetRect.left,y:e.touches[0].clientY-targetRect.top};}else{dragOffsetRef.current={x:e.clientX-targetRect.left,y:e.clientY-targetRect.top};}e.preventDefault();e.stopPropagation();}function onDragMove(e){var _e$touches2;if(!draggingRef.current)return;let clientX,clientY;if(e.type==='touchmove'&&(_e$touches2=e.touches)!==null&&_e$touches2!==void 0&&_e$touches2[0]){clientX=e.touches[0].clientX;clientY=e.touches[0].clientY;}else if(e.type==='mousemove'){clientX=e.clientX;clientY=e.clientY;}else{return;}if(!containerRef.current||!e.currentTarget)return;const containerRect=containerRef.current.getBoundingClientRect();const chatRect=e.currentTarget.getBoundingClientRect();const chatWidth=chatRect.width;const chatHeight=chatRect.height;let newLeft=clientX-containerRect.left-dragOffsetRef.current.x;let newTop=clientY-containerRect.top-dragOffsetRef.current.y;newLeft=Math.min(Math.max(0,newLeft),containerRect.width-chatWidth);newTop=Math.min(Math.max(0,newTop),containerRect.height-chatHeight);setChatPos({left:newLeft,top:newTop});e.preventDefault();e.stopPropagation();}function onDragEnd(e){if(draggingRef.current){draggingRef.current=false;localStorage.setItem('chatbox-position',JSON.stringify(chatPos));e.preventDefault();e.stopPropagation();}}// 计算透明度百分比\nfunction calculateTransparencyPercentage(data){if(!data||data.length===0)return'0.00';let transparentPixels=0;for(let i=3;i<data.length;i+=4){if(data[i]===0){transparentPixels++;}}return(transparentPixels/(data.length/4)*100).toFixed(2);}// 使用WebCodecs API处理视频帧\nasync function processVideoFrames(track){try{if(!supportsWebCodecs){console.log('WebCodecs不支持，尝试降级方案');fallbackToCanvasDrawing();return;}const canvas=canvasRef.current;const ctx=ctxRef.current;if(!canvas||!ctx){console.error('缺少Canvas或上下文');return;}// 创建MediaStreamTrackProcessor来处理视频轨道\nconst processor=new MediaStreamTrackProcessor({track});const reader=processor.readable.getReader();// 处理每一帧\nwhile(true){const{value:frame,done}=await reader.read();if(done)break;try{// 确保Canvas尺寸正确\nif(canvas.width!==frame.displayWidth||canvas.height!==frame.displayHeight){console.log(\"\\u8BBE\\u7F6ECanvas\\u5C3A\\u5BF8\\u4E3A \".concat(frame.displayWidth,\"x\").concat(frame.displayHeight));canvas.width=frame.displayWidth;canvas.height=frame.displayHeight;}// 清除画布，确保透明背景\nctx.clearRect(0,0,canvas.width,canvas.height);// 使用drawImage直接绘制带Alpha通道的帧\nctx.drawImage(frame,0,0,canvas.width,canvas.height);// 计算FPS\nconst now=performance.now();const delta=now-lastFrameTimeRef.current;lastFrameTimeRef.current=now;frameCountRef.current++;if(delta>1000){const fps=Math.round(frameCountRef.current*1000/delta);frameCountRef.current=0;// 尝试获取图像数据并分析透明度\ntry{const imageData=ctx.getImageData(0,0,canvas.width,canvas.height);const transparencyPercentage=calculateTransparencyPercentage(imageData.data);setDebugInfo(\"\\u89C6\\u9891\\u5E27\\u683C\\u5F0F: \".concat(frame.format,\" | \\u900F\\u660E\\u5EA6: \").concat(transparencyPercentage,\"% | FPS: \").concat(fps));if(parseFloat(transparencyPercentage)>1){setAlphaReady(true);}else{setAlphaReady(false);}}catch(e){console.warn('无法获取图像数据:',e.message);setDebugInfo(\"\\u89C6\\u9891\\u5E27\\u683C\\u5F0F: \".concat(frame.format,\" | FPS: \").concat(fps,\" | \\u65E0\\u6CD5\\u5206\\u6790\\u900F\\u660E\\u5EA6\"));}}}finally{// 释放帧资源\nframe.close();}}}catch(error){console.error('处理视频帧时出错:',error);setErrorMessage(\"\\u89C6\\u9891\\u5904\\u7406\\u9519\\u8BEF: \".concat(error.message));// 出错时尝试降级方案\nfallbackToCanvasDrawing();}}// 降级方案：使用Canvas直接绘制视频\nfunction fallbackToCanvasDrawing(){console.log('使用Canvas直接绘制视频帧');if(animationFrameIdRef.current){cancelAnimationFrame(animationFrameIdRef.current);}// 尝试使用OffscreenCanvas提高性能\nif(supportsOffscreenCanvas){console.log('尝试使用OffscreenCanvas');processVideoWithOffscreenCanvas();}else{console.log('使用标准Canvas渲染');processVideoFrame();}}// 使用OffscreenCanvas处理视频\nfunction processVideoWithOffscreenCanvas(){try{const video=videoRef.current;const canvas=canvasRef.current;if(!video||!canvas){console.error('缺少视频或Canvas元素');processVideoFrame();return;}// 创建OffscreenCanvas\nconst offscreenCanvas=canvas.transferControlToOffscreen();const offscreenCtx=offscreenCanvas.getContext('2d',{willReadFrequently:true,alpha:true});// 创建Worker\nconst workerBlob=new Blob([\"\\n        self.onmessage = function(e) {\\n          const canvas = e.data.canvas;\\n          const ctx = canvas.getContext('2d', { willReadFrequently: true, alpha: true });\\n          const video = e.data.video;\\n          \\n          function drawFrame() {\\n            if (!video || video.paused || video.ended) {\\n              requestAnimationFrame(drawFrame);\\n              return;\\n            }\\n            \\n            try {\\n              // \\u6E05\\u9664\\u753B\\u5E03\\n              ctx.clearRect(0, 0, canvas.width, canvas.height);\\n              \\n              // \\u7ED8\\u5236\\u89C6\\u9891\\u5E27\\n              ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\\n              \\n              // \\u5206\\u6790\\u900F\\u660E\\u5EA6\\n              try {\\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\\n                const data = imageData.data;\\n                let transparentPixels = 0;\\n                \\n                for (let i = 3; i < data.length; i += 4) {\\n                  if (data[i] === 0) {\\n                    transparentPixels++;\\n                  }\\n                }\\n                \\n                const transparencyPercentage = ((transparentPixels / (data.length / 4)) * 100).toFixed(2);\\n                \\n                // \\u53D1\\u9001\\u900F\\u660E\\u5EA6\\u4FE1\\u606F\\u56DE\\u4E3B\\u7EBF\\u7A0B\\n                self.postMessage({ type: 'stats', transparency: transparencyPercentage });\\n              } catch (e) {\\n                self.postMessage({ type: 'error', message: '\\u65E0\\u6CD5\\u5206\\u6790\\u900F\\u660E\\u5EA6: ' + e.message });\\n              }\\n            } catch (e) {\\n              self.postMessage({ type: 'error', message: '\\u7ED8\\u5236\\u5E27\\u9519\\u8BEF: ' + e.message });\\n            }\\n            \\n            requestAnimationFrame(drawFrame);\\n          }\\n          \\n          // \\u5F00\\u59CB\\u7ED8\\u5236\\n          drawFrame();\\n        };\\n      \"],{type:'application/javascript'});const workerUrl=URL.createObjectURL(workerBlob);const worker=new Worker(workerUrl);// 监听Worker消息\nworker.onmessage=function(e){if(e.data.type==='stats'){setDebugInfo(\"\\u4F7F\\u7528OffscreenCanvas | \\u900F\\u660E\\u5EA6: \".concat(e.data.transparency,\"%\"));if(parseFloat(e.data.transparency)>1){setAlphaReady(true);}else{setAlphaReady(false);}}else if(e.data.type==='error'){console.warn('OffscreenCanvas错误:',e.data.message);setDebugInfo(\"OffscreenCanvas\\u9519\\u8BEF: \".concat(e.data.message));}};// 启动Worker\nworker.postMessage({canvas:offscreenCanvas,video},[offscreenCanvas]);// 记录使用的渲染方法\nsetProcessingMode('offscreenCanvas');}catch(error){console.error('使用OffscreenCanvas失败:',error);setErrorMessage(\"OffscreenCanvas\\u9519\\u8BEF: \".concat(error.message));processVideoFrame();}}// 使用标准Canvas处理视频\nfunction processVideoFrame(){const video=videoRef.current;const canvas=canvasRef.current;const ctx=ctxRef.current;if(!video||!canvas||!ctx||!isStartedRef.current||!isVideoReadyRef.current){const checkCount=resourceCheckCount+1;setResourceCheckCount(checkCount);if(checkCount>=maxResourceCheckCount){setErrorMessage('视频资源加载超时，请检查连接或刷新页面');console.error('视频资源加载超时，停止尝试');return;}animationFrameIdRef.current=requestAnimationFrame(processVideoFrame);return;}if(video.paused||video.ended){animationFrameIdRef.current=requestAnimationFrame(processVideoFrame);return;}try{// 防止重复处理\nif(isProcessingRef.current)return;isProcessingRef.current=true;if(canvas.width!==video.videoWidth||canvas.height!==video.videoHeight){canvas.width=video.videoWidth;canvas.height=video.videoHeight;}// 清除画布，确保透明背景\nctx.clearRect(0,0,canvas.width,canvas.height);// 直接绘制视频到Canvas，依赖服务器处理的Alpha通道\nctx.drawImage(video,0,0,canvas.width,canvas.height);// 计算FPS\nconst now=performance.now();const delta=now-lastFrameTimeRef.current;lastFrameTimeRef.current=now;frameCountRef.current++;// 定期分析透明度\nif(delta>1000){const fps=Math.round(frameCountRef.current*1000/delta);frameCountRef.current=0;try{// 尝试获取图像数据并分析透明度\nconst imageData=ctx.getImageData(0,0,canvas.width,canvas.height);const transparencyPercentage=calculateTransparencyPercentage(imageData.data);setDebugInfo(\"\\u4F7F\\u7528Canvas\\u6E32\\u67D3 | \\u900F\\u660E\\u5EA6: \".concat(transparencyPercentage,\"% | FPS: \").concat(fps));if(parseFloat(transparencyPercentage)>1){setAlphaReady(true);}else{setAlphaReady(false);}}catch(e){console.warn('无法获取图像数据:',e.message);setDebugInfo(\"\\u4F7F\\u7528Canvas\\u6E32\\u67D3 | FPS: \".concat(fps,\" | \\u65E0\\u6CD5\\u5206\\u6790\\u900F\\u660E\\u5EA6\"));}}// 手动增强Alpha通道（新增）\nenhanceAlphaChannel();}catch(e){console.error('处理视频帧时出错:',e);setErrorMessage(\"\\u89C6\\u9891\\u6E32\\u67D3\\u9519\\u8BEF: \".concat(e.message));}finally{isProcessingRef.current=false;}animationFrameIdRef.current=requestAnimationFrame(processVideoFrame);}// 手动增强Alpha通道（新增）\nfunction enhanceAlphaChannel(){try{const canvas=canvasRef.current;const ctx=ctxRef.current;if(!canvas||!ctx)return;// 获取图像数据\nconst imageData=ctx.getImageData(0,0,canvas.width,canvas.height);const data=imageData.data;// 遍历所有像素，增强透明度效果\nfor(let i=3;i<data.length;i+=4){// 示例：增强低Alpha值的透明度，使透明区域更透明\nif(data[i]<128){data[i]=Math.max(0,data[i]-30);}// 确保非透明区域完全不透明，提高清晰度\nif(data[i]>200){data[i]=255;}}// 将修改后的图像数据放回Canvas\nctx.putImageData(imageData,0,0);}catch(e){console.warn('增强Alpha通道时出错:',e);}}async function negotiate(){console.log('开始建立WebRTC连接');const pc=pcRef.current;if(!pc)return;pc.addTransceiver('video',{direction:'recvonly'});pc.addTransceiver('audio',{direction:'recvonly'});try{const offer=await pc.createOffer();console.log('创建Offer成功');await pc.setLocalDescription(offer);console.log('设置本地描述成功');await new Promise(resolve=>{if(pc.iceGatheringState==='complete'){console.log('ICE收集已完成');resolve();}else{const checkState=()=>{if(pc.iceGatheringState==='complete'){pc.removeEventListener('icegatheringstatechange',checkState);console.log('ICE收集完成');resolve();}};pc.addEventListener('icegatheringstatechange',checkState);console.log('正在收集ICE候选...');}});console.log('发送Offer到服务器:',SIGNALING_URL);const response=await fetch(SIGNALING_URL,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({sdp:pc.localDescription.sdp,type:pc.localDescription.type})});if(!response.ok){throw new Error(\"\\u670D\\u52A1\\u5668\\u54CD\\u5E94\\u9519\\u8BEF: \".concat(response.status));}const answer=await response.json();console.log('收到服务器Answer');await pc.setRemoteDescription(answer);console.log('设置远程描述成功，WebRTC连接建立完成');}catch(e){console.error('协商失败:',e);setErrorMessage(\"WebRTC\\u8FDE\\u63A5\\u5931\\u8D25: \".concat(e.message));// 尝试重新连接\nif(connectionAttempts<maxConnectionAttempts){console.log(\"\\u5C1D\\u8BD5\\u91CD\\u65B0\\u8FDE\\u63A5 (\".concat(connectionAttempts+1,\"/\").concat(maxConnectionAttempts,\")\"));setConnectionAttempts(connectionAttempts+1);// 延迟后重试\nreconnectTimerRef.current=setTimeout(()=>{if(isStartedRef.current){stop();start();}},2000);}else{alert('连接失败，请检查网络连接或刷新页面');}}}function start(){console.log('启动WebRTC连接');if(isStartedRef.current)return;const config={sdpSemantics:'unified-plan'};if(useStun){config.iceServers=[{urls:'stun:stun.l.google.com:19302'}];}const pc=new RTCPeerConnection(config);pcRef.current=pc;// 立即更新标志\nisStartedRef.current=true;// 重置连接尝试次数\nsetConnectionAttempts(0);// 监听连接状态变化\npc.addEventListener('connectionstatechange',()=>{console.log(\"WebRTC\\u8FDE\\u63A5\\u72B6\\u6001\\u53D8\\u5316: \".concat(pc.connectionState));if(pc.connectionState==='failed'){setErrorMessage('WebRTC连接失败');// 尝试重新连接\nif(connectionAttempts<maxConnectionAttempts){console.log(\"\\u5C1D\\u8BD5\\u91CD\\u65B0\\u8FDE\\u63A5 (\".concat(connectionAttempts+1,\"/\").concat(maxConnectionAttempts,\")\"));setConnectionAttempts(connectionAttempts+1);// 延迟后重试\nreconnectTimerRef.current=setTimeout(()=>{if(isStartedRef.current){stop();start();}},2000);}else{alert('连接失败，请检查网络连接或刷新页面');}}else if(pc.connectionState==='disconnected'){setErrorMessage('WebRTC连接断开，尝试重新连接');// 延迟后尝试重新连接\nif(!reconnectTimerRef.current){reconnectTimerRef.current=setTimeout(()=>{if(isStartedRef.current){stop();start();}},2000);}}else if(pc.connectionState==='connected'){setErrorMessage('');if(reconnectTimerRef.current){clearTimeout(reconnectTimerRef.current);reconnectTimerRef.current=null;}}});pc.addEventListener('track',evt=>{console.log('收到新的媒体轨道:',evt.track.kind,evt.streams[0].id);if(evt.track.kind==='video'){videoTracksRef.current.push(evt.track);console.log(\"\\u5DF2\\u5B58\\u50A8\\u89C6\\u9891\\u8F68\\u9053\\uFF0C\\u603B\\u6570: \".concat(videoTracksRef.current.length));if(videoRef.current){videoRef.current.srcObject=evt.streams[0];videoRef.current.addEventListener('loadedmetadata',()=>{console.log('RGB视频元数据加载完成，尺寸:',videoRef.current.videoWidth,videoRef.current.videoHeight);if(videoRef.current.videoWidth>0&&videoRef.current.videoHeight>0){isVideoReadyRef.current=true;setVideoReady(true);const canvas=canvasRef.current;if(canvas){const ctx=canvas.getContext('2d',{willReadFrequently:true,alpha:true// 确保明确启用Alpha通道\n});if(!ctx){console.error('无法获取Canvas 2D上下文');setErrorMessage('无法初始化视频渲染上下文');return;}ctxRef.current=ctx;ctx.globalCompositeOperation='source-over';canvas.width=videoRef.current.videoWidth;canvas.height=videoRef.current.videoHeight;console.log('Canvas初始化完成，尺寸:',canvas.width,canvas.height);// 尝试使用WebCodecs处理视频帧\nif(supportsWebCodecs){console.log('使用WebCodecs处理视频帧');processVideoFrames(evt.track);}else{console.log('WebCodecs不支持，使用Canvas定时绘制方法');processVideoFrame();}}}else{console.warn('视频尺寸无效，宽度:',videoRef.current.videoWidth,'高度:',videoRef.current.videoHeight);}},{once:true});videoRef.current.addEventListener('canplay',()=>{console.log('RGB视频可以播放，readyState:',videoRef.current.readyState);if(!started){setStarted(true);}if(!supportsWebCodecs&&isVideoReadyRef.current&&ctxRef.current&&!animationFrameIdRef.current){processVideoFrame();}},{once:true});videoRef.current.addEventListener('error',e=>{console.error('RGB视频错误:',e.target.error);setErrorMessage(\"RGB\\u89C6\\u9891\\u9519\\u8BEF: \".concat(e.target.error.message));});}}else if(evt.track.kind==='audio'){console.log('收到音频流');if(audioRef.current){audioRef.current.srcObject=evt.streams[0];}}});Promise.resolve().then(()=>{setStarted(true);setErrorMessage('');negotiate();setZoomWidth(initialWidth);});}function stop(){var _videoRef$current,_audioRef$current;console.log('停止WebRTC连接');if(!isStartedRef.current)return;if(animationFrameIdRef.current){cancelAnimationFrame(animationFrameIdRef.current);animationFrameIdRef.current=null;}if(reconnectTimerRef.current){clearTimeout(reconnectTimerRef.current);reconnectTimerRef.current=null;}isStartedRef.current=false;isVideoReadyRef.current=false;setStarted(false);setVideoReady(false);setAlphaReady(false);setProcessingMode('rgba');setErrorMessage('');setDebugInfo('');setResourceCheckCount(0);if((_videoRef$current=videoRef.current)!==null&&_videoRef$current!==void 0&&_videoRef$current.srcObject){videoRef.current.srcObject.getTracks().forEach(track=>{track.stop();});videoRef.current.srcObject=null;}if((_audioRef$current=audioRef.current)!==null&&_audioRef$current!==void 0&&_audioRef$current.srcObject){audioRef.current.srcObject.getTracks().forEach(track=>{track.stop();});audioRef.current.srcObject=null;}if(!keepConnection){setTimeout(()=>{if(pcRef.current){pcRef.current.close();pcRef.current=null;}},500);}}function zoomIn(){setZoomWidth(w=>w+zoomStep);}function zoomOut(){setZoomWidth(w=>w-zoomStep>0?w-zoomStep:w);}const[message,setMessage]=useState('');const[imageFile,setImageFile]=useState(null);const sendTextMessage=async()=>{if(!message.trim())return;try{console.log('发送文本消息:',message);const response=await fetch('https://192.168.168.77:6010/qwener',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({text:message})});if(!response.ok)throw new Error('状态码: '+response.status);console.log('文本发送成功');}catch(error){console.error('文本发送失败：',error);}};const sendMultiModal=async()=>{if(!imageFile)return;try{console.log('发送多模态消息，包含图片');const reader=new FileReader();reader.onloadend=async()=>{const response=await fetch('https://192.168.1.70:6010/multimodal',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({text:message.trim(),image:reader.result})});if(!response.ok)throw new Error('状态码: '+response.status);console.log('多模态发送成功');setImageFile(null);setMessage('');};reader.readAsDataURL(imageFile);}catch(error){console.error('多模态发送失败：',error);}};const handleSubmit=async e=>{e.preventDefault();if(imageFile){await sendMultiModal();}else{await sendTextMessage();setMessage('');}};const handleImageChange=e=>{const file=e.target.files[0];setImageFile(file||null);};useEffect(()=>{return()=>{if(animationFrameIdRef.current){cancelAnimationFrame(animationFrameIdRef.current);}if(reconnectTimerRef.current){clearTimeout(reconnectTimerRef.current);}stop();};},[]);const frostedGlassBtnStyle={backgroundColor:'rgba(255, 255, 255, 0.1)',border:'1px solid rgba(255, 255, 255, 0.3)',color:'white',fontWeight:'bold',padding:'8px 16px',cursor:'pointer',borderRadius:4,outline:'none',transition:'all 0.3s',fontSize:14,backdropFilter:'blur(10px)',WebkitBackdropFilter:'blur(10px)',boxShadow:'0 4px 10px rgba(255, 255, 255, 0.15)'};const disabledBtnStyle=_objectSpread(_objectSpread({},frostedGlassBtnStyle),{},{opacity:0.4,cursor:'not-allowed',boxShadow:'none'});const getBtnHoverStyle=disabled=>{if(disabled)return{};return{backgroundColor:'rgba(255, 255, 255, 0.2)',boxShadow:'0 6px 20px rgba(255, 255, 255, 0.3)',transform:'scale(1.05)'};};const[startBtnHover,setStartBtnHover]=useState(false);const[stopBtnHover,setStopBtnHover]=useState(false);const[zoomInHover,setZoomInHover]=useState(false);const[zoomOutHover,setZoomOutHover]=useState(false);const[interruptBtnHover,setInterruptBtnHover]=useState(false);const handleInterruptClick=async()=>{try{console.log('发送打断请求');const resp=await fetch('http://192.168.168.77:6010/api/interrupt_speaking',{method:'POST',headers:{'Content-Type':'application/json'}});if(!resp.ok)throw new Error('状态码: '+resp.status);console.log('打断请求发送成功');}catch(e){console.error('打断接口异常:',e);}};return/*#__PURE__*/_jsxs(\"div\",{ref:containerRef,style:{maxWidth:1280,position:'relative',minHeight:'100vh'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"option\",style:{marginBottom:8},children:/*#__PURE__*/_jsx(\"input\",{id:\"use-stun\",type:\"checkbox\",checked:useStun,onChange:e=>setUseStun(e.target.checked),style:{accentColor:'white'},disabled:started,hidden:true})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:8},children:[/*#__PURE__*/_jsx(\"button\",{onClick:zoomIn,style:_objectSpread(_objectSpread({},frostedGlassBtnStyle),{},{marginRight:8},zoomInHover?getBtnHoverStyle(false):{}),onMouseEnter:()=>setZoomInHover(true),onMouseLeave:()=>setZoomInHover(false),type:\"button\",children:\"\\u653E\\u5927\"}),/*#__PURE__*/_jsx(\"button\",{onClick:zoomOut,style:_objectSpread(_objectSpread({},frostedGlassBtnStyle),zoomOutHover?getBtnHoverStyle(false):{}),onMouseEnter:()=>setZoomOutHover(true),onMouseLeave:()=>setZoomOutHover(false),type:\"button\",children:\"\\u7F29\\u5C0F\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:start,disabled:isStartedRef.current,style:_objectSpread(_objectSpread({},isStartedRef.current?disabledBtnStyle:frostedGlassBtnStyle),startBtnHover&&!isStartedRef.current?getBtnHoverStyle(false):{}),onMouseEnter:()=>setStartBtnHover(true),onMouseLeave:()=>setStartBtnHover(false),children:\"\\u542F\\u52A8\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stop,disabled:!isStartedRef.current,style:_objectSpread(_objectSpread({},!isStartedRef.current?disabledBtnStyle:frostedGlassBtnStyle),stopBtnHover&&isStartedRef.current?getBtnHoverStyle(false):{}),onMouseEnter:()=>setStopBtnHover(true),onMouseLeave:()=>setStopBtnHover(false),children:\"\\u505C\\u6B62\"}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{style:{color:'red',margin:'10px 0',padding:'10px',background:'rgba(0,0,0,0.5)',borderRadius:4},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u9519\\u8BEF:\"}),\" \",errorMessage]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',margin:'10px 0'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u72B6\\u6001:\"}),\" \",started?'已连接':'未连接',\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\"\\u6A21\\u5F0F:\"}),\" \",processingMode,\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\"\\u89C6\\u9891:\"}),\" \",videoReady?'就绪':'加载中',\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\"Alpha:\"}),\" \",alphaReady?'就绪':'未检测到',\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\"WebCodecs:\"}),\" \",supportsWebCodecs?'支持':'不支持',\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\"\\u8FDE\\u63A5\\u5C1D\\u8BD5:\"}),\" \",connectionAttempts,\"/\",maxConnectionAttempts]}),debugInfo&&/*#__PURE__*/_jsxs(\"div\",{style:{color:'yellow',margin:'10px 0',padding:'10px',background:'rgba(0,0,0,0.5)',borderRadius:4,whiteSpace:'pre-wrap'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u8C03\\u8BD5\\u4FE1\\u606F:\"}),\" \",debugInfo]}),renderVideo&&/*#__PURE__*/_jsxs(\"div\",{id:\"media\",style:{marginTop:20},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:'white'},children:\"\\u7BA1\\u5BB6\"}),/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,autoPlay:true}),/*#__PURE__*/_jsx(\"video\",{ref:videoRef,style:{display:'block',width:100,height:'auto',position:'absolute',top:10,right:10,zIndex:100,border:'2px solid red',opacity:0.3// 设置为部分透明以便观察\n},autoPlay:true,playsInline:true}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{width:zoomWidth,height:zoomWidth*initialHeight/initialWidth,display:'block',position:'relative',zIndex:10,border:'2px solid white',backgroundColor:'transparent',// 确保Canvas背景透明\nmixBlendMode:'normal'// 确保混合模式正确\n}})]}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:chatPos.left,top:chatPos.top,width:320,borderRadius:6,padding:12,color:'white',userSelect:'none',cursor:draggingRef.current?'grabbing':'grab',zIndex:9999,backdropFilter:'blur(10px)',backgroundColor:'rgba(0,0,0,0.5)'},onMouseDown:onDragStart,onMouseMove:onDragMove,onMouseUp:onDragEnd,onMouseLeave:onDragEnd,onTouchStart:onDragStart,onTouchMove:onDragMove,onTouchEnd:onDragEnd,children:/*#__PURE__*/_jsxs(\"form\",{id:\"echo-form\",onSubmit:handleSubmit,style:{display:'flex',flexDirection:'column',gap:8},children:[/*#__PURE__*/_jsx(\"textarea\",{ref:textareaRef,id:\"message\",value:message,onChange:e=>setMessage(e.target.value),rows:3,style:{width:'100%',resize:'vertical',padding:8,borderRadius:8,border:'1px solid rgba(255,255,255,0.3)',backgroundColor:'rgba(255,255,255,0.1)',color:'white',outline:'none'},placeholder:\"\\u8BF7\\u8F93\\u5165\\u6587\\u672C...\",onClick:e=>e.stopPropagation()}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'flex-end',gap:8},children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleInterruptClick,style:_objectSpread(_objectSpread({},frostedGlassBtnStyle),{},{padding:'6px 16px',fontSize:14}),onMouseEnter:()=>setInterruptBtnHover(true),onMouseLeave:()=>setInterruptBtnHover(false),children:\"\\u6253\\u65AD\\u8BF4\\u8BDD\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"image-upload\",style:_objectSpread(_objectSpread({},frostedGlassBtnStyle),{},{padding:'6px 12px',cursor:'pointer'}),children:\"\\u4E0A\\u4F20\\u56FE\\u7247\"}),/*#__PURE__*/_jsx(\"input\",{id:\"image-upload\",type:\"file\",accept:\"image/*\",style:{display:'none'},onChange:handleImageChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:_objectSpread(_objectSpread({},frostedGlassBtnStyle),{},{padding:'6px 16px'}),children:\"\\u53D1\\u9001\"})]}),imageFile&&/*#__PURE__*/_jsxs(\"div\",{style:{margin:'10px 0',padding:8,border:'1px solid rgba(255,255,255,0.3)',borderRadius:4,backgroundColor:'rgba(255,255,255,0.1)'},children:[/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0 0 8px 0'},children:[\"\\u5DF2\\u9009\\u62E9\\u56FE\\u7247: \",imageFile.name]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'flex-end'},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setImageFile(null),style:{backgroundColor:'rgba(255, 0, 0, 0.3)',border:'1px solid rgba(255, 0, 0, 0.5)',color:'white',padding:'4px 8px',cursor:'pointer',borderRadius:4,outline:'none',fontSize:12},children:\"\\u79FB\\u9664\"})})]})]})})]});}","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","OldWebRTC","_ref","renderVideo","keepConnection","videoRef","audioRef","pcRef","textareaRef","canvasRef","ctxRef","animationFrameIdRef","reconnectTimerRef","containerRef","useStun","setUseStun","started","setStarted","zoomWidth","setZoomWidth","videoReady","setVideoReady","alphaReady","setAlphaReady","processingMode","setProcessingMode","errorMessage","setErrorMessage","debugInfo","setDebugInfo","resourceCheckCount","setResourceCheckCount","maxResourceCheckCount","connectionAttempts","setConnectionAttempts","maxConnectionAttempts","supportsWebCodecs","setSupportsWebCodecs","window","VideoDecoder","MediaStreamTrackProcessor","supportsOffscreenCanvas","setSupportsOffscreenCanvas","OffscreenCanvas","isStartedRef","isVideoReadyRef","videoTracksRef","lastFrameTimeRef","frameCountRef","isProcessingRef","initialWidth","initialHeight","SIGNALING_URL","zoomStep","chatPos","setChatPos","saved","localStorage","getItem","pos","JSON","parse","left","top","_unused","draggingRef","dragOffsetRef","x","y","onDragStart","e","_e$touches","target","tagName","toLowerCase","current","targetRect","currentTarget","getBoundingClientRect","type","touches","clientX","clientY","preventDefault","stopPropagation","onDragMove","_e$touches2","containerRect","chatRect","chatWidth","width","chatHeight","height","newLeft","newTop","Math","min","max","onDragEnd","setItem","stringify","calculateTransparencyPercentage","data","length","transparentPixels","i","toFixed","processVideoFrames","track","console","log","fallbackToCanvasDrawing","canvas","ctx","error","processor","reader","readable","getReader","value","frame","done","read","displayWidth","displayHeight","concat","clearRect","drawImage","now","performance","delta","fps","round","imageData","getImageData","transparencyPercentage","format","parseFloat","warn","message","close","cancelAnimationFrame","processVideoWithOffscreenCanvas","processVideoFrame","video","offscreenCanvas","transferControlToOffscreen","offscreenCtx","getContext","willReadFrequently","alpha","workerBlob","Blob","workerUrl","URL","createObjectURL","worker","Worker","onmessage","transparency","postMessage","checkCount","requestAnimationFrame","paused","ended","videoWidth","videoHeight","enhanceAlphaChannel","putImageData","negotiate","pc","addTransceiver","direction","offer","createOffer","setLocalDescription","Promise","resolve","iceGatheringState","checkState","removeEventListener","addEventListener","response","fetch","method","headers","body","sdp","localDescription","ok","Error","status","answer","json","setRemoteDescription","setTimeout","stop","start","alert","config","sdpSemantics","iceServers","urls","RTCPeerConnection","connectionState","clearTimeout","evt","kind","streams","id","push","srcObject","globalCompositeOperation","once","readyState","then","_videoRef$current","_audioRef$current","getTracks","forEach","zoomIn","w","zoomOut","setMessage","imageFile","setImageFile","sendTextMessage","trim","text","sendMultiModal","FileReader","onloadend","image","result","readAsDataURL","handleSubmit","handleImageChange","file","files","frostedGlassBtnStyle","backgroundColor","border","color","fontWeight","padding","cursor","borderRadius","outline","transition","fontSize","backdropFilter","WebkitBackdropFilter","boxShadow","disabledBtnStyle","_objectSpread","opacity","getBtnHoverStyle","disabled","transform","startBtnHover","setStartBtnHover","stopBtnHover","setStopBtnHover","zoomInHover","setZoomInHover","zoomOutHover","setZoomOutHover","interruptBtnHover","setInterruptBtnHover","handleInterruptClick","resp","ref","style","maxWidth","position","minHeight","children","className","marginBottom","checked","onChange","accentColor","hidden","onClick","marginRight","onMouseEnter","onMouseLeave","margin","background","whiteSpace","marginTop","autoPlay","display","right","zIndex","playsInline","mixBlendMode","userSelect","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onSubmit","flexDirection","gap","rows","resize","placeholder","justifyContent","htmlFor","accept","name"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/OldWebRTC.jsx"],"sourcesContent":["// src/components/OldWebRTC.jsx\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nexport default function OldWebRTC({ renderVideo = true, keepConnection = false }) {\r\n  const videoRef = useRef(null);\r\n  const audioRef = useRef(null);\r\n  const pcRef = useRef(null);\r\n  const textareaRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const animationFrameIdRef = useRef(null);\r\n  const reconnectTimerRef = useRef(null);\r\n  \r\n  const containerRef = useRef(null);\r\n\r\n  const [useStun, setUseStun] = useState(false);\r\n  const [started, setStarted] = useState(false);\r\n  const [zoomWidth, setZoomWidth] = useState(600);\r\n  const [videoReady, setVideoReady] = useState(false);\r\n  const [alphaReady, setAlphaReady] = useState(false);\r\n  const [processingMode, setProcessingMode] = useState('rgba');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [debugInfo, setDebugInfo] = useState('');\r\n  const [resourceCheckCount, setResourceCheckCount] = useState(0);\r\n  const [maxResourceCheckCount] = useState(30);\r\n  const [connectionAttempts, setConnectionAttempts] = useState(0);\r\n  const [maxConnectionAttempts] = useState(5);\r\n  \r\n  // 检测浏览器是否支持WebCodecs\r\n  const [supportsWebCodecs, setSupportsWebCodecs] = useState(\r\n    typeof window.VideoDecoder !== 'undefined' && \r\n    typeof window.MediaStreamTrackProcessor !== 'undefined'\r\n  );\r\n  \r\n  // 检测浏览器是否支持OffscreenCanvas\r\n  const [supportsOffscreenCanvas, setSupportsOffscreenCanvas] = useState(\r\n    typeof window.OffscreenCanvas !== 'undefined'\r\n  );\r\n\r\n  // 立即更新的标志\r\n  const isStartedRef = useRef(false);\r\n  const isVideoReadyRef = useRef(false);\r\n  const videoTracksRef = useRef([]);\r\n  const lastFrameTimeRef = useRef(0);\r\n  const frameCountRef = useRef(0);\r\n  const isProcessingRef = useRef(false);\r\n\r\n  const initialWidth = 600;\r\n  const initialHeight = 450;\r\n  const SIGNALING_URL = '/offer';\r\n  const zoomStep = 50;\r\n\r\n  const [chatPos, setChatPos] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem('chatbox-position');\r\n      if (saved) {\r\n        const pos = JSON.parse(saved);\r\n        if (typeof pos.left === 'number' && typeof pos.top === 'number') {\r\n          return pos;\r\n        }\r\n      }\r\n    } catch {}\r\n    return { left: 20, top: 20 };\r\n  });\r\n\r\n  const draggingRef = useRef(false);\r\n  const dragOffsetRef = useRef({ x: 0, y: 0 });\r\n\r\n  function onDragStart(e) {\r\n    if (e.target.tagName.toLowerCase() === 'textarea') {\r\n      draggingRef.current = false;\r\n      return;\r\n    }\r\n    \r\n    draggingRef.current = true;\r\n    const targetRect = e.currentTarget.getBoundingClientRect();\r\n    if (e.type === 'touchstart' && e.touches?.[0]) {\r\n      dragOffsetRef.current = {\r\n        x: e.touches[0].clientX - targetRect.left,\r\n        y: e.touches[0].clientY - targetRect.top,\r\n      };\r\n    } else {\r\n      dragOffsetRef.current = {\r\n        x: e.clientX - targetRect.left,\r\n        y: e.clientY - targetRect.top,\r\n      };\r\n    }\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  function onDragMove(e) {\r\n    if (!draggingRef.current) return;\r\n  \r\n    let clientX, clientY;\r\n    if (e.type === 'touchmove' && e.touches?.[0]) {\r\n      clientX = e.touches[0].clientX;\r\n      clientY = e.touches[0].clientY;\r\n    } else if (e.type === 'mousemove') {\r\n      clientX = e.clientX;\r\n      clientY = e.clientY;\r\n    } else {\r\n      return;\r\n    }\r\n  \r\n    if (!containerRef.current || !e.currentTarget) return;\r\n  \r\n    const containerRect = containerRef.current.getBoundingClientRect();\r\n    const chatRect = e.currentTarget.getBoundingClientRect();\r\n    const chatWidth = chatRect.width;\r\n    const chatHeight = chatRect.height;\r\n  \r\n    let newLeft = clientX - containerRect.left - dragOffsetRef.current.x;\r\n    let newTop = clientY - containerRect.top - dragOffsetRef.current.y;\r\n  \r\n    newLeft = Math.min(Math.max(0, newLeft), containerRect.width - chatWidth);\r\n    newTop = Math.min(Math.max(0, newTop), containerRect.height - chatHeight);\r\n  \r\n    setChatPos({ left: newLeft, top: newTop });\r\n  \r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n  \r\n  function onDragEnd(e) {\r\n    if (draggingRef.current) {\r\n      draggingRef.current = false;\r\n      localStorage.setItem('chatbox-position', JSON.stringify(chatPos));\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  // 计算透明度百分比\r\n  function calculateTransparencyPercentage(data) {\r\n    if (!data || data.length === 0) return '0.00';\r\n    \r\n    let transparentPixels = 0;\r\n    \r\n    for (let i = 3; i < data.length; i += 4) {\r\n      if (data[i] === 0) {\r\n        transparentPixels++;\r\n      }\r\n    }\r\n    \r\n    return (transparentPixels / (data.length / 4) * 100).toFixed(2);\r\n  }\r\n\r\n  // 使用WebCodecs API处理视频帧\r\n  async function processVideoFrames(track) {\r\n    try {\r\n      if (!supportsWebCodecs) {\r\n        console.log('WebCodecs不支持，尝试降级方案');\r\n        fallbackToCanvasDrawing();\r\n        return;\r\n      }\r\n      \r\n      const canvas = canvasRef.current;\r\n      const ctx = ctxRef.current;\r\n      \r\n      if (!canvas || !ctx) {\r\n        console.error('缺少Canvas或上下文');\r\n        return;\r\n      }\r\n      \r\n      // 创建MediaStreamTrackProcessor来处理视频轨道\r\n      const processor = new MediaStreamTrackProcessor({ track });\r\n      const reader = processor.readable.getReader();\r\n      \r\n      // 处理每一帧\r\n      while (true) {\r\n        const { value: frame, done } = await reader.read();\r\n        if (done) break;\r\n        \r\n        try {\r\n          // 确保Canvas尺寸正确\r\n          if (canvas.width !== frame.displayWidth || canvas.height !== frame.displayHeight) {\r\n            console.log(`设置Canvas尺寸为 ${frame.displayWidth}x${frame.displayHeight}`);\r\n            canvas.width = frame.displayWidth;\r\n            canvas.height = frame.displayHeight;\r\n          }\r\n          \r\n          // 清除画布，确保透明背景\r\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n          \r\n          // 使用drawImage直接绘制带Alpha通道的帧\r\n          ctx.drawImage(frame, 0, 0, canvas.width, canvas.height);\r\n          \r\n          // 计算FPS\r\n          const now = performance.now();\r\n          const delta = now - lastFrameTimeRef.current;\r\n          lastFrameTimeRef.current = now;\r\n          frameCountRef.current++;\r\n          \r\n          if (delta > 1000) {\r\n            const fps = Math.round((frameCountRef.current * 1000) / delta);\r\n            frameCountRef.current = 0;\r\n            \r\n            // 尝试获取图像数据并分析透明度\r\n            try {\r\n              const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n              const transparencyPercentage = calculateTransparencyPercentage(imageData.data);\r\n              setDebugInfo(`视频帧格式: ${frame.format} | 透明度: ${transparencyPercentage}% | FPS: ${fps}`);\r\n              \r\n              if (parseFloat(transparencyPercentage) > 1) {\r\n                setAlphaReady(true);\r\n              } else {\r\n                setAlphaReady(false);\r\n              }\r\n            } catch (e) {\r\n              console.warn('无法获取图像数据:', e.message);\r\n              setDebugInfo(`视频帧格式: ${frame.format} | FPS: ${fps} | 无法分析透明度`);\r\n            }\r\n          }\r\n        } finally {\r\n          // 释放帧资源\r\n          frame.close();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('处理视频帧时出错:', error);\r\n      setErrorMessage(`视频处理错误: ${error.message}`);\r\n      // 出错时尝试降级方案\r\n      fallbackToCanvasDrawing();\r\n    }\r\n  }\r\n\r\n  // 降级方案：使用Canvas直接绘制视频\r\n  function fallbackToCanvasDrawing() {\r\n    console.log('使用Canvas直接绘制视频帧');\r\n    \r\n    if (animationFrameIdRef.current) {\r\n      cancelAnimationFrame(animationFrameIdRef.current);\r\n    }\r\n    \r\n    // 尝试使用OffscreenCanvas提高性能\r\n    if (supportsOffscreenCanvas) {\r\n      console.log('尝试使用OffscreenCanvas');\r\n      processVideoWithOffscreenCanvas();\r\n    } else {\r\n      console.log('使用标准Canvas渲染');\r\n      processVideoFrame();\r\n    }\r\n  }\r\n\r\n  // 使用OffscreenCanvas处理视频\r\n  function processVideoWithOffscreenCanvas() {\r\n    try {\r\n      const video = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n      \r\n      if (!video || !canvas) {\r\n        console.error('缺少视频或Canvas元素');\r\n        processVideoFrame();\r\n        return;\r\n      }\r\n      \r\n      // 创建OffscreenCanvas\r\n      const offscreenCanvas = canvas.transferControlToOffscreen();\r\n      const offscreenCtx = offscreenCanvas.getContext('2d', { willReadFrequently: true, alpha: true });\r\n      \r\n      // 创建Worker\r\n      const workerBlob = new Blob([`\r\n        self.onmessage = function(e) {\r\n          const canvas = e.data.canvas;\r\n          const ctx = canvas.getContext('2d', { willReadFrequently: true, alpha: true });\r\n          const video = e.data.video;\r\n          \r\n          function drawFrame() {\r\n            if (!video || video.paused || video.ended) {\r\n              requestAnimationFrame(drawFrame);\r\n              return;\r\n            }\r\n            \r\n            try {\r\n              // 清除画布\r\n              ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n              \r\n              // 绘制视频帧\r\n              ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n              \r\n              // 分析透明度\r\n              try {\r\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n                const data = imageData.data;\r\n                let transparentPixels = 0;\r\n                \r\n                for (let i = 3; i < data.length; i += 4) {\r\n                  if (data[i] === 0) {\r\n                    transparentPixels++;\r\n                  }\r\n                }\r\n                \r\n                const transparencyPercentage = ((transparentPixels / (data.length / 4)) * 100).toFixed(2);\r\n                \r\n                // 发送透明度信息回主线程\r\n                self.postMessage({ type: 'stats', transparency: transparencyPercentage });\r\n              } catch (e) {\r\n                self.postMessage({ type: 'error', message: '无法分析透明度: ' + e.message });\r\n              }\r\n            } catch (e) {\r\n              self.postMessage({ type: 'error', message: '绘制帧错误: ' + e.message });\r\n            }\r\n            \r\n            requestAnimationFrame(drawFrame);\r\n          }\r\n          \r\n          // 开始绘制\r\n          drawFrame();\r\n        };\r\n      `], { type: 'application/javascript' });\r\n      \r\n      const workerUrl = URL.createObjectURL(workerBlob);\r\n      const worker = new Worker(workerUrl);\r\n      \r\n      // 监听Worker消息\r\n      worker.onmessage = function(e) {\r\n        if (e.data.type === 'stats') {\r\n          setDebugInfo(`使用OffscreenCanvas | 透明度: ${e.data.transparency}%`);\r\n          if (parseFloat(e.data.transparency) > 1) {\r\n            setAlphaReady(true);\r\n          } else {\r\n            setAlphaReady(false);\r\n          }\r\n        } else if (e.data.type === 'error') {\r\n          console.warn('OffscreenCanvas错误:', e.data.message);\r\n          setDebugInfo(`OffscreenCanvas错误: ${e.data.message}`);\r\n        }\r\n      };\r\n      \r\n      // 启动Worker\r\n      worker.postMessage({ canvas: offscreenCanvas, video }, [offscreenCanvas]);\r\n      \r\n      // 记录使用的渲染方法\r\n      setProcessingMode('offscreenCanvas');\r\n    } catch (error) {\r\n      console.error('使用OffscreenCanvas失败:', error);\r\n      setErrorMessage(`OffscreenCanvas错误: ${error.message}`);\r\n      processVideoFrame();\r\n    }\r\n  }\r\n\r\n  // 使用标准Canvas处理视频\r\n  function processVideoFrame() {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    const ctx = ctxRef.current;\r\n    \r\n    if (!video || !canvas || !ctx || !isStartedRef.current || !isVideoReadyRef.current) {\r\n      const checkCount = resourceCheckCount + 1;\r\n      setResourceCheckCount(checkCount);\r\n      \r\n      if (checkCount >= maxResourceCheckCount) {\r\n        setErrorMessage('视频资源加载超时，请检查连接或刷新页面');\r\n        console.error('视频资源加载超时，停止尝试');\r\n        return;\r\n      }\r\n      \r\n      animationFrameIdRef.current = requestAnimationFrame(processVideoFrame);\r\n      return;\r\n    }\r\n\r\n    if (video.paused || video.ended) {\r\n      animationFrameIdRef.current = requestAnimationFrame(processVideoFrame);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 防止重复处理\r\n      if (isProcessingRef.current) return;\r\n      isProcessingRef.current = true;\r\n      \r\n      if (canvas.width !== video.videoWidth || canvas.height !== video.videoHeight) {\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n      }\r\n\r\n      // 清除画布，确保透明背景\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // 直接绘制视频到Canvas，依赖服务器处理的Alpha通道\r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      \r\n      // 计算FPS\r\n      const now = performance.now();\r\n      const delta = now - lastFrameTimeRef.current;\r\n      lastFrameTimeRef.current = now;\r\n      frameCountRef.current++;\r\n      \r\n      // 定期分析透明度\r\n      if (delta > 1000) {\r\n        const fps = Math.round((frameCountRef.current * 1000) / delta);\r\n        frameCountRef.current = 0;\r\n        \r\n        try {\r\n          // 尝试获取图像数据并分析透明度\r\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n          const transparencyPercentage = calculateTransparencyPercentage(imageData.data);\r\n          setDebugInfo(`使用Canvas渲染 | 透明度: ${transparencyPercentage}% | FPS: ${fps}`);\r\n          \r\n          if (parseFloat(transparencyPercentage) > 1) {\r\n            setAlphaReady(true);\r\n          } else {\r\n            setAlphaReady(false);\r\n          }\r\n        } catch (e) {\r\n          console.warn('无法获取图像数据:', e.message);\r\n          setDebugInfo(`使用Canvas渲染 | FPS: ${fps} | 无法分析透明度`);\r\n        }\r\n      }\r\n      \r\n      // 手动增强Alpha通道（新增）\r\n      enhanceAlphaChannel();\r\n    } catch (e) {\r\n      console.error('处理视频帧时出错:', e);\r\n      setErrorMessage(`视频渲染错误: ${e.message}`);\r\n    } finally {\r\n      isProcessingRef.current = false;\r\n    }\r\n\r\n    animationFrameIdRef.current = requestAnimationFrame(processVideoFrame);\r\n  }\r\n\r\n  // 手动增强Alpha通道（新增）\r\n  function enhanceAlphaChannel() {\r\n    try {\r\n      const canvas = canvasRef.current;\r\n      const ctx = ctxRef.current;\r\n      \r\n      if (!canvas || !ctx) return;\r\n      \r\n      // 获取图像数据\r\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n      const data = imageData.data;\r\n      \r\n      // 遍历所有像素，增强透明度效果\r\n      for (let i = 3; i < data.length; i += 4) {\r\n        // 示例：增强低Alpha值的透明度，使透明区域更透明\r\n        if (data[i] < 128) {\r\n          data[i] = Math.max(0, data[i] - 30);\r\n        }\r\n        \r\n        // 确保非透明区域完全不透明，提高清晰度\r\n        if (data[i] > 200) {\r\n          data[i] = 255;\r\n        }\r\n      }\r\n      \r\n      // 将修改后的图像数据放回Canvas\r\n      ctx.putImageData(imageData, 0, 0);\r\n    } catch (e) {\r\n      console.warn('增强Alpha通道时出错:', e);\r\n    }\r\n  }\r\n\r\n  async function negotiate() {\r\n    console.log('开始建立WebRTC连接');\r\n    const pc = pcRef.current;\r\n    if (!pc) return;\r\n\r\n    pc.addTransceiver('video', { direction: 'recvonly' });\r\n    pc.addTransceiver('audio', { direction: 'recvonly' });\r\n\r\n    try {\r\n      const offer = await pc.createOffer();\r\n      console.log('创建Offer成功');\r\n      await pc.setLocalDescription(offer);\r\n      console.log('设置本地描述成功');\r\n\r\n      await new Promise((resolve) => {\r\n        if (pc.iceGatheringState === 'complete') {\r\n          console.log('ICE收集已完成');\r\n          resolve();\r\n        } else {\r\n          const checkState = () => {\r\n            if (pc.iceGatheringState === 'complete') {\r\n              pc.removeEventListener('icegatheringstatechange', checkState);\r\n              console.log('ICE收集完成');\r\n              resolve();\r\n            }\r\n          };\r\n          pc.addEventListener('icegatheringstatechange', checkState);\r\n          console.log('正在收集ICE候选...');\r\n        }\r\n      });\r\n\r\n      console.log('发送Offer到服务器:', SIGNALING_URL);\r\n      const response = await fetch(SIGNALING_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          sdp: pc.localDescription.sdp,\r\n          type: pc.localDescription.type,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`服务器响应错误: ${response.status}`);\r\n      }\r\n      \r\n      const answer = await response.json();\r\n      console.log('收到服务器Answer');\r\n      await pc.setRemoteDescription(answer);\r\n      console.log('设置远程描述成功，WebRTC连接建立完成');\r\n    } catch (e) {\r\n      console.error('协商失败:', e);\r\n      setErrorMessage(`WebRTC连接失败: ${e.message}`);\r\n      \r\n      // 尝试重新连接\r\n      if (connectionAttempts < maxConnectionAttempts) {\r\n        console.log(`尝试重新连接 (${connectionAttempts + 1}/${maxConnectionAttempts})`);\r\n        setConnectionAttempts(connectionAttempts + 1);\r\n        \r\n        // 延迟后重试\r\n        reconnectTimerRef.current = setTimeout(() => {\r\n          if (isStartedRef.current) {\r\n            stop();\r\n            start();\r\n          }\r\n        }, 2000);\r\n      } else {\r\n        alert('连接失败，请检查网络连接或刷新页面');\r\n      }\r\n    }\r\n  }\r\n\r\n  function start() {\r\n    console.log('启动WebRTC连接');\r\n    if (isStartedRef.current) return;\r\n\r\n    const config = { sdpSemantics: 'unified-plan' };\r\n    if (useStun) {\r\n      config.iceServers = [\r\n        { urls: 'stun:stun.l.google.com:19302' },\r\n      ];\r\n    }\r\n    \r\n    const pc = new RTCPeerConnection(config);\r\n    pcRef.current = pc;\r\n\r\n    // 立即更新标志\r\n    isStartedRef.current = true;\r\n    \r\n    // 重置连接尝试次数\r\n    setConnectionAttempts(0);\r\n    \r\n    // 监听连接状态变化\r\n    pc.addEventListener('connectionstatechange', () => {\r\n      console.log(`WebRTC连接状态变化: ${pc.connectionState}`);\r\n      \r\n      if (pc.connectionState === 'failed') {\r\n        setErrorMessage('WebRTC连接失败');\r\n        \r\n        // 尝试重新连接\r\n        if (connectionAttempts < maxConnectionAttempts) {\r\n          console.log(`尝试重新连接 (${connectionAttempts + 1}/${maxConnectionAttempts})`);\r\n          setConnectionAttempts(connectionAttempts + 1);\r\n          \r\n          // 延迟后重试\r\n          reconnectTimerRef.current = setTimeout(() => {\r\n            if (isStartedRef.current) {\r\n              stop();\r\n              start();\r\n            }\r\n          }, 2000);\r\n        } else {\r\n          alert('连接失败，请检查网络连接或刷新页面');\r\n        }\r\n      } else if (pc.connectionState === 'disconnected') {\r\n        setErrorMessage('WebRTC连接断开，尝试重新连接');\r\n        \r\n        // 延迟后尝试重新连接\r\n        if (!reconnectTimerRef.current) {\r\n          reconnectTimerRef.current = setTimeout(() => {\r\n            if (isStartedRef.current) {\r\n              stop();\r\n              start();\r\n            }\r\n          }, 2000);\r\n        }\r\n      } else if (pc.connectionState === 'connected') {\r\n        setErrorMessage('');\r\n        if (reconnectTimerRef.current) {\r\n          clearTimeout(reconnectTimerRef.current);\r\n          reconnectTimerRef.current = null;\r\n        }\r\n      }\r\n    });\r\n\r\n    pc.addEventListener('track', (evt) => {\r\n      console.log('收到新的媒体轨道:', evt.track.kind, evt.streams[0].id);\r\n      \r\n      if (evt.track.kind === 'video') {\r\n        videoTracksRef.current.push(evt.track);\r\n        console.log(`已存储视频轨道，总数: ${videoTracksRef.current.length}`);\r\n        \r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = evt.streams[0];\r\n          \r\n          videoRef.current.addEventListener('loadedmetadata', () => {\r\n            console.log('RGB视频元数据加载完成，尺寸:', videoRef.current.videoWidth, videoRef.current.videoHeight);\r\n            \r\n            if (videoRef.current.videoWidth > 0 && videoRef.current.videoHeight > 0) {\r\n              isVideoReadyRef.current = true;\r\n              setVideoReady(true);\r\n              \r\n              const canvas = canvasRef.current;\r\n              if (canvas) {\r\n                const ctx = canvas.getContext('2d', { \r\n                  willReadFrequently: true,\r\n                  alpha: true // 确保明确启用Alpha通道\r\n                });\r\n                \r\n                if (!ctx) {\r\n                  console.error('无法获取Canvas 2D上下文');\r\n                  setErrorMessage('无法初始化视频渲染上下文');\r\n                  return;\r\n                }\r\n                \r\n                ctxRef.current = ctx;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n                \r\n                canvas.width = videoRef.current.videoWidth;\r\n                canvas.height = videoRef.current.videoHeight;\r\n                \r\n                console.log('Canvas初始化完成，尺寸:', canvas.width, canvas.height);\r\n                \r\n                // 尝试使用WebCodecs处理视频帧\r\n                if (supportsWebCodecs) {\r\n                  console.log('使用WebCodecs处理视频帧');\r\n                  processVideoFrames(evt.track);\r\n                } else {\r\n                  console.log('WebCodecs不支持，使用Canvas定时绘制方法');\r\n                  processVideoFrame();\r\n                }\r\n              }\r\n            } else {\r\n              console.warn('视频尺寸无效，宽度:', videoRef.current.videoWidth, '高度:', videoRef.current.videoHeight);\r\n            }\r\n          }, { once: true });\r\n          \r\n          videoRef.current.addEventListener('canplay', () => {\r\n            console.log('RGB视频可以播放，readyState:', videoRef.current.readyState);\r\n            \r\n            if (!started) {\r\n              setStarted(true);\r\n            }\r\n            \r\n            if (!supportsWebCodecs && isVideoReadyRef.current && ctxRef.current && !animationFrameIdRef.current) {\r\n              processVideoFrame();\r\n            }\r\n          }, { once: true });\r\n          \r\n          videoRef.current.addEventListener('error', (e) => {\r\n            console.error('RGB视频错误:', e.target.error);\r\n            setErrorMessage(`RGB视频错误: ${e.target.error.message}`);\r\n          });\r\n        }\r\n      } else if (evt.track.kind === 'audio') {\r\n        console.log('收到音频流');\r\n        if (audioRef.current) {\r\n          audioRef.current.srcObject = evt.streams[0];\r\n        }\r\n      }\r\n    });\r\n\r\n    Promise.resolve().then(() => {\r\n      setStarted(true);\r\n      setErrorMessage('');\r\n      negotiate();\r\n      setZoomWidth(initialWidth);\r\n    });\r\n  }\r\n\r\n  function stop() {\r\n    console.log('停止WebRTC连接');\r\n    if (!isStartedRef.current) return;\r\n\r\n    if (animationFrameIdRef.current) {\r\n      cancelAnimationFrame(animationFrameIdRef.current);\r\n      animationFrameIdRef.current = null;\r\n    }\r\n    \r\n    if (reconnectTimerRef.current) {\r\n      clearTimeout(reconnectTimerRef.current);\r\n      reconnectTimerRef.current = null;\r\n    }\r\n\r\n    isStartedRef.current = false;\r\n    isVideoReadyRef.current = false;\r\n    \r\n    setStarted(false);\r\n    setVideoReady(false);\r\n    setAlphaReady(false);\r\n    setProcessingMode('rgba');\r\n    setErrorMessage('');\r\n    setDebugInfo('');\r\n    setResourceCheckCount(0);\r\n\r\n    if (videoRef.current?.srcObject) {\r\n      videoRef.current.srcObject.getTracks().forEach(track => {\r\n        track.stop();\r\n      });\r\n      videoRef.current.srcObject = null;\r\n    }\r\n    if (audioRef.current?.srcObject) {\r\n      audioRef.current.srcObject.getTracks().forEach(track => {\r\n        track.stop();\r\n      });\r\n      audioRef.current.srcObject = null;\r\n    }\r\n\r\n    if (!keepConnection) {\r\n      setTimeout(() => {\r\n        if (pcRef.current) {\r\n          pcRef.current.close();\r\n          pcRef.current = null;\r\n        }\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  function zoomIn() {\r\n    setZoomWidth(w => w + zoomStep);\r\n  }\r\n  function zoomOut() {\r\n    setZoomWidth(w => (w - zoomStep > 0 ? w - zoomStep : w));\r\n  }\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  const sendTextMessage = async () => {\r\n    if (!message.trim()) return;\r\n    try {\r\n      console.log('发送文本消息:', message);\r\n      const response = await fetch('https://192.168.168.77:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text: message }),\r\n      });\r\n      if (!response.ok) throw new Error('状态码: ' + response.status);\r\n      console.log('文本发送成功');\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  const sendMultiModal = async () => {\r\n    if (!imageFile) return;\r\n    try {\r\n      console.log('发送多模态消息，包含图片');\r\n      const reader = new FileReader();\r\n      reader.onloadend = async () => {\r\n        const response = await fetch('https://192.168.1.70:6010/multimodal', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ text: message.trim(), image: reader.result }),\r\n        });\r\n        if (!response.ok) throw new Error('状态码: ' + response.status);\r\n        console.log('多模态发送成功');\r\n        setImageFile(null);\r\n        setMessage('');\r\n      };\r\n      reader.readAsDataURL(imageFile);\r\n    } catch (error) {\r\n      console.error('多模态发送失败：', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (imageFile) {\r\n      await sendMultiModal();\r\n    } else {\r\n      await sendTextMessage();\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setImageFile(file || null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (animationFrameIdRef.current) {\r\n        cancelAnimationFrame(animationFrameIdRef.current);\r\n      }\r\n      \r\n      if (reconnectTimerRef.current) {\r\n        clearTimeout(reconnectTimerRef.current);\r\n      }\r\n      \r\n      stop();\r\n    };\r\n  }, []);\r\n\r\n  const frostedGlassBtnStyle = {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    border: '1px solid rgba(255, 255, 255, 0.3)',\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    padding: '8px 16px',\r\n    cursor: 'pointer',\r\n    borderRadius: 4,\r\n    outline: 'none',\r\n    transition: 'all 0.3s',\r\n    fontSize: 14,\r\n    backdropFilter: 'blur(10px)',\r\n    WebkitBackdropFilter: 'blur(10px)',\r\n    boxShadow: '0 4px 10px rgba(255, 255, 255, 0.15)',\r\n  };\r\n\r\n  const disabledBtnStyle = {\r\n    ...frostedGlassBtnStyle,\r\n    opacity: 0.4,\r\n    cursor: 'not-allowed',\r\n    boxShadow: 'none',\r\n  };\r\n\r\n  const getBtnHoverStyle = (disabled) => {\r\n    if (disabled) return {};\r\n    return {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n      boxShadow: '0 6px 20px rgba(255, 255, 255, 0.3)',\r\n      transform: 'scale(1.05)',\r\n    };\r\n  };\r\n\r\n  const [startBtnHover, setStartBtnHover] = useState(false);\r\n  const [stopBtnHover, setStopBtnHover] = useState(false);\r\n  const [zoomInHover, setZoomInHover] = useState(false);\r\n  const [zoomOutHover, setZoomOutHover] = useState(false);\r\n  const [interruptBtnHover, setInterruptBtnHover] = useState(false);\r\n\r\n  const handleInterruptClick = async () => {\r\n    try {\r\n      console.log('发送打断请求');\r\n      const resp = await fetch('http://192.168.168.77:6010/api/interrupt_speaking', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      if (!resp.ok) throw new Error('状态码: ' + resp.status);\r\n      console.log('打断请求发送成功');\r\n    } catch (e) {\r\n      console.error('打断接口异常:', e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} style={{ maxWidth: 1280, position: 'relative', minHeight: '100vh' }}>\r\n      <div className=\"option\" style={{ marginBottom: 8 }}>\r\n        <input\r\n          id=\"use-stun\"\r\n          type=\"checkbox\"\r\n          checked={useStun}\r\n          onChange={(e) => setUseStun(e.target.checked)}\r\n          style={{ accentColor: 'white' }}\r\n          disabled={started}\r\n          hidden\r\n        />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 8 }}>\r\n        <button\r\n          onClick={zoomIn}\r\n          style={{\r\n            ...frostedGlassBtnStyle,\r\n            marginRight: 8,\r\n            ...(zoomInHover ? getBtnHoverStyle(false) : {})\r\n          }}\r\n          onMouseEnter={() => setZoomInHover(true)}\r\n          onMouseLeave={() => setZoomInHover(false)}\r\n          type=\"button\"\r\n        >\r\n          放大\r\n        </button>\r\n        <button\r\n          onClick={zoomOut}\r\n          style={{\r\n            ...frostedGlassBtnStyle,\r\n            ...(zoomOutHover ? getBtnHoverStyle(false) : {})\r\n          }}\r\n          onMouseEnter={() => setZoomOutHover(true)}\r\n          onMouseLeave={() => setZoomOutHover(false)}\r\n          type=\"button\"\r\n        >\r\n          缩小\r\n        </button>\r\n      </div>\r\n\r\n      <button\r\n        onClick={start}\r\n        disabled={isStartedRef.current}\r\n        style={{\r\n          ...(isStartedRef.current ? disabledBtnStyle : frostedGlassBtnStyle),\r\n          ...(startBtnHover && !isStartedRef.current ? getBtnHoverStyle(false) : {})\r\n        }}\r\n        onMouseEnter={() => setStartBtnHover(true)}\r\n        onMouseLeave={() => setStartBtnHover(false)}\r\n      >\r\n        启动\r\n      </button>\r\n      <button\r\n        onClick={stop}\r\n        disabled={!isStartedRef.current}\r\n        style={{\r\n          ...(!isStartedRef.current ? disabledBtnStyle : frostedGlassBtnStyle),\r\n          ...(stopBtnHover && isStartedRef.current ? getBtnHoverStyle(false) : {})\r\n        }}\r\n        onMouseEnter={() => setStopBtnHover(true)}\r\n        onMouseLeave={() => setStopBtnHover(false)}\r\n      >\r\n        停止\r\n      </button>\r\n\r\n      {/* 显示当前状态和错误信息 */}\r\n      {errorMessage && (\r\n        <div style={{ color: 'red', margin: '10px 0', padding: '10px', background: 'rgba(0,0,0,0.5)', borderRadius: 4 }}>\r\n          <strong>错误:</strong> {errorMessage}\r\n        </div>\r\n      )}\r\n      \r\n      <div style={{ color: 'white', margin: '10px 0' }}>\r\n        <strong>状态:</strong> {started ? '已连接' : '未连接'} | \r\n        <strong>模式:</strong> {processingMode} | \r\n        <strong>视频:</strong> {videoReady ? '就绪' : '加载中'} | \r\n        <strong>Alpha:</strong> {alphaReady ? '就绪' : '未检测到'} |\r\n        <strong>WebCodecs:</strong> {supportsWebCodecs ? '支持' : '不支持'} |\r\n        <strong>连接尝试:</strong> {connectionAttempts}/{maxConnectionAttempts}\r\n      </div>\r\n      \r\n      {/* 显示调试信息 */}\r\n      {debugInfo && (\r\n        <div style={{ color: 'yellow', margin: '10px 0', padding: '10px', background: 'rgba(0,0,0,0.5)', borderRadius: 4, whiteSpace: 'pre-wrap' }}>\r\n          <strong>调试信息:</strong> {debugInfo}\r\n        </div>\r\n      )}\r\n\r\n      {renderVideo && (\r\n        <div id=\"media\" style={{ marginTop: 20 }}>\r\n          <h2 style={{ color: 'white' }}>管家</h2>\r\n\r\n          <audio ref={audioRef} autoPlay />\r\n          \r\n          {/* 原视频标签（仅用于调试，设置为透明） */}\r\n          <video\r\n            ref={videoRef}\r\n            style={{\r\n              display: 'block',\r\n              width: 100,\r\n              height: 'auto',\r\n              position: 'absolute',\r\n              top: 10,\r\n              right: 10,\r\n              zIndex: 100,\r\n              border: '2px solid red',\r\n              opacity: 0.3, // 设置为部分透明以便观察\r\n            }}\r\n            autoPlay\r\n            playsInline\r\n          />\r\n          \r\n          {/* Canvas（主显示区域） */}\r\n          <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n              width: zoomWidth,\r\n              height: (zoomWidth * initialHeight) / initialWidth,\r\n              display: 'block',\r\n              position: 'relative',\r\n              zIndex: 10,\r\n              border: '2px solid white',\r\n              backgroundColor: 'transparent', // 确保Canvas背景透明\r\n              mixBlendMode: 'normal', // 确保混合模式正确\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: chatPos.left,\r\n          top: chatPos.top,\r\n          width: 320,\r\n          borderRadius: 6,\r\n          padding: 12,\r\n          color: 'white',\r\n          userSelect: 'none',\r\n          cursor: draggingRef.current ? 'grabbing' : 'grab',\r\n          zIndex: 9999,\r\n          backdropFilter: 'blur(10px)',\r\n          backgroundColor: 'rgba(0,0,0,0.5)',\r\n        }}\r\n        onMouseDown={onDragStart}\r\n        onMouseMove={onDragMove}\r\n        onMouseUp={onDragEnd}\r\n        onMouseLeave={onDragEnd}\r\n        onTouchStart={onDragStart}\r\n        onTouchMove={onDragMove}\r\n        onTouchEnd={onDragEnd}\r\n      >\r\n        <form\r\n          id=\"echo-form\"\r\n          onSubmit={handleSubmit}\r\n          style={{ display: 'flex', flexDirection: 'column', gap: 8 }}\r\n        >\r\n          <textarea\r\n            ref={textareaRef}\r\n            id=\"message\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            rows={3}\r\n            style={{\r\n              width: '100%',\r\n              resize: 'vertical',\r\n              padding: 8,\r\n              borderRadius: 8,\r\n              border: '1px solid rgba(255,255,255,0.3)',\r\n              backgroundColor: 'rgba(255,255,255,0.1)',\r\n              color: 'white',\r\n              outline: 'none',\r\n            }}\r\n            placeholder=\"请输入文本...\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          <div style={{ display: 'flex', justifyContent: 'flex-end', gap: 8 }}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleInterruptClick}\r\n              style={{\r\n                ...frostedGlassBtnStyle,\r\n                padding: '6px 16px',\r\n                fontSize: 14,\r\n              }}\r\n              onMouseEnter={() => setInterruptBtnHover(true)}\r\n              onMouseLeave={() => setInterruptBtnHover(false)}\r\n            >\r\n              打断说话\r\n            </button>\r\n            <label\r\n              htmlFor=\"image-upload\"\r\n              style={{\r\n                ...frostedGlassBtnStyle,\r\n                padding: '6px 12px',\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              上传图片\r\n            </label>\r\n            <input\r\n              id=\"image-upload\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: 'none' }}\r\n              onChange={handleImageChange}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              style={{ ...frostedGlassBtnStyle, padding: '6px 16px' }}\r\n            >\r\n              发送\r\n            </button>\r\n          </div>\r\n          {imageFile && (\r\n            <div style={{ margin: '10px 0', padding: 8, border: '1px solid rgba(255,255,255,0.3)', borderRadius: 4, backgroundColor: 'rgba(255,255,255,0.1)' }}>\r\n              <p style={{ margin: '0 0 8px 0' }}>已选择图片: {imageFile.name}</p>\r\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setImageFile(null)}\r\n                  style={{\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.3)',\r\n                    border: '1px solid rgba(255, 0, 0, 0.5)',\r\n                    color: 'white',\r\n                    padding: '4px 8px',\r\n                    cursor: 'pointer',\r\n                    borderRadius: 4,\r\n                    outline: 'none',\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  移除\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}