{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\CameraControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport cameraSwitchIcon from '../assets/icons/camera-switch.png';\nimport styles from './CameraControl.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CameraControl() {\n  _s();\n  const videoRef = useRef(null);\n  const floatingContainerRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [selectedDeviceId, setSelectedDeviceId] = useState(null);\n  const [isCameraVisible, setIsCameraVisible] = useState(true);\n\n  // 点击计数和定时器，用于单击切换摄像头，双击显示隐藏摄像头\n  const clickCountRef = useRef(0);\n  const clickTimerRef = useRef(null);\n\n  // 拖动状态和偏移\n  const isDraggingRef = useRef(false);\n  const offsetXRef = useRef(0);\n  const offsetYRef = useRef(0);\n\n  // 内外网 SSE 地址（备用，未用）\n  const internalSseUrl = 'https://192.168.1.70:5000/capture_events';\n  const externalSseUrl = 'https://101.50.118.42:5000/capture_events';\n\n  // 当前流和摄像头 deviceId（使用 useRef 避免闭包问题）\n  const currentStreamRef = useRef(null);\n  const currentCameraDeviceIdRef = useRef(null);\n\n  // 1. 获取摄像头设备列表\n  async function getCameraDevices() {\n    try {\n      const allDevices = await navigator.mediaDevices.enumerateDevices();\n      const videoDevices = allDevices.filter(d => d.kind === 'videoinput');\n      return videoDevices;\n    } catch (error) {\n      console.error('无法获取摄像头设备列表:', error);\n      return [];\n    }\n  }\n\n  // 2. 初始化摄像头，启动指定 deviceId 的摄像头\n  async function initializeCamera(deviceId) {\n    stopCamera();\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          deviceId: deviceId ? {\n            exact: deviceId\n          } : undefined\n        },\n        audio: false\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.play().catch(() => {\n          // play 失败的捕获，防止报错\n        });\n      }\n      currentStreamRef.current = stream;\n      currentCameraDeviceIdRef.current = deviceId;\n      setStream(stream);\n      setSelectedDeviceId(deviceId);\n      return stream;\n    } catch (error) {\n      console.error('摄像头初始化失败:', error);\n      alert('摄像头初始化失败: ' + error.message);\n      throw error;\n    }\n  }\n\n  // 3. 停止摄像头\n  function stopCamera() {\n    if (currentStreamRef.current) {\n      currentStreamRef.current.getTracks().forEach(track => track.stop());\n      currentStreamRef.current = null;\n      setStream(null);\n    }\n  }\n\n  // 4. 切换摄像头（单击）\n  async function switchCamera() {\n    const videoDevices = await getCameraDevices();\n    if (videoDevices.length < 2) {\n      console.log('设备仅支持一个摄像头，无法切换');\n      return;\n    }\n    // 找到下一个摄像头 deviceId\n    let nextDeviceId = null;\n    for (const device of videoDevices) {\n      if (device.deviceId !== currentCameraDeviceIdRef.current) {\n        nextDeviceId = device.deviceId;\n        break;\n      }\n    }\n    if (!nextDeviceId) {\n      // 如果没找到其他，切回第一个\n      nextDeviceId = videoDevices[0].deviceId;\n    }\n    try {\n      await initializeCamera(nextDeviceId);\n      console.log('摄像头已切换:', nextDeviceId);\n    } catch (e) {\n      console.error('切换摄像头失败:', e);\n    }\n  }\n\n  // 5. 显示/隐藏摄像头（双击）\n  function toggleCameraVisibility() {\n    if (!videoRef.current) return;\n    if (isCameraVisible) {\n      videoRef.current.style.display = 'none';\n    } else {\n      videoRef.current.style.display = 'block';\n    }\n    setIsCameraVisible(!isCameraVisible);\n  }\n\n  // 6. 处理按钮点击事件，单击切换摄像头，双击显示隐藏\n  function handleButtonClick() {\n    clickCountRef.current += 1;\n    if (clickCountRef.current === 1) {\n      clickTimerRef.current = setTimeout(() => {\n        // 单击逻辑：切换摄像头\n        switchCamera();\n        clickCountRef.current = 0;\n      }, 300);\n    } else if (clickCountRef.current === 2) {\n      // 双击逻辑：显示/隐藏摄像头\n      clearTimeout(clickTimerRef.current);\n      toggleCameraVisibility();\n      clickCountRef.current = 0;\n    }\n  }\n\n  // 7. 页面初始化，获取设备列表，初始化第一个摄像头\n  useEffect(() => {\n    async function initializePage() {\n      const videoDevices = await getCameraDevices();\n      setDevices(videoDevices);\n      if (videoDevices.length > 0) {\n        try {\n          await initializeCamera(videoDevices[0].deviceId);\n        } catch {\n          // 初始化失败已经有提示\n        }\n      } else {\n        console.log('未找到摄像头设备');\n      }\n    }\n    initializePage();\n\n    // Cleanup on unmount\n    return () => {\n      stopCamera();\n      // 移除事件监听（后面绑定了再移除）\n      if (floatingContainerRef.current) {\n        floatingContainerRef.current.removeEventListener('mousedown', onMouseDown);\n        floatingContainerRef.current.removeEventListener('touchstart', onTouchStart);\n      }\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    };\n  }, []);\n\n  // 8. 绑定点击事件给切换摄像头按钮\n  useEffect(() => {\n    if (!floatingContainerRef.current) return;\n    const btn = document.getElementById('toggle-switch-camera');\n    if (btn) {\n      btn.addEventListener('click', handleButtonClick);\n    }\n    return () => {\n      if (btn) {\n        btn.removeEventListener('click', handleButtonClick);\n      }\n    };\n  }, []);\n\n  // 9. 悬浮拖动功能相关函数\n  const onMouseDown = e => {\n    if (!floatingContainerRef.current) return;\n    isDraggingRef.current = true;\n    offsetXRef.current = e.clientX - floatingContainerRef.current.offsetLeft;\n    offsetYRef.current = e.clientY - floatingContainerRef.current.offsetTop;\n    floatingContainerRef.current.style.cursor = 'grabbing';\n    e.preventDefault();\n  };\n  const onMouseMove = e => {\n    if (isDraggingRef.current && floatingContainerRef.current) {\n      floatingContainerRef.current.style.left = `${e.clientX - offsetXRef.current}px`;\n      floatingContainerRef.current.style.top = `${e.clientY - offsetYRef.current}px`;\n    }\n  };\n  const onMouseUp = () => {\n    if (floatingContainerRef.current) {\n      isDraggingRef.current = false;\n      floatingContainerRef.current.style.cursor = 'grab';\n    }\n  };\n  const onTouchStart = e => {\n    if (!floatingContainerRef.current || e.touches.length === 0) return;\n    isDraggingRef.current = true;\n    const touch = e.touches[0];\n    offsetXRef.current = touch.clientX - floatingContainerRef.current.offsetLeft;\n    offsetYRef.current = touch.clientY - floatingContainerRef.current.offsetTop;\n    floatingContainerRef.current.style.cursor = 'grabbing';\n  };\n  const onTouchMove = e => {\n    if (isDraggingRef.current && floatingContainerRef.current && e.touches.length > 0) {\n      const touch = e.touches[0];\n      floatingContainerRef.current.style.left = `${touch.clientX - offsetXRef.current}px`;\n      floatingContainerRef.current.style.top = `${touch.clientY - offsetYRef.current}px`;\n    }\n  };\n  const onTouchEnd = () => {\n    if (floatingContainerRef.current) {\n      isDraggingRef.current = false;\n      floatingContainerRef.current.style.cursor = 'grab';\n    }\n  };\n\n  // 10. 绑定拖动事件\n  useEffect(() => {\n    if (!floatingContainerRef.current) return;\n    const container = floatingContainerRef.current;\n    container.style.position = 'fixed'; // 固定定位\n    container.style.left = '10px'; // 初始位置\n    container.style.top = '10px';\n    container.style.cursor = 'grab';\n    container.style.zIndex = 10000;\n    container.style.width = '160px'; // 容器大小，视频+按钮布局用\n\n    container.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    container.addEventListener('touchstart', onTouchStart);\n    document.addEventListener('touchmove', onTouchMove);\n    document.addEventListener('touchend', onTouchEnd);\n    return () => {\n      container.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      container.removeEventListener('touchstart', onTouchStart);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* 圆形摄像头视频框 */\n        #video {\n          border-radius: 50%;\n          object-fit: cover;\n          width: 150px;\n          height: 150px;\n          background-color: black;\n          display: block;\n          user-select: none;\n          pointer-events: none;\n        }\n        /* 容器内部布局，保证按钮在视频下面居中 */\n        #floating-container {\n          user-select: none;\n          background: transparent;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 8px;\n          padding: 4px;\n          box-sizing: border-box;\n        }\n        /* 切换摄像头按钮样式 */\n        #toggle-switch-camera {\n          cursor: pointer;\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          border: 1px solid #00e5ff;\n          background-color: transparent;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          transition: background-color 0.3s, border-color 0.3s;\n        }\n        #toggle-switch-camera:hover {\n          background-color: rgba(0, 229, 255, 0.15);\n          border-color: #00e5ff;\n        }\n        #toggle-switch-camera img {\n          width: 20px;\n          height: 20px;\n          pointer-events: none;\n          user-select: none;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"floating-container\",\n      ref: floatingContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"video\",\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true\n        // 不允许拖动视频等默认行为\n        ,\n        onDragStart: e => e.preventDefault()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"toggle-switch-camera\",\n        type: \"button\",\n        \"aria-label\": \"\\u5207\\u6362\\u6444\\u50CF\\u5934\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cameraSwitchIcon,\n          alt: \"\\u5207\\u6362\\u6444\\u50CF\\u5934\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CameraControl, \"jnoQKCt1TDw5WI3ZziYDMpO6RYM=\");\n_c = CameraControl;\nvar _c;\n$RefreshReg$(_c, \"CameraControl\");","map":{"version":3,"names":["React","useEffect","useState","useRef","cameraSwitchIcon","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraControl","_s","videoRef","floatingContainerRef","stream","setStream","devices","setDevices","selectedDeviceId","setSelectedDeviceId","isCameraVisible","setIsCameraVisible","clickCountRef","clickTimerRef","isDraggingRef","offsetXRef","offsetYRef","internalSseUrl","externalSseUrl","currentStreamRef","currentCameraDeviceIdRef","getCameraDevices","allDevices","navigator","mediaDevices","enumerateDevices","videoDevices","filter","d","kind","error","console","initializeCamera","deviceId","stopCamera","getUserMedia","video","exact","undefined","audio","current","srcObject","play","catch","alert","message","getTracks","forEach","track","stop","switchCamera","length","log","nextDeviceId","device","e","toggleCameraVisibility","style","display","handleButtonClick","setTimeout","clearTimeout","initializePage","removeEventListener","onMouseDown","onTouchStart","document","onMouseMove","onMouseUp","onTouchMove","onTouchEnd","btn","getElementById","addEventListener","clientX","offsetLeft","clientY","offsetTop","cursor","preventDefault","left","top","touches","touch","container","position","zIndex","width","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","autoPlay","playsInline","muted","onDragStart","type","src","alt","draggable","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/CameraControl.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport cameraSwitchIcon from '../assets/icons/camera-switch.png';\r\nimport styles from './CameraControl.module.css';\r\n\r\nexport default function CameraControl() {\r\n  const videoRef = useRef(null);\r\n  const floatingContainerRef = useRef(null);\r\n  const [stream, setStream] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDeviceId, setSelectedDeviceId] = useState(null);\r\n  const [isCameraVisible, setIsCameraVisible] = useState(true);\r\n\r\n  // 点击计数和定时器，用于单击切换摄像头，双击显示隐藏摄像头\r\n  const clickCountRef = useRef(0);\r\n  const clickTimerRef = useRef(null);\r\n\r\n  // 拖动状态和偏移\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  // 内外网 SSE 地址（备用，未用）\r\n  const internalSseUrl = 'https://192.168.1.70:5000/capture_events';\r\n  const externalSseUrl = 'https://101.50.118.42:5000/capture_events';\r\n\r\n  // 当前流和摄像头 deviceId（使用 useRef 避免闭包问题）\r\n  const currentStreamRef = useRef(null);\r\n  const currentCameraDeviceIdRef = useRef(null);\r\n\r\n  // 1. 获取摄像头设备列表\r\n  async function getCameraDevices() {\r\n    try {\r\n      const allDevices = await navigator.mediaDevices.enumerateDevices();\r\n      const videoDevices = allDevices.filter((d) => d.kind === 'videoinput');\r\n      return videoDevices;\r\n    } catch (error) {\r\n      console.error('无法获取摄像头设备列表:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // 2. 初始化摄像头，启动指定 deviceId 的摄像头\r\n  async function initializeCamera(deviceId) {\r\n    stopCamera();\r\n\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { deviceId: deviceId ? { exact: deviceId } : undefined },\r\n        audio: false,\r\n      });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play().catch(() => {\r\n          // play 失败的捕获，防止报错\r\n        });\r\n      }\r\n      currentStreamRef.current = stream;\r\n      currentCameraDeviceIdRef.current = deviceId;\r\n      setStream(stream);\r\n      setSelectedDeviceId(deviceId);\r\n      return stream;\r\n    } catch (error) {\r\n      console.error('摄像头初始化失败:', error);\r\n      alert('摄像头初始化失败: ' + error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // 3. 停止摄像头\r\n  function stopCamera() {\r\n    if (currentStreamRef.current) {\r\n      currentStreamRef.current.getTracks().forEach((track) => track.stop());\r\n      currentStreamRef.current = null;\r\n      setStream(null);\r\n    }\r\n  }\r\n\r\n  // 4. 切换摄像头（单击）\r\n  async function switchCamera() {\r\n    const videoDevices = await getCameraDevices();\r\n    if (videoDevices.length < 2) {\r\n      console.log('设备仅支持一个摄像头，无法切换');\r\n      return;\r\n    }\r\n    // 找到下一个摄像头 deviceId\r\n    let nextDeviceId = null;\r\n    for (const device of videoDevices) {\r\n      if (device.deviceId !== currentCameraDeviceIdRef.current) {\r\n        nextDeviceId = device.deviceId;\r\n        break;\r\n      }\r\n    }\r\n    if (!nextDeviceId) {\r\n      // 如果没找到其他，切回第一个\r\n      nextDeviceId = videoDevices[0].deviceId;\r\n    }\r\n    try {\r\n      await initializeCamera(nextDeviceId);\r\n      console.log('摄像头已切换:', nextDeviceId);\r\n    } catch (e) {\r\n      console.error('切换摄像头失败:', e);\r\n    }\r\n  }\r\n\r\n  // 5. 显示/隐藏摄像头（双击）\r\n  function toggleCameraVisibility() {\r\n    if (!videoRef.current) return;\r\n    if (isCameraVisible) {\r\n      videoRef.current.style.display = 'none';\r\n    } else {\r\n      videoRef.current.style.display = 'block';\r\n    }\r\n    setIsCameraVisible(!isCameraVisible);\r\n  }\r\n\r\n  // 6. 处理按钮点击事件，单击切换摄像头，双击显示隐藏\r\n  function handleButtonClick() {\r\n    clickCountRef.current += 1;\r\n    if (clickCountRef.current === 1) {\r\n      clickTimerRef.current = setTimeout(() => {\r\n        // 单击逻辑：切换摄像头\r\n        switchCamera();\r\n        clickCountRef.current = 0;\r\n      }, 300);\r\n    } else if (clickCountRef.current === 2) {\r\n      // 双击逻辑：显示/隐藏摄像头\r\n      clearTimeout(clickTimerRef.current);\r\n      toggleCameraVisibility();\r\n      clickCountRef.current = 0;\r\n    }\r\n  }\r\n\r\n  // 7. 页面初始化，获取设备列表，初始化第一个摄像头\r\n  useEffect(() => {\r\n    async function initializePage() {\r\n      const videoDevices = await getCameraDevices();\r\n      setDevices(videoDevices);\r\n      if (videoDevices.length > 0) {\r\n        try {\r\n          await initializeCamera(videoDevices[0].deviceId);\r\n        } catch {\r\n          // 初始化失败已经有提示\r\n        }\r\n      } else {\r\n        console.log('未找到摄像头设备');\r\n      }\r\n    }\r\n    initializePage();\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      stopCamera();\r\n      // 移除事件监听（后面绑定了再移除）\r\n      if (floatingContainerRef.current) {\r\n        floatingContainerRef.current.removeEventListener('mousedown', onMouseDown);\r\n        floatingContainerRef.current.removeEventListener('touchstart', onTouchStart);\r\n      }\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  // 8. 绑定点击事件给切换摄像头按钮\r\n  useEffect(() => {\r\n    if (!floatingContainerRef.current) return;\r\n    const btn = document.getElementById('toggle-switch-camera');\r\n    if (btn) {\r\n      btn.addEventListener('click', handleButtonClick);\r\n    }\r\n    return () => {\r\n      if (btn) {\r\n        btn.removeEventListener('click', handleButtonClick);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 9. 悬浮拖动功能相关函数\r\n  const onMouseDown = (e) => {\r\n    if (!floatingContainerRef.current) return;\r\n    isDraggingRef.current = true;\r\n    offsetXRef.current = e.clientX - floatingContainerRef.current.offsetLeft;\r\n    offsetYRef.current = e.clientY - floatingContainerRef.current.offsetTop;\r\n    floatingContainerRef.current.style.cursor = 'grabbing';\r\n    e.preventDefault();\r\n  };\r\n  const onMouseMove = (e) => {\r\n    if (isDraggingRef.current && floatingContainerRef.current) {\r\n      floatingContainerRef.current.style.left = `${e.clientX - offsetXRef.current}px`;\r\n      floatingContainerRef.current.style.top = `${e.clientY - offsetYRef.current}px`;\r\n    }\r\n  };\r\n  const onMouseUp = () => {\r\n    if (floatingContainerRef.current) {\r\n      isDraggingRef.current = false;\r\n      floatingContainerRef.current.style.cursor = 'grab';\r\n    }\r\n  };\r\n  const onTouchStart = (e) => {\r\n    if (!floatingContainerRef.current || e.touches.length === 0) return;\r\n    isDraggingRef.current = true;\r\n    const touch = e.touches[0];\r\n    offsetXRef.current = touch.clientX - floatingContainerRef.current.offsetLeft;\r\n    offsetYRef.current = touch.clientY - floatingContainerRef.current.offsetTop;\r\n    floatingContainerRef.current.style.cursor = 'grabbing';\r\n  };\r\n  const onTouchMove = (e) => {\r\n    if (isDraggingRef.current && floatingContainerRef.current && e.touches.length > 0) {\r\n      const touch = e.touches[0];\r\n      floatingContainerRef.current.style.left = `${touch.clientX - offsetXRef.current}px`;\r\n      floatingContainerRef.current.style.top = `${touch.clientY - offsetYRef.current}px`;\r\n    }\r\n  };\r\n  const onTouchEnd = () => {\r\n    if (floatingContainerRef.current) {\r\n      isDraggingRef.current = false;\r\n      floatingContainerRef.current.style.cursor = 'grab';\r\n    }\r\n  };\r\n\r\n  // 10. 绑定拖动事件\r\n  useEffect(() => {\r\n    if (!floatingContainerRef.current) return;\r\n    const container = floatingContainerRef.current;\r\n    container.style.position = 'fixed'; // 固定定位\r\n    container.style.left = '10px'; // 初始位置\r\n    container.style.top = '10px';\r\n    container.style.cursor = 'grab';\r\n    container.style.zIndex = 10000;\r\n    container.style.width = '160px'; // 容器大小，视频+按钮布局用\r\n\r\n    container.addEventListener('mousedown', onMouseDown);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    container.addEventListener('touchstart', onTouchStart);\r\n    document.addEventListener('touchmove', onTouchMove);\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    return () => {\r\n      container.removeEventListener('mousedown', onMouseDown);\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      container.removeEventListener('touchstart', onTouchStart);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        /* 圆形摄像头视频框 */\r\n        #video {\r\n          border-radius: 50%;\r\n          object-fit: cover;\r\n          width: 150px;\r\n          height: 150px;\r\n          background-color: black;\r\n          display: block;\r\n          user-select: none;\r\n          pointer-events: none;\r\n        }\r\n        /* 容器内部布局，保证按钮在视频下面居中 */\r\n        #floating-container {\r\n          user-select: none;\r\n          background: transparent;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          gap: 8px;\r\n          padding: 4px;\r\n          box-sizing: border-box;\r\n        }\r\n        /* 切换摄像头按钮样式 */\r\n        #toggle-switch-camera {\r\n          cursor: pointer;\r\n          width: 36px;\r\n          height: 36px;\r\n          border-radius: 50%;\r\n          border: 1px solid #00e5ff;\r\n          background-color: transparent;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          transition: background-color 0.3s, border-color 0.3s;\r\n        }\r\n        #toggle-switch-camera:hover {\r\n          background-color: rgba(0, 229, 255, 0.15);\r\n          border-color: #00e5ff;\r\n        }\r\n        #toggle-switch-camera img {\r\n          width: 20px;\r\n          height: 20px;\r\n          pointer-events: none;\r\n          user-select: none;\r\n        }\r\n      `}</style>\r\n\r\n      <div id=\"floating-container\" ref={floatingContainerRef}>\r\n        <video\r\n          id=\"video\"\r\n          ref={videoRef}\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n          // 不允许拖动视频等默认行为\r\n          onDragStart={(e) => e.preventDefault()}\r\n        />\r\n        <button id=\"toggle-switch-camera\" type=\"button\" aria-label=\"切换摄像头\">\r\n          <img src={cameraSwitchIcon} alt=\"切换摄像头\" draggable={false} />\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}