{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\AudioTranscriber.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\nimport LiquidGlass from 'liquid-glass-react'; // 新增导入液态玻璃组件\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AudioTranscriber() {\n  _s();\n  // 从全局录音上下文中取状态和操作\n  const {\n    isRecording,\n    transcription,\n    lang,\n    speakerVerification,\n    setLang,\n    setSpeakerVerification,\n    startRecording,\n    stopRecording,\n    setTranscription\n  } = useRecorderContext();\n\n  // 拖拽相关引用，仅用于麦克风按钮\n  const micButtonRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const offsetXRef = useRef(0);\n  const offsetYRef = useRef(0);\n\n  // localStorage 保存位置的 key\n  const storageKey = 'audioTranscriberMicButtonPosition';\n\n  // 新增声纹识别录音状态和上传状态（保持本组件私有状态）\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\n  const speakerRecorderRef = useRef(null);\n  const speakerAudioChunksRef = useRef([]);\n\n  /**\r\n   * 发送文本消息到 LLM 服务\r\n   * @param {string} text - 要发送的文本\r\n   */\n  const sendTextMessage = async text => {\n    if (!text.trim()) return;\n    try {\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('网络响应失败，状态码: ' + response.status);\n      }\n      const data = await response.json();\n      console.log('文本发送成功，服务器返回：', data);\n    } catch (error) {\n      console.error('文本发送失败：', error);\n    }\n  };\n\n  // 组件卸载时清理资源\n  useEffect(() => {\n    return () => {\n      stopRecording();\n      stopSpeakerRecording();\n    };\n  }, []); // 这里改成空依赖数组，避免多次调用\n\n  // 监听语言和声纹识别开关的变化，保存状态到 localStorage，确保切换页时记忆选择\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberLang', lang);\n    } catch {}\n  }, [lang]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString());\n    } catch {}\n  }, [speakerVerification]);\n\n  /**\r\n   * 新增：开始录制2秒音频用于声纹识别\r\n   */\n  function startSpeakerRecording() {\n    if (isSpeakerRecording) return;\n    setSpeakerUploadStatus('请求麦克风权限...');\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      setSpeakerUploadStatus('开始录音2秒...');\n      speakerAudioChunksRef.current = [];\n      const options = {\n        mimeType: 'audio/wav'\n      }; // 一些浏览器不支持wav mimeType，下面用默认就好\n      let mediaRecorder;\n      try {\n        mediaRecorder = new MediaRecorder(stream, options);\n      } catch (e) {\n        // 失败则不传mimeType，使用默认格式\n        mediaRecorder = new MediaRecorder(stream);\n      }\n      speakerRecorderRef.current = mediaRecorder;\n      mediaRecorder.ondataavailable = event => {\n        if (event.data && event.data.size > 0) {\n          speakerAudioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = async () => {\n        setSpeakerUploadStatus('录音结束，准备上传...');\n        const blob = new Blob(speakerAudioChunksRef.current, {\n          type: 'audio/wav'\n        });\n\n        // 发送上传请求（请修改URL为后端实际接口）\n        try {\n          const formData = new FormData();\n          formData.append('file', blob, 'speaker.wav');\n\n          // 这里示例用POST到服务器上传接口，路径请根据后端实际修改\n          const uploadUrl = 'http://192.168.168.77:6007/api/uploadSpeaker';\n          const res = await fetch(uploadUrl, {\n            method: 'POST',\n            body: formData\n          });\n          if (!res.ok) {\n            throw new Error(`上传失败，状态码: ${res.status}`);\n          }\n          const result = await res.json();\n          setSpeakerUploadStatus('上传成功');\n          console.log('上传成功，服务器返回：', result);\n        } catch (err) {\n          setSpeakerUploadStatus('上传失败: ' + err.message);\n          console.error('上传失败', err);\n        }\n        // 停止所有音频轨道释放麦克风\n        stream.getTracks().forEach(track => track.stop());\n        setTimeout(() => setSpeakerUploadStatus(''), 3000);\n        setIsSpeakerRecording(false);\n      };\n      mediaRecorder.start();\n      setIsSpeakerRecording(true);\n\n      // 2秒后停止录音\n      setTimeout(() => {\n        if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\n          speakerRecorderRef.current.stop();\n        }\n      }, 2000);\n    }).catch(err => {\n      setSpeakerUploadStatus('获取麦克风权限失败: ' + err.message);\n      console.error('获取麦克风权限失败', err);\n    });\n  }\n\n  /**\r\n   * 新增：停止声纹录音（如果需要手动停止）\r\n   */\n  function stopSpeakerRecording() {\n    if (speakerRecorderRef.current && speakerRecorderRef.current.state !== 'inactive') {\n      speakerRecorderRef.current.stop();\n      setIsSpeakerRecording(false);\n    }\n  }\n\n  // 拖拽事件处理，仅麦克风按钮\n  useEffect(() => {\n    if (!micButtonRef.current) return;\n    const button = micButtonRef.current;\n\n    // 读取并恢复按钮位置\n    const savedPosStr = localStorage.getItem(storageKey);\n    let left = 26;\n    let top = 26;\n    if (savedPosStr) {\n      try {\n        const pos = JSON.parse(savedPosStr);\n        if (typeof pos.left === 'number' && typeof pos.top === 'number' && pos.left >= 0 && pos.top >= 0) {\n          left = pos.left;\n          top = pos.top;\n        }\n      } catch {\n        // 解析失败忽略，使用默认\n      }\n    }\n    button.style.position = 'fixed';\n    button.style.left = `${left}px`;\n    button.style.top = `${top}px`;\n    button.style.zIndex = '10000';\n    button.style.cursor = 'grab';\n\n    // 拖拽相关变量\n    isDraggingRef.current = false;\n    offsetXRef.current = 0;\n    offsetYRef.current = 0;\n    const onMouseDown = e => {\n      if (e.button !== 0) return; // 仅左键拖拽\n      isDraggingRef.current = true;\n      offsetXRef.current = e.clientX - button.offsetLeft;\n      offsetYRef.current = e.clientY - button.offsetTop;\n      button.style.cursor = 'grabbing';\n      e.preventDefault();\n    };\n    const onMouseMove = e => {\n      if (!isDraggingRef.current) return;\n      let newLeft = e.clientX - offsetXRef.current;\n      let newTop = e.clientY - offsetYRef.current;\n      const maxLeft = window.innerWidth - button.offsetWidth;\n      const maxTop = window.innerHeight - button.offsetHeight;\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\n      newTop = Math.min(Math.max(0, newTop), maxTop);\n      button.style.left = `${newLeft}px`;\n      button.style.top = `${newTop}px`;\n    };\n    const onMouseUp = () => {\n      if (!isDraggingRef.current) return;\n      isDraggingRef.current = false;\n      button.style.cursor = 'grab';\n\n      // 保存位置\n      localStorage.setItem(storageKey, JSON.stringify({\n        left: button.offsetLeft,\n        top: button.offsetTop\n      }));\n    };\n    const onTouchStart = e => {\n      if (e.touches.length === 0) return;\n      isDraggingRef.current = true;\n      const touch = e.touches[0];\n      offsetXRef.current = touch.clientX - button.offsetLeft;\n      offsetYRef.current = touch.clientY - button.offsetTop;\n      button.style.cursor = 'grabbing';\n    };\n    const onTouchMove = e => {\n      if (!isDraggingRef.current || e.touches.length === 0) return;\n      const touch = e.touches[0];\n      let newLeft = touch.clientX - offsetXRef.current;\n      let newTop = touch.clientY - offsetYRef.current;\n      const maxLeft = window.innerWidth - button.offsetWidth;\n      const maxTop = window.innerHeight - button.offsetHeight;\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\n      newTop = Math.min(Math.max(0, newTop), maxTop);\n      button.style.left = `${newLeft}px`;\n      button.style.top = `${newTop}px`;\n      e.preventDefault();\n    };\n    const onTouchEnd = () => {\n      if (!isDraggingRef.current) return;\n      isDraggingRef.current = false;\n      button.style.cursor = 'grab';\n\n      // 保存位置\n      localStorage.setItem(storageKey, JSON.stringify({\n        left: button.offsetLeft,\n        top: button.offsetTop\n      }));\n    };\n    button.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    button.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    document.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onTouchEnd);\n    return () => {\n      button.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      button.removeEventListener('touchstart', onTouchStart);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* 麦克风按钮样式 */\n        #mic-button-wrapper {\n          position: fixed;\n          z-index: 10000;\n          user-select: none;\n          pointer-events: auto;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 4px;\n          /* 位置由JS直接设置mic-button-wrapper定位 */\n        }\n\n        #listening-text {\n          font-size: 12px;\n          color: rgba(128, 128, 128, 0.7);\n          user-select: none;\n          pointer-events: none;\n          font-weight: 500;\n          opacity: 0;\n          transition: opacity 0.3s ease;\n          height: 16px;\n          line-height: 16px;\n        }\n        #listening-text.visible {\n          opacity: 1;\n        }\n\n        #mic-button {\n          background: none;\n          border: none;\n          padding: 0;\n          outline: none;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          filter: none;\n          transition: filter 0.3s ease;\n\n          width: 68px;\n          height: 68px;\n          cursor: grab;\n          /* 不再设置fixed定位，由wrapper定位 */\n        }\n        #mic-button.recording {\n          filter: drop-shadow(0 0 5px red);\n        }\n        #mic-button img {\n          width: 48px;\n          height: 48px;\n          user-select: none;\n          pointer-events: none;\n          -webkit-user-drag: none;\n        }\n\n        /* 语言和声纹识别区域样式 */\n        #controls-container {\n          max-width: 700px;\n          margin: 20px auto 12px auto;\n          font-family: Arial, sans-serif;\n          color: white;\n          display: flex;\n          align-items: center;\n          gap: 20px;\n          user-select: none;\n        }\n        #controls-container label {\n          font-size: 14px;\n          user-select: none;\n        }\n        #langInput {\n          padding: 4px;\n          font-size: 14px;\n          width: 120px;\n          background-color: #333;\n          border: 1px solid #666;\n          border-radius: 3px;\n          color: white;\n          user-select: text;\n        }\n        #speakerVerificationLabel {\n          display: flex;\n          align-items: center;\n          font-size: 14px;\n          user-select: none;\n        }\n        #speakerVerificationLabel input {\n          margin-right: 6px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mic-button-wrapper\",\n      ref: micButtonRef,\n      style: {\n        left: 26,\n        top: 26,\n        position: 'fixed'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"listening-text\",\n        className: isRecording ? 'visible' : '',\n        \"aria-live\": \"polite\",\n        role: \"status\",\n        children: \"\\u8046\\u542C\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"mic-button\",\n        className: isRecording ? 'recording' : '',\n        onClick: () => isRecording ? stopRecording() : startRecording(),\n        \"aria-label\": isRecording ? '停止录音' : '开始录音',\n        title: isRecording ? '点击停止录音' : '点击开始录音',\n        type: \"button\",\n        disabled: isSpeakerRecording,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/core/client/ai-butler/image/mic-icon.png\",\n          alt: \"\\u9EA6\\u514B\\u98CE\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls-container\",\n      \"aria-label\": \"\\u8BED\\u97F3\\u8BC6\\u522B\\u8BBE\\u7F6E\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"langInput\",\n        children: \"\\u8BED\\u8A00\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"langInput\",\n        type: \"text\",\n        value: lang,\n        onChange: e => setLang(e.target.value),\n        disabled: isRecording || isSpeakerRecording,\n        placeholder: \"auto\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"speakerVerificationLabel\",\n        htmlFor: \"speakerVerificationCheckbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"speakerVerificationCheckbox\",\n          type: \"checkbox\",\n          checked: speakerVerification,\n          disabled: isRecording || isSpeakerRecording,\n          onChange: e => setSpeakerVerification(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), \"\\u58F0\\u7EB9\\u8BC6\\u522B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LiquidGlass, {\n        displacementScale: 820,\n        blurAmount: 0.8,\n        saturation: 220,\n        aberrationIntensity: 4,\n        elasticity: 0.5,\n        cornerRadius: 16,\n        padding: \"6px 16px\",\n        onClick: () => {\n          if (!isRecording && !isSpeakerRecording) {\n            startSpeakerRecording();\n          }\n        },\n        style: {\n          display: 'inline-block',\n          cursor: isRecording || isSpeakerRecording ? 'not-allowed' : 'pointer',\n          userSelect: 'none',\n          marginLeft: 0,\n          marginTop: 0\n        },\n        \"aria-live\": \"polite\",\n        \"aria-label\": \"\\u5F55\\u5236\\u58F0\\u7EB9\",\n        title: \"\\u5F55\\u5236\\u7EA62\\u79D2\\u58F0\\u97F3\\u7528\\u4E8E\\u58F0\\u7EB9\\u8BC6\\u522B\\uFF0C\\u5F55\\u5236\\u5B8C\\u6210\\u81EA\\u52A8\\u4E0A\\u4F20\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'white',\n            fontWeight: '500',\n            pointerEvents: 'none',\n            userSelect: 'none',\n            opacity: isRecording || isSpeakerRecording ? 0.6 : 1,\n            whiteSpace: 'nowrap',\n            userSelect: 'none'\n          },\n          children: \"\\u5F55\\u5236\\u58F0\\u7EB9 (2\\u79D2)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), speakerUploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"speaker-record-status\",\n      role: \"alert\",\n      \"aria-live\": \"polite\",\n      \"aria-atomic\": \"true\",\n      style: {\n        maxWidth: 700,\n        margin: '4px auto 0 auto',\n        color: 'white',\n        fontFamily: 'monospace',\n        fontSize: '12px'\n      },\n      children: speakerUploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"transcriptionResult\",\n      style: {\n        maxWidth: 700,\n        margin: '12px auto 20px auto',\n        fontFamily: 'Arial, sans-serif',\n        whiteSpace: 'pre-wrap',\n        backgroundColor: 'transparent',\n        padding: 10,\n        border: '1px solid transparent',\n        borderRadius: 5,\n        minHeight: 150,\n        fontFamily: 'monospace',\n        fontSize: 14,\n        overflowY: 'auto',\n        maxHeight: 300,\n        userSelect: 'text',\n        color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)'\n      },\n      children: transcription || '识别文字展示区...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioTranscriber, \"C3401Nf9xtwKOxXqwFa75Wz+nyY=\", false, function () {\n  return [useRecorderContext];\n});\n_c = AudioTranscriber;\nvar _c;\n$RefreshReg$(_c, \"AudioTranscriber\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useRecorderContext","LiquidGlass","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioTranscriber","_s","isRecording","transcription","lang","speakerVerification","setLang","setSpeakerVerification","startRecording","stopRecording","setTranscription","micButtonRef","isDraggingRef","offsetXRef","offsetYRef","storageKey","isSpeakerRecording","setIsSpeakerRecording","speakerUploadStatus","setSpeakerUploadStatus","speakerRecorderRef","speakerAudioChunksRef","sendTextMessage","text","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","stopSpeakerRecording","localStorage","setItem","toString","startSpeakerRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","current","options","mimeType","mediaRecorder","MediaRecorder","e","ondataavailable","event","size","push","onstop","blob","Blob","type","formData","FormData","append","uploadUrl","res","result","err","message","getTracks","forEach","track","stop","setTimeout","start","state","catch","button","savedPosStr","getItem","left","top","pos","parse","style","position","zIndex","cursor","onMouseDown","clientX","offsetLeft","clientY","offsetTop","preventDefault","onMouseMove","newLeft","newTop","maxLeft","window","innerWidth","offsetWidth","maxTop","innerHeight","offsetHeight","Math","min","max","onMouseUp","onTouchStart","touches","length","touch","onTouchMove","onTouchEnd","addEventListener","document","passive","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","className","role","onClick","title","disabled","src","alt","draggable","htmlFor","value","onChange","target","placeholder","autoComplete","checked","displacementScale","blurAmount","saturation","aberrationIntensity","elasticity","cornerRadius","padding","display","userSelect","marginLeft","marginTop","color","fontWeight","pointerEvents","opacity","whiteSpace","maxWidth","margin","fontFamily","fontSize","backgroundColor","border","borderRadius","minHeight","overflowY","maxHeight","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\r\nimport LiquidGlass from 'liquid-glass-react'; // 新增导入液态玻璃组件\r\n\r\nexport default function AudioTranscriber() {\r\n  // 从全局录音上下文中取状态和操作\r\n  const {\r\n    isRecording,\r\n    transcription,\r\n    lang,\r\n    speakerVerification,\r\n    setLang,\r\n    setSpeakerVerification,\r\n    startRecording,\r\n    stopRecording,\r\n    setTranscription,\r\n  } = useRecorderContext();\r\n\r\n  // 拖拽相关引用，仅用于麦克风按钮\r\n  const micButtonRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  // localStorage 保存位置的 key\r\n  const storageKey = 'audioTranscriberMicButtonPosition';\r\n\r\n  // 新增声纹识别录音状态和上传状态（保持本组件私有状态）\r\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\r\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\r\n  const speakerRecorderRef = useRef(null);\r\n  const speakerAudioChunksRef = useRef([]);\r\n\r\n  /**\r\n   * 发送文本消息到 LLM 服务\r\n   * @param {string} text - 要发送的文本\r\n   */\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 组件卸载时清理资源\r\n  useEffect(() => {\r\n    return () => {\r\n      stopRecording();\r\n      stopSpeakerRecording();\r\n    };\r\n  }, []); // 这里改成空依赖数组，避免多次调用\r\n\r\n  // 监听语言和声纹识别开关的变化，保存状态到 localStorage，确保切换页时记忆选择\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberLang', lang);\r\n    } catch {}\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(\r\n        'audioTranscriberSpeakerVerification',\r\n        speakerVerification.toString()\r\n      );\r\n    } catch {}\r\n  }, [speakerVerification]);\r\n\r\n  /**\r\n   * 新增：开始录制2秒音频用于声纹识别\r\n   */\r\n  function startSpeakerRecording() {\r\n    if (isSpeakerRecording) return;\r\n\r\n    setSpeakerUploadStatus('请求麦克风权限...');\r\n    navigator.mediaDevices\r\n      .getUserMedia({ audio: true })\r\n      .then((stream) => {\r\n        setSpeakerUploadStatus('开始录音2秒...');\r\n        speakerAudioChunksRef.current = [];\r\n        const options = { mimeType: 'audio/wav' }; // 一些浏览器不支持wav mimeType，下面用默认就好\r\n        let mediaRecorder;\r\n        try {\r\n          mediaRecorder = new MediaRecorder(stream, options);\r\n        } catch (e) {\r\n          // 失败则不传mimeType，使用默认格式\r\n          mediaRecorder = new MediaRecorder(stream);\r\n        }\r\n        speakerRecorderRef.current = mediaRecorder;\r\n\r\n        mediaRecorder.ondataavailable = (event) => {\r\n          if (event.data && event.data.size > 0) {\r\n            speakerAudioChunksRef.current.push(event.data);\r\n          }\r\n        };\r\n\r\n        mediaRecorder.onstop = async () => {\r\n          setSpeakerUploadStatus('录音结束，准备上传...');\r\n          const blob = new Blob(speakerAudioChunksRef.current, {\r\n            type: 'audio/wav',\r\n          });\r\n\r\n          // 发送上传请求（请修改URL为后端实际接口）\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('file', blob, 'speaker.wav');\r\n\r\n            // 这里示例用POST到服务器上传接口，路径请根据后端实际修改\r\n            const uploadUrl = 'http://192.168.168.77:6007/api/uploadSpeaker';\r\n\r\n            const res = await fetch(uploadUrl, {\r\n              method: 'POST',\r\n              body: formData,\r\n            });\r\n\r\n            if (!res.ok) {\r\n              throw new Error(`上传失败，状态码: ${res.status}`);\r\n            }\r\n            const result = await res.json();\r\n            setSpeakerUploadStatus('上传成功');\r\n            console.log('上传成功，服务器返回：', result);\r\n          } catch (err) {\r\n            setSpeakerUploadStatus('上传失败: ' + err.message);\r\n            console.error('上传失败', err);\r\n          }\r\n          // 停止所有音频轨道释放麦克风\r\n          stream.getTracks().forEach((track) => track.stop());\r\n          setTimeout(() => setSpeakerUploadStatus(''), 3000);\r\n          setIsSpeakerRecording(false);\r\n        };\r\n\r\n        mediaRecorder.start();\r\n\r\n        setIsSpeakerRecording(true);\r\n\r\n        // 2秒后停止录音\r\n        setTimeout(() => {\r\n          if (\r\n            speakerRecorderRef.current &&\r\n            speakerRecorderRef.current.state !== 'inactive'\r\n          ) {\r\n            speakerRecorderRef.current.stop();\r\n          }\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        setSpeakerUploadStatus('获取麦克风权限失败: ' + err.message);\r\n        console.error('获取麦克风权限失败', err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 新增：停止声纹录音（如果需要手动停止）\r\n   */\r\n  function stopSpeakerRecording() {\r\n    if (\r\n      speakerRecorderRef.current &&\r\n      speakerRecorderRef.current.state !== 'inactive'\r\n    ) {\r\n      speakerRecorderRef.current.stop();\r\n      setIsSpeakerRecording(false);\r\n    }\r\n  }\r\n\r\n  // 拖拽事件处理，仅麦克风按钮\r\n  useEffect(() => {\r\n    if (!micButtonRef.current) return;\r\n    const button = micButtonRef.current;\r\n\r\n    // 读取并恢复按钮位置\r\n    const savedPosStr = localStorage.getItem(storageKey);\r\n    let left = 26;\r\n    let top = 26;\r\n    if (savedPosStr) {\r\n      try {\r\n        const pos = JSON.parse(savedPosStr);\r\n        if (\r\n          typeof pos.left === 'number' &&\r\n          typeof pos.top === 'number' &&\r\n          pos.left >= 0 &&\r\n          pos.top >= 0\r\n        ) {\r\n          left = pos.left;\r\n          top = pos.top;\r\n        }\r\n      } catch {\r\n        // 解析失败忽略，使用默认\r\n      }\r\n    }\r\n\r\n    button.style.position = 'fixed';\r\n    button.style.left = `${left}px`;\r\n    button.style.top = `${top}px`;\r\n    button.style.zIndex = '10000';\r\n    button.style.cursor = 'grab';\r\n\r\n    // 拖拽相关变量\r\n    isDraggingRef.current = false;\r\n    offsetXRef.current = 0;\r\n    offsetYRef.current = 0;\r\n\r\n    const onMouseDown = (e) => {\r\n      if (e.button !== 0) return; // 仅左键拖拽\r\n      isDraggingRef.current = true;\r\n      offsetXRef.current = e.clientX - button.offsetLeft;\r\n      offsetYRef.current = e.clientY - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n      e.preventDefault();\r\n    };\r\n    const onMouseMove = (e) => {\r\n      if (!isDraggingRef.current) return;\r\n      let newLeft = e.clientX - offsetXRef.current;\r\n      let newTop = e.clientY - offsetYRef.current;\r\n\r\n      const maxLeft = window.innerWidth - button.offsetWidth;\r\n      const maxTop = window.innerHeight - button.offsetHeight;\r\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n      newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n    };\r\n    const onMouseUp = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      // 保存位置\r\n      localStorage.setItem(\r\n        storageKey,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n    };\r\n\r\n    const onTouchStart = (e) => {\r\n      if (e.touches.length === 0) return;\r\n      isDraggingRef.current = true;\r\n      const touch = e.touches[0];\r\n      offsetXRef.current = touch.clientX - button.offsetLeft;\r\n      offsetYRef.current = touch.clientY - button.offsetTop;\r\n      button.style.cursor = 'grabbing';\r\n    };\r\n    const onTouchMove = (e) => {\r\n      if (!isDraggingRef.current || e.touches.length === 0) return;\r\n      const touch = e.touches[0];\r\n      let newLeft = touch.clientX - offsetXRef.current;\r\n      let newTop = touch.clientY - offsetYRef.current;\r\n\r\n      const maxLeft = window.innerWidth - button.offsetWidth;\r\n      const maxTop = window.innerHeight - button.offsetHeight;\r\n      newLeft = Math.min(Math.max(0, newLeft), maxLeft);\r\n      newTop = Math.min(Math.max(0, newTop), maxTop);\r\n\r\n      button.style.left = `${newLeft}px`;\r\n      button.style.top = `${newTop}px`;\r\n\r\n      e.preventDefault();\r\n    };\r\n    const onTouchEnd = () => {\r\n      if (!isDraggingRef.current) return;\r\n      isDraggingRef.current = false;\r\n      button.style.cursor = 'grab';\r\n\r\n      // 保存位置\r\n      localStorage.setItem(\r\n        storageKey,\r\n        JSON.stringify({ left: button.offsetLeft, top: button.offsetTop })\r\n      );\r\n    };\r\n\r\n    button.addEventListener('mousedown', onMouseDown);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    button.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    return () => {\r\n      button.removeEventListener('mousedown', onMouseDown);\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      button.removeEventListener('touchstart', onTouchStart);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        /* 麦克风按钮样式 */\r\n        #mic-button-wrapper {\r\n          position: fixed;\r\n          z-index: 10000;\r\n          user-select: none;\r\n          pointer-events: auto;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          gap: 4px;\r\n          /* 位置由JS直接设置mic-button-wrapper定位 */\r\n        }\r\n\r\n        #listening-text {\r\n          font-size: 12px;\r\n          color: rgba(128, 128, 128, 0.7);\r\n          user-select: none;\r\n          pointer-events: none;\r\n          font-weight: 500;\r\n          opacity: 0;\r\n          transition: opacity 0.3s ease;\r\n          height: 16px;\r\n          line-height: 16px;\r\n        }\r\n        #listening-text.visible {\r\n          opacity: 1;\r\n        }\r\n\r\n        #mic-button {\r\n          background: none;\r\n          border: none;\r\n          padding: 0;\r\n          outline: none;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          filter: none;\r\n          transition: filter 0.3s ease;\r\n\r\n          width: 68px;\r\n          height: 68px;\r\n          cursor: grab;\r\n          /* 不再设置fixed定位，由wrapper定位 */\r\n        }\r\n        #mic-button.recording {\r\n          filter: drop-shadow(0 0 5px red);\r\n        }\r\n        #mic-button img {\r\n          width: 48px;\r\n          height: 48px;\r\n          user-select: none;\r\n          pointer-events: none;\r\n          -webkit-user-drag: none;\r\n        }\r\n\r\n        /* 语言和声纹识别区域样式 */\r\n        #controls-container {\r\n          max-width: 700px;\r\n          margin: 20px auto 12px auto;\r\n          font-family: Arial, sans-serif;\r\n          color: white;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 20px;\r\n          user-select: none;\r\n        }\r\n        #controls-container label {\r\n          font-size: 14px;\r\n          user-select: none;\r\n        }\r\n        #langInput {\r\n          padding: 4px;\r\n          font-size: 14px;\r\n          width: 120px;\r\n          background-color: #333;\r\n          border: 1px solid #666;\r\n          border-radius: 3px;\r\n          color: white;\r\n          user-select: text;\r\n        }\r\n        #speakerVerificationLabel {\r\n          display: flex;\r\n          align-items: center;\r\n          font-size: 14px;\r\n          user-select: none;\r\n        }\r\n        #speakerVerificationLabel input {\r\n          margin-right: 6px;\r\n        }\r\n      `}</style>\r\n\r\n      {/* 麦克风及“聆听中”容器，控制整体定位、拖拽 */}\r\n      <div\r\n        id=\"mic-button-wrapper\"\r\n        ref={micButtonRef}\r\n        style={{ left: 26, top: 26, position: 'fixed' }}\r\n      >\r\n        {/* 聆听中提示 */}\r\n        <div\r\n          id=\"listening-text\"\r\n          className={isRecording ? 'visible' : ''}\r\n          aria-live=\"polite\"\r\n          role=\"status\"\r\n        >\r\n          聆听中...\r\n        </div>\r\n\r\n        {/* 麦克风按钮 */}\r\n        <button\r\n          id=\"mic-button\"\r\n          className={isRecording ? 'recording' : ''}\r\n          onClick={() => (isRecording ? stopRecording() : startRecording())}\r\n          aria-label={isRecording ? '停止录音' : '开始录音'}\r\n          title={isRecording ? '点击停止录音' : '点击开始录音'}\r\n          type=\"button\"\r\n          disabled={isSpeakerRecording}\r\n        >\r\n          <img\r\n            src=\"/core/client/ai-butler/image/mic-icon.png\"\r\n            alt=\"麦克风\"\r\n            draggable={false}\r\n          />\r\n        </button>\r\n      </div>\r\n\r\n      {/* 语言和声纹识别控制 */}\r\n      <div id=\"controls-container\" aria-label=\"语音识别设置\">\r\n        <label htmlFor=\"langInput\">语言：</label>\r\n        <input\r\n          id=\"langInput\"\r\n          type=\"text\"\r\n          value={lang}\r\n          onChange={(e) => setLang(e.target.value)}\r\n          disabled={isRecording || isSpeakerRecording}\r\n          placeholder=\"auto\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <label id=\"speakerVerificationLabel\" htmlFor=\"speakerVerificationCheckbox\">\r\n          <input\r\n            id=\"speakerVerificationCheckbox\"\r\n            type=\"checkbox\"\r\n            checked={speakerVerification}\r\n            disabled={isRecording || isSpeakerRecording}\r\n            onChange={(e) => setSpeakerVerification(e.target.checked)}\r\n          />\r\n          声纹识别\r\n        </label>\r\n\r\n        {/* 使用LiquidGlass包裹录制声纹按钮 */}\r\n        <LiquidGlass\r\n          displacementScale={820}\r\n          blurAmount={0.8}\r\n          saturation={220}\r\n          aberrationIntensity={4}\r\n          elasticity={0.5}\r\n          cornerRadius={16}\r\n          padding=\"6px 16px\"\r\n          onClick={() => {\r\n            if (!isRecording && !isSpeakerRecording) {\r\n              startSpeakerRecording();\r\n            }\r\n          }}\r\n          style={{\r\n            display: 'inline-block',\r\n            cursor:\r\n              isRecording || isSpeakerRecording ? 'not-allowed' : 'pointer',\r\n            userSelect: 'none',\r\n            marginLeft: 0,\r\n            marginTop: 0,\r\n          }}\r\n          aria-live=\"polite\"\r\n          aria-label=\"录制声纹\"\r\n          title=\"录制约2秒声音用于声纹识别，录制完成自动上传\"\r\n        >\r\n          <span\r\n            style={{\r\n              color: 'white',\r\n              fontWeight: '500',\r\n              pointerEvents: 'none',\r\n              userSelect: 'none',\r\n              opacity: isRecording || isSpeakerRecording ? 0.6 : 1,\r\n              whiteSpace: 'nowrap',\r\n              userSelect: 'none',\r\n            }}\r\n          >\r\n            录制声纹 (2秒)\r\n          </span>\r\n        </LiquidGlass>\r\n      </div>\r\n\r\n      {/* 声纹上传状态显示 */}\r\n      {speakerUploadStatus && (\r\n        <div\r\n          id=\"speaker-record-status\"\r\n          role=\"alert\"\r\n          aria-live=\"polite\"\r\n          aria-atomic=\"true\"\r\n          style={{\r\n            maxWidth: 700,\r\n            margin: '4px auto 0 auto',\r\n            color: 'white',\r\n            fontFamily: 'monospace',\r\n            fontSize: '12px',\r\n          }}\r\n        >\r\n          {speakerUploadStatus}\r\n        </div>\r\n      )}\r\n\r\n      {/* 转写结果展示 */}\r\n      <div\r\n        id=\"transcriptionResult\"\r\n        style={{\r\n          maxWidth: 700,\r\n          margin: '12px auto 20px auto',\r\n          fontFamily: 'Arial, sans-serif',\r\n          whiteSpace: 'pre-wrap',\r\n          backgroundColor: 'transparent',\r\n          padding: 10,\r\n          border: '1px solid transparent',\r\n          borderRadius: 5,\r\n          minHeight: 150,\r\n          fontFamily: 'monospace',\r\n          fontSize: 14,\r\n          overflowY: 'auto',\r\n          maxHeight: 300,\r\n          userSelect: 'text',\r\n          color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)',\r\n        }}\r\n      >\r\n        {transcription || '识别文字展示区...'}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}