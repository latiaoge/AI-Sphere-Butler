{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\AudioTranscriber.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useRecorder } from '../hooks/useRecorder';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AudioTranscriber() {\n  _s();\n  // 录音状态\n  const [isRecording, setIsRecording] = useState(false);\n  // 转写文本内容\n  const [transcription, setTranscription] = useState('');\n  // 语言参数，默认 auto\n  const [lang, setLang] = useState('auto');\n  // 是否开启声纹识别\n  const [speakerVerification, setSpeakerVerification] = useState(false);\n\n  // 自定义录音 Hook，管理录音功能\n  const recorder = useRecorder();\n\n  // WebSocket 实例引用\n  const wsRef = useRef(null);\n  // 定时发送音频的定时器引用\n  const intervalRef = useRef(null);\n\n  // 拖拽相关引用\n  const floatingContainerRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const offsetXRef = useRef(0);\n  const offsetYRef = useRef(0);\n\n  /**\r\n   * 发送文本消息到 LLM 服务\r\n   * @param {string} text - 要发送的文本\r\n   */\n  const sendTextMessage = async text => {\n    if (!text.trim()) return;\n    try {\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('网络响应失败，状态码: ' + response.status);\n      }\n      const data = await response.json();\n      console.log('文本发送成功，服务器返回：', data);\n    } catch (error) {\n      console.error('文本发送失败：', error);\n    }\n  };\n\n  // 组件卸载时清理资源\n  useEffect(() => {\n    return () => {\n      stopRecording();\n    };\n  }, []);\n\n  /**\r\n   * 启动录音并建立 WebSocket 连接\r\n   */\n  function startRecording() {\n    if (isRecording) return;\n\n    // 根据语言和声纹识别参数拼接 WebSocket URL 查询参数\n    let params = [];\n    if (lang) params.push(`lang=${encodeURIComponent(lang)}`);\n    if (speakerVerification) params.push('sv=1'); // 声纹识别参数，勾选时添加\n    const queryStr = params.length > 0 ? `?${params.join('&')}` : '';\n\n    // 请根据实际服务器地址修改此处 ws 地址和端口\n    const wsUrl = `ws://192.168.168.77:6007/ws/transcribe${queryStr}`;\n    const ws = new WebSocket(wsUrl);\n    ws.binaryType = 'arraybuffer';\n    ws.onopen = () => {\n      console.log('WebSocket 已连接');\n\n      // 启动录音\n      recorder.start().catch(e => {\n        alert('启动录音失败: ' + e.message);\n        ws.close();\n      });\n\n      // 定时发送音频数据（每 500ms 发送一次）\n      intervalRef.current = setInterval(() => {\n        if (ws.readyState === 1) {\n          const audioBlob = recorder.getAudioBlob();\n          if (audioBlob.size > 0) {\n            console.log('发送音频数据，大小：', audioBlob.size);\n            ws.send(audioBlob);\n            recorder.clearBuffer();\n          }\n        }\n      }, 500);\n    };\n    ws.onmessage = evt => {\n      try {\n        const resJson = JSON.parse(evt.data);\n        if (resJson.code === 0) {\n          // 收到转写正确结果\n          const recognizedText = resJson.data || '无识别结果';\n\n          // 更新转写文本展示\n          setTranscription(prev => prev + '\\n' + recognizedText);\n\n          // 识别到有效文本时，发送给后端 LLM 服务\n          if (recognizedText && recognizedText.trim() && recognizedText !== '无识别结果') {\n            sendTextMessage(recognizedText);\n          }\n        } else {\n          // 其他情况输出原始数据\n          setTranscription(prev => prev + '\\n' + evt.data);\n        }\n      } catch (e) {\n        console.error('解析转写消息失败', e);\n        setTranscription(prev => prev + '\\n' + evt.data);\n      }\n    };\n    ws.onclose = () => {\n      console.log('WebSocket 已关闭');\n      stopRecording();\n    };\n    ws.onerror = e => {\n      console.error('WebSocket 错误', e);\n    };\n    wsRef.current = ws;\n    setIsRecording(true);\n  }\n\n  /**\r\n   * 停止录音并关闭 WebSocket 连接\r\n   */\n  function stopRecording() {\n    if (!isRecording) return;\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n    recorder.stop();\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    setIsRecording(false);\n  }\n\n  // 拖拽事件处理\n  const onMouseDown = e => {\n    if (!floatingContainerRef.current) return;\n    isDraggingRef.current = true;\n    offsetXRef.current = e.clientX - floatingContainerRef.current.offsetLeft;\n    offsetYRef.current = e.clientY - floatingContainerRef.current.offsetTop;\n    floatingContainerRef.current.style.cursor = 'grabbing';\n    e.preventDefault();\n  };\n  const onMouseMove = e => {\n    if (isDraggingRef.current && floatingContainerRef.current) {\n      let newLeft = e.clientX - offsetXRef.current;\n      let newTop = e.clientY - offsetYRef.current;\n\n      // 可选：限制拖动范围在窗口内\n      const container = floatingContainerRef.current;\n      const maxLeft = window.innerWidth - container.offsetWidth;\n      const maxTop = window.innerHeight - container.offsetHeight;\n      if (newLeft < 0) newLeft = 0;\n      if (newTop < 0) newTop = 0;\n      if (newLeft > maxLeft) newLeft = maxLeft;\n      if (newTop > maxTop) newTop = maxTop;\n      container.style.left = `${newLeft}px`;\n      container.style.top = `${newTop}px`;\n    }\n  };\n  const onMouseUp = () => {\n    if (floatingContainerRef.current) {\n      isDraggingRef.current = false;\n      floatingContainerRef.current.style.cursor = 'grab';\n    }\n  };\n  const onTouchStart = e => {\n    if (!floatingContainerRef.current || e.touches.length === 0) return;\n    isDraggingRef.current = true;\n    const touch = e.touches[0];\n    offsetXRef.current = touch.clientX - floatingContainerRef.current.offsetLeft;\n    offsetYRef.current = touch.clientY - floatingContainerRef.current.offsetTop;\n    floatingContainerRef.current.style.cursor = 'grabbing';\n  };\n  const onTouchMove = e => {\n    if (isDraggingRef.current && floatingContainerRef.current && e.touches.length > 0) {\n      const touch = e.touches[0];\n      let newLeft = touch.clientX - offsetXRef.current;\n      let newTop = touch.clientY - offsetYRef.current;\n      const container = floatingContainerRef.current;\n      const maxLeft = window.innerWidth - container.offsetWidth;\n      const maxTop = window.innerHeight - container.offsetHeight;\n      if (newLeft < 0) newLeft = 0;\n      if (newTop < 0) newTop = 0;\n      if (newLeft > maxLeft) newLeft = maxLeft;\n      if (newTop > maxTop) newTop = maxTop;\n      container.style.left = `${newLeft}px`;\n      container.style.top = `${newTop}px`;\n    }\n  };\n  const onTouchEnd = () => {\n    if (floatingContainerRef.current) {\n      isDraggingRef.current = false;\n      floatingContainerRef.current.style.cursor = 'grab';\n    }\n  };\n  useEffect(() => {\n    if (!floatingContainerRef.current) return;\n    const container = floatingContainerRef.current;\n    container.style.position = 'fixed';\n    container.style.left = '10px';\n    container.style.top = '10px';\n    container.style.cursor = 'grab';\n    container.style.zIndex = 10000;\n    container.style.width = '60px'; // 宽度根据按钮大小调整\n    container.style.height = '60px';\n    container.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    container.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    document.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onTouchEnd);\n    return () => {\n      container.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      container.removeEventListener('touchstart', onTouchStart);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* 语音识别拖拽容器 */\n        #audio-floating-container {\n          user-select: none;\n          background: transparent;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 8px;\n          padding: 4px;\n          box-sizing: border-box;\n        }\n        /* 麦克风按钮样式，保持原样 */\n        #mic-button {\n          background: none;\n          border: none;\n          padding: 0;\n          cursor: pointer;\n          outline: none;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          filter: none;\n          transition: filter 0.3s ease;\n          width: 48px;\n          height: 48px;\n        }\n        #mic-button.recording {\n          filter: drop-shadow(0 0 5px red);\n        }\n        #mic-button img {\n          width: 32px;\n          height: 32px;\n          user-select: none;\n          pointer-events: none;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"audio-floating-container\",\n      ref: floatingContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"mic-button\",\n        className: isRecording ? 'recording' : '',\n        onClick: () => isRecording ? stopRecording() : startRecording(),\n        \"aria-label\": isRecording ? 'Stop Recording' : 'Start Recording',\n        title: isRecording ? '点击停止录音' : '点击开始录音',\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/core/client/ai-butler/image/mic-icon.png\",\n          alt: \"\\u9EA6\\u514B\\u98CE\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12,\n          color: 'white',\n          fontSize: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"langInput\",\n          style: {\n            marginRight: 8\n          },\n          children: \"Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"langInput\",\n          type: \"text\",\n          value: lang,\n          onChange: e => setLang(e.target.value),\n          disabled: isRecording,\n          style: {\n            padding: 4,\n            fontSize: 14,\n            width: 120,\n            backgroundColor: '#333',\n            border: '1px solid #666',\n            borderRadius: 3,\n            color: 'white'\n          },\n          placeholder: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 8,\n          color: 'white',\n          fontSize: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: speakerVerification,\n            disabled: isRecording,\n            onChange: e => setSpeakerVerification(e.target.checked),\n            style: {\n              marginRight: 6\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), \"Speaker Verification\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"transcriptionResult\",\n      style: {\n        maxWidth: 700,\n        margin: '20px auto',\n        fontFamily: 'Arial, sans-serif',\n        whiteSpace: 'pre-wrap',\n        backgroundColor: 'transparent',\n        padding: 10,\n        border: '1px solid transparent',\n        borderRadius: 5,\n        minHeight: 150,\n        fontFamily: 'monospace',\n        fontSize: 14,\n        overflowY: 'auto',\n        maxHeight: 300,\n        userSelect: 'text',\n        color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)'\n      },\n      children: transcription || '识别文字展示区...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioTranscriber, \"2aJxey39cCXmG+wEc8tGmRkAztE=\", false, function () {\n  return [useRecorder];\n});\n_c = AudioTranscriber;\nvar _c;\n$RefreshReg$(_c, \"AudioTranscriber\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useRecorder","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioTranscriber","_s","isRecording","setIsRecording","transcription","setTranscription","lang","setLang","speakerVerification","setSpeakerVerification","recorder","wsRef","intervalRef","floatingContainerRef","isDraggingRef","offsetXRef","offsetYRef","sendTextMessage","text","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","stopRecording","startRecording","params","push","encodeURIComponent","queryStr","length","join","wsUrl","ws","WebSocket","binaryType","onopen","start","catch","e","alert","message","close","current","setInterval","readyState","audioBlob","getAudioBlob","size","send","clearBuffer","onmessage","evt","resJson","parse","code","recognizedText","prev","onclose","onerror","stop","clearInterval","onMouseDown","clientX","offsetLeft","clientY","offsetTop","style","cursor","preventDefault","onMouseMove","newLeft","newTop","container","maxLeft","window","innerWidth","offsetWidth","maxTop","innerHeight","offsetHeight","left","top","onMouseUp","onTouchStart","touches","touch","onTouchMove","onTouchEnd","position","zIndex","width","height","addEventListener","document","passive","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","className","onClick","title","src","alt","draggable","marginTop","color","fontSize","htmlFor","marginRight","type","value","onChange","target","disabled","padding","backgroundColor","border","borderRadius","placeholder","checked","maxWidth","margin","fontFamily","whiteSpace","minHeight","overflowY","maxHeight","userSelect","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecorder } from '../hooks/useRecorder';\r\n\r\nexport default function AudioTranscriber() {\r\n  // 录音状态\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  // 转写文本内容\r\n  const [transcription, setTranscription] = useState('');\r\n  // 语言参数，默认 auto\r\n  const [lang, setLang] = useState('auto');\r\n  // 是否开启声纹识别\r\n  const [speakerVerification, setSpeakerVerification] = useState(false);\r\n\r\n  // 自定义录音 Hook，管理录音功能\r\n  const recorder = useRecorder();\r\n\r\n  // WebSocket 实例引用\r\n  const wsRef = useRef(null);\r\n  // 定时发送音频的定时器引用\r\n  const intervalRef = useRef(null);\r\n\r\n  // 拖拽相关引用\r\n  const floatingContainerRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  /**\r\n   * 发送文本消息到 LLM 服务\r\n   * @param {string} text - 要发送的文本\r\n   */\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch('https://192.168.1.70:6010/qwener', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 组件卸载时清理资源\r\n  useEffect(() => {\r\n    return () => {\r\n      stopRecording();\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * 启动录音并建立 WebSocket 连接\r\n   */\r\n  function startRecording() {\r\n    if (isRecording) return;\r\n\r\n    // 根据语言和声纹识别参数拼接 WebSocket URL 查询参数\r\n    let params = [];\r\n    if (lang) params.push(`lang=${encodeURIComponent(lang)}`);\r\n    if (speakerVerification) params.push('sv=1'); // 声纹识别参数，勾选时添加\r\n    const queryStr = params.length > 0 ? `?${params.join('&')}` : '';\r\n\r\n    // 请根据实际服务器地址修改此处 ws 地址和端口\r\n    const wsUrl = `ws://192.168.168.77:6007/ws/transcribe${queryStr}`;\r\n    const ws = new WebSocket(wsUrl);\r\n    ws.binaryType = 'arraybuffer';\r\n\r\n    ws.onopen = () => {\r\n      console.log('WebSocket 已连接');\r\n\r\n      // 启动录音\r\n      recorder.start().catch((e) => {\r\n        alert('启动录音失败: ' + e.message);\r\n        ws.close();\r\n      });\r\n\r\n      // 定时发送音频数据（每 500ms 发送一次）\r\n      intervalRef.current = setInterval(() => {\r\n        if (ws.readyState === 1) {\r\n          const audioBlob = recorder.getAudioBlob();\r\n          if (audioBlob.size > 0) {\r\n            console.log('发送音频数据，大小：', audioBlob.size);\r\n            ws.send(audioBlob);\r\n            recorder.clearBuffer();\r\n          }\r\n        }\r\n      }, 500);\r\n    };\r\n\r\n    ws.onmessage = (evt) => {\r\n      try {\r\n        const resJson = JSON.parse(evt.data);\r\n        if (resJson.code === 0) {\r\n          // 收到转写正确结果\r\n          const recognizedText = resJson.data || '无识别结果';\r\n\r\n          // 更新转写文本展示\r\n          setTranscription((prev) => prev + '\\n' + recognizedText);\r\n\r\n          // 识别到有效文本时，发送给后端 LLM 服务\r\n          if (recognizedText && recognizedText.trim() && recognizedText !== '无识别结果') {\r\n            sendTextMessage(recognizedText);\r\n          }\r\n        } else {\r\n          // 其他情况输出原始数据\r\n          setTranscription((prev) => prev + '\\n' + evt.data);\r\n        }\r\n      } catch (e) {\r\n        console.error('解析转写消息失败', e);\r\n        setTranscription((prev) => prev + '\\n' + evt.data);\r\n      }\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket 已关闭');\r\n      stopRecording();\r\n    };\r\n\r\n    ws.onerror = (e) => {\r\n      console.error('WebSocket 错误', e);\r\n    };\r\n\r\n    wsRef.current = ws;\r\n    setIsRecording(true);\r\n  }\r\n\r\n  /**\r\n   * 停止录音并关闭 WebSocket 连接\r\n   */\r\n  function stopRecording() {\r\n    if (!isRecording) return;\r\n\r\n    if (wsRef.current) {\r\n      wsRef.current.close();\r\n      wsRef.current = null;\r\n    }\r\n    recorder.stop();\r\n\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n\r\n    setIsRecording(false);\r\n  }\r\n\r\n  // 拖拽事件处理\r\n  const onMouseDown = (e) => {\r\n    if (!floatingContainerRef.current) return;\r\n    isDraggingRef.current = true;\r\n    offsetXRef.current = e.clientX - floatingContainerRef.current.offsetLeft;\r\n    offsetYRef.current = e.clientY - floatingContainerRef.current.offsetTop;\r\n    floatingContainerRef.current.style.cursor = 'grabbing';\r\n    e.preventDefault();\r\n  };\r\n  const onMouseMove = (e) => {\r\n    if (isDraggingRef.current && floatingContainerRef.current) {\r\n      let newLeft = e.clientX - offsetXRef.current;\r\n      let newTop = e.clientY - offsetYRef.current;\r\n\r\n      // 可选：限制拖动范围在窗口内\r\n      const container = floatingContainerRef.current;\r\n      const maxLeft = window.innerWidth - container.offsetWidth;\r\n      const maxTop = window.innerHeight - container.offsetHeight;\r\n      if (newLeft < 0) newLeft = 0;\r\n      if (newTop < 0) newTop = 0;\r\n      if (newLeft > maxLeft) newLeft = maxLeft;\r\n      if (newTop > maxTop) newTop = maxTop;\r\n\r\n      container.style.left = `${newLeft}px`;\r\n      container.style.top = `${newTop}px`;\r\n    }\r\n  };\r\n  const onMouseUp = () => {\r\n    if (floatingContainerRef.current) {\r\n      isDraggingRef.current = false;\r\n      floatingContainerRef.current.style.cursor = 'grab';\r\n    }\r\n  };\r\n  const onTouchStart = (e) => {\r\n    if (!floatingContainerRef.current || e.touches.length === 0) return;\r\n    isDraggingRef.current = true;\r\n    const touch = e.touches[0];\r\n    offsetXRef.current = touch.clientX - floatingContainerRef.current.offsetLeft;\r\n    offsetYRef.current = touch.clientY - floatingContainerRef.current.offsetTop;\r\n    floatingContainerRef.current.style.cursor = 'grabbing';\r\n  };\r\n  const onTouchMove = (e) => {\r\n    if (isDraggingRef.current && floatingContainerRef.current && e.touches.length > 0) {\r\n      const touch = e.touches[0];\r\n      let newLeft = touch.clientX - offsetXRef.current;\r\n      let newTop = touch.clientY - offsetYRef.current;\r\n\r\n      const container = floatingContainerRef.current;\r\n      const maxLeft = window.innerWidth - container.offsetWidth;\r\n      const maxTop = window.innerHeight - container.offsetHeight;\r\n      if (newLeft < 0) newLeft = 0;\r\n      if (newTop < 0) newTop = 0;\r\n      if (newLeft > maxLeft) newLeft = maxLeft;\r\n      if (newTop > maxTop) newTop = maxTop;\r\n\r\n      container.style.left = `${newLeft}px`;\r\n      container.style.top = `${newTop}px`;\r\n    }\r\n  };\r\n  const onTouchEnd = () => {\r\n    if (floatingContainerRef.current) {\r\n      isDraggingRef.current = false;\r\n      floatingContainerRef.current.style.cursor = 'grab';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!floatingContainerRef.current) return;\r\n    const container = floatingContainerRef.current;\r\n    container.style.position = 'fixed';\r\n    container.style.left = '10px';\r\n    container.style.top = '10px';\r\n    container.style.cursor = 'grab';\r\n    container.style.zIndex = 10000;\r\n    container.style.width = '60px'; // 宽度根据按钮大小调整\r\n    container.style.height = '60px';\r\n\r\n    container.addEventListener('mousedown', onMouseDown);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n\r\n    container.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    document.addEventListener('touchend', onTouchEnd);\r\n\r\n    return () => {\r\n      container.removeEventListener('mousedown', onMouseDown);\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n\r\n      container.removeEventListener('touchstart', onTouchStart);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        /* 语音识别拖拽容器 */\r\n        #audio-floating-container {\r\n          user-select: none;\r\n          background: transparent;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          gap: 8px;\r\n          padding: 4px;\r\n          box-sizing: border-box;\r\n        }\r\n        /* 麦克风按钮样式，保持原样 */\r\n        #mic-button {\r\n          background: none;\r\n          border: none;\r\n          padding: 0;\r\n          cursor: pointer;\r\n          outline: none;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          filter: none;\r\n          transition: filter 0.3s ease;\r\n          width: 48px;\r\n          height: 48px;\r\n        }\r\n        #mic-button.recording {\r\n          filter: drop-shadow(0 0 5px red);\r\n        }\r\n        #mic-button img {\r\n          width: 32px;\r\n          height: 32px;\r\n          user-select: none;\r\n          pointer-events: none;\r\n        }\r\n      `}</style>\r\n\r\n      <div id=\"audio-floating-container\" ref={floatingContainerRef}>\r\n        <button\r\n          id=\"mic-button\"\r\n          className={isRecording ? 'recording' : ''}\r\n          onClick={() => (isRecording ? stopRecording() : startRecording())}\r\n          aria-label={isRecording ? 'Stop Recording' : 'Start Recording'}\r\n          title={isRecording ? '点击停止录音' : '点击开始录音'}\r\n        >\r\n          <img\r\n            src=\"/core/client/ai-butler/image/mic-icon.png\"\r\n            alt=\"麦克风\"\r\n            draggable={false}\r\n          />\r\n        </button>\r\n\r\n        {/* 语言输入 */}\r\n        <div style={{ marginTop: 12, color: 'white', fontSize: 12 }}>\r\n          <label htmlFor=\"langInput\" style={{ marginRight: 8 }}>\r\n            Language:\r\n          </label>\r\n          <input\r\n            id=\"langInput\"\r\n            type=\"text\"\r\n            value={lang}\r\n            onChange={(e) => setLang(e.target.value)}\r\n            disabled={isRecording}\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 14,\r\n              width: 120,\r\n              backgroundColor: '#333',\r\n              border: '1px solid #666',\r\n              borderRadius: 3,\r\n              color: 'white',\r\n            }}\r\n            placeholder=\"auto\"\r\n          />\r\n        </div>\r\n\r\n        {/* 声纹识别开关 */}\r\n        <div style={{ marginTop: 8, color: 'white', fontSize: 12 }}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={speakerVerification}\r\n              disabled={isRecording}\r\n              onChange={(e) => setSpeakerVerification(e.target.checked)}\r\n              style={{ marginRight: 6 }}\r\n            />\r\n            Speaker Verification\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 转写结果展示区保持原来位置和样式 */}\r\n      <div\r\n        id=\"transcriptionResult\"\r\n        style={{\r\n          maxWidth: 700,\r\n          margin: '20px auto',\r\n          fontFamily: 'Arial, sans-serif',\r\n          whiteSpace: 'pre-wrap',\r\n          backgroundColor: 'transparent',\r\n          padding: 10,\r\n          border: '1px solid transparent',\r\n          borderRadius: 5,\r\n          minHeight: 150,\r\n          fontFamily: 'monospace',\r\n          fontSize: 14,\r\n          overflowY: 'auto',\r\n          maxHeight: 300,\r\n          userSelect: 'text',\r\n          color: transcription ? 'white' : 'rgba(255, 255, 255, 0.5)',\r\n        }}\r\n      >\r\n        {transcription || '识别文字展示区...'}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}