{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';// 初始管家数据\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialButlers=[{id:'cs',name:'管家禅师',type:'video',src:'/core/client/ai-butler/video/豆包禅师.mp4'},{id:'xl',name:'管家小粒',type:'video',src:'/core/client/ai-butler/video/小粒.mp4'},{id:'xj',name:'管家小贾',type:'video',src:'/core/client/ai-butler/video/小贾.mp4'},{id:'xqt',name:'管家星期天',type:'video',src:'/core/client/ai-butler/video/星期天.mp4'}];// 创建Context\nconst ButlerContext=/*#__PURE__*/createContext({activeButlerId:initialButlers[0].id,setActiveButlerId:()=>{},butlers:initialButlers,addButler:()=>{}// 空函数，防止未包裹Provider报错\n});// Provider组件\nexport function ButlerProvider(_ref){let{children}=_ref;const[butlers,setButlers]=useState(initialButlers);const[activeButlerId,setActiveButlerId]=useState(initialButlers[0].id);// 动态添加管家方法，支持替换\nfunction addButler(newButler){let replaceButlerId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;setButlers(prevButlers=>{let newButlers;if(replaceButlerId){newButlers=prevButlers.filter(b=>b.id!==replaceButlerId);newButlers.push(newButler);}else{const existsIndex=prevButlers.findIndex(b=>b.id===newButler.id);if(existsIndex!==-1){newButlers=[...prevButlers];newButlers[existsIndex]=newButler;}else{newButlers=[...prevButlers,newButler];}}return newButlers;});if(replaceButlerId){setActiveButlerId(newButler.id);}}return/*#__PURE__*/_jsx(ButlerContext.Provider,{value:{activeButlerId,setActiveButlerId,butlers,addButler},children:children});}// 自定义hook\nexport function useButler(){return useContext(ButlerContext);}","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","initialButlers","id","name","type","src","ButlerContext","activeButlerId","setActiveButlerId","butlers","addButler","ButlerProvider","_ref","children","setButlers","newButler","replaceButlerId","arguments","length","undefined","prevButlers","newButlers","filter","b","push","existsIndex","findIndex","Provider","value","useButler"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/ButlersContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// 初始管家数据\r\nconst initialButlers = [\r\n  {\r\n    id: 'cs',\r\n    name: '管家禅师',\r\n    type: 'video',\r\n    src: '/core/client/ai-butler/video/豆包禅师.mp4',\r\n  },\r\n  {\r\n    id: 'xl',\r\n    name: '管家小粒',\r\n    type: 'video',\r\n    src: '/core/client/ai-butler/video/小粒.mp4',\r\n  },\r\n  {\r\n    id: 'xj',\r\n    name: '管家小贾',\r\n    type: 'video',\r\n    src: '/core/client/ai-butler/video/小贾.mp4',\r\n  },\r\n  {\r\n    id: 'xqt',\r\n    name: '管家星期天',\r\n    type: 'video',\r\n    src: '/core/client/ai-butler/video/星期天.mp4',\r\n  },\r\n];\r\n\r\n// 创建Context\r\nconst ButlerContext = createContext({\r\n  activeButlerId: initialButlers[0].id,\r\n  setActiveButlerId: () => {},\r\n  butlers: initialButlers,\r\n  addButler: () => {}, // 空函数，防止未包裹Provider报错\r\n});\r\n\r\n// Provider组件\r\nexport function ButlerProvider({ children }) {\r\n  const [butlers, setButlers] = useState(initialButlers);\r\n  const [activeButlerId, setActiveButlerId] = useState(initialButlers[0].id);\r\n\r\n  // 动态添加管家方法，支持替换\r\n  function addButler(newButler, replaceButlerId = null) {\r\n    setButlers(prevButlers => {\r\n      let newButlers;\r\n      if (replaceButlerId) {\r\n        newButlers = prevButlers.filter(b => b.id !== replaceButlerId);\r\n        newButlers.push(newButler);\r\n      } else {\r\n        const existsIndex = prevButlers.findIndex(b => b.id === newButler.id);\r\n        if (existsIndex !== -1) {\r\n          newButlers = [...prevButlers];\r\n          newButlers[existsIndex] = newButler;\r\n        } else {\r\n          newButlers = [...prevButlers, newButler];\r\n        }\r\n      }\r\n      return newButlers;\r\n    });\r\n\r\n    if (replaceButlerId) {\r\n      setActiveButlerId(newButler.id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ButlerContext.Provider value={{ activeButlerId, setActiveButlerId, butlers, addButler }}>\r\n      {children}\r\n    </ButlerContext.Provider>\r\n  );\r\n}\r\n\r\n// 自定义hook\r\nexport function useButler() {\r\n  return useContext(ButlerContext);\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAElE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,cAAc,CAAG,CACrB,CACEC,EAAE,CAAE,IAAI,CACRC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,OAAO,CACbC,GAAG,CAAE,uCACP,CAAC,CACD,CACEH,EAAE,CAAE,IAAI,CACRC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,OAAO,CACbC,GAAG,CAAE,qCACP,CAAC,CACD,CACEH,EAAE,CAAE,IAAI,CACRC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,OAAO,CACbC,GAAG,CAAE,qCACP,CAAC,CACD,CACEH,EAAE,CAAE,KAAK,CACTC,IAAI,CAAE,OAAO,CACbC,IAAI,CAAE,OAAO,CACbC,GAAG,CAAE,sCACP,CAAC,CACF,CAED;AACA,KAAM,CAAAC,aAAa,cAAGV,aAAa,CAAC,CAClCW,cAAc,CAAEN,cAAc,CAAC,CAAC,CAAC,CAACC,EAAE,CACpCM,iBAAiB,CAAEA,CAAA,GAAM,CAAC,CAAC,CAC3BC,OAAO,CAAER,cAAc,CACvBS,SAAS,CAAEA,CAAA,GAAM,CAAC,CAAG;AACvB,CAAC,CAAC,CAEF;AACA,MAAO,SAAS,CAAAC,cAAcA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACH,OAAO,CAAEK,UAAU,CAAC,CAAGjB,QAAQ,CAACI,cAAc,CAAC,CACtD,KAAM,CAACM,cAAc,CAAEC,iBAAiB,CAAC,CAAGX,QAAQ,CAACI,cAAc,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC,CAE1E;AACA,QAAS,CAAAQ,SAASA,CAACK,SAAS,CAA0B,IAAxB,CAAAC,eAAe,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAClDH,UAAU,CAACM,WAAW,EAAI,CACxB,GAAI,CAAAC,UAAU,CACd,GAAIL,eAAe,CAAE,CACnBK,UAAU,CAAGD,WAAW,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACrB,EAAE,GAAKc,eAAe,CAAC,CAC9DK,UAAU,CAACG,IAAI,CAACT,SAAS,CAAC,CAC5B,CAAC,IAAM,CACL,KAAM,CAAAU,WAAW,CAAGL,WAAW,CAACM,SAAS,CAACH,CAAC,EAAIA,CAAC,CAACrB,EAAE,GAAKa,SAAS,CAACb,EAAE,CAAC,CACrE,GAAIuB,WAAW,GAAK,CAAC,CAAC,CAAE,CACtBJ,UAAU,CAAG,CAAC,GAAGD,WAAW,CAAC,CAC7BC,UAAU,CAACI,WAAW,CAAC,CAAGV,SAAS,CACrC,CAAC,IAAM,CACLM,UAAU,CAAG,CAAC,GAAGD,WAAW,CAAEL,SAAS,CAAC,CAC1C,CACF,CACA,MAAO,CAAAM,UAAU,CACnB,CAAC,CAAC,CAEF,GAAIL,eAAe,CAAE,CACnBR,iBAAiB,CAACO,SAAS,CAACb,EAAE,CAAC,CACjC,CACF,CAEA,mBACEF,IAAA,CAACM,aAAa,CAACqB,QAAQ,EAACC,KAAK,CAAE,CAAErB,cAAc,CAAEC,iBAAiB,CAAEC,OAAO,CAAEC,SAAU,CAAE,CAAAG,QAAA,CACtFA,QAAQ,CACa,CAAC,CAE7B,CAEA;AACA,MAAO,SAAS,CAAAgB,SAASA,CAAA,CAAG,CAC1B,MAAO,CAAA/B,UAAU,CAACQ,aAAa,CAAC,CAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}