{"ast":null,"code":"var _jsxFileName = \"D:\\\\XM\\\\AI-Sphere-Butler\\\\core\\\\client\\\\src\\\\components\\\\AudioTranscriber.jsx\",\n  _s = $RefreshSig$();\n// D:\\XM\\AI-Sphere-Butler\\core\\client\\src\\components\\AudioTranscriber.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AudioTranscriber() {\n  _s();\n  // 从全局录音上下文中取状态和操作\n  const {\n    isRecording,\n    transcription,\n    lang,\n    speakerVerification,\n    wakeWordEnabled,\n    wakeWords,\n    setLang,\n    setSpeakerVerification,\n    setWakeWordEnabled,\n    setWakeWords,\n    startRecording,\n    stopRecording,\n    setTranscription,\n    // 新增：获取全局ASR面板可见性状态及更新方法\n    asrPanelVisible,\n    setAsrPanelVisible\n  } = useRecorderContext();\n\n  // 新增：面板显示/隐藏状态管理\n  const [panelVisible, setPanelVisible] = useState(asrPanelVisible); // 初始值从全局状态获取\n  const [isMinimized, setIsMinimized] = useState(() => {\n    try {\n      const saved = localStorage.getItem('audioTranscriberMinimized');\n      return saved ? JSON.parse(saved) : false;\n    } catch {\n      return false;\n    }\n  });\n  const [position, setPosition] = useState(() => {\n    try {\n      const saved = localStorage.getItem('audioTranscriberPosition');\n      if (saved) {\n        const pos = JSON.parse(saved);\n        if (typeof pos.x === 'number' && typeof pos.y === 'number') {\n          return pos;\n        }\n      }\n    } catch {}\n    // 默认位置：靠近左侧，垂直居中偏上\n    return {\n      x: 20,\n      y: window.innerHeight / 3\n    };\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDoubleClick, setIsDoubleClick] = useState(false);\n  const doubleClickTimerRef = useRef(null);\n  const panelStateKey = 'audioTranscriberPanelVisible';\n\n  // 拖拽相关引用\n  const micButtonRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const offsetXRef = useRef(0);\n  const offsetYRef = useRef(0);\n\n  // localStorage 保存位置的 key\n  const storageKey = 'audioTranscriberMicButtonPosition';\n\n  // 新增声纹识别录音状态和上传状态（保持本组件私有状态）\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\n  const speakerRecorderRef = useRef(null);\n  const speakerAudioChunksRef = useRef([]);\n\n  // *** 修改开始：定义一个函数来获取动态配置的 URLs ***\n  const getDynamicUrls = () => {\n    let serverUrls = {};\n    try {\n      const savedUrls = localStorage.getItem('serverUrls');\n      if (savedUrls) {\n        serverUrls = JSON.parse(savedUrls);\n      }\n    } catch (e) {\n      console.error(\"AudioTranscriber: Failed to parse serverUrls from localStorage\", e);\n    }\n    // 优先使用配置项，如果没有则 fallback 到环境变量或默认值\n    // 注意：这里假设 ServerUrlConfig.jsx 中配置项的键名是 audioTranscriberQwenerUrl 和 audioTranscriberUploadSpeakerUrl\n    // 如果键名不同，请相应调整\n    const qwenerUrl = serverUrls.audioTranscriberQwenerUrl || 'https://192.168.168.77:9010/qwener';\n    const uploadSpeakerUrl = serverUrls.audioTranscriberUploadSpeakerUrl || 'http://192.168.168.77:6007/api/uploadSpeaker';\n    return {\n      qwenerUrl: qwenerUrl,\n      uploadSpeakerUrl: uploadSpeakerUrl\n    };\n  };\n  // *** 修改结束 ***\n\n  // 发送文本消息到 LLM 服务\n  const sendTextMessage = async text => {\n    if (!text.trim()) return;\n\n    // *** 修改：动态获取 Qwener URL ***\n    const {\n      qwenerUrl\n    } = getDynamicUrls();\n    try {\n      // const response = await fetch('https://192.168.168.77:9010/qwener', {\n      const response = await fetch(qwenerUrl, {\n        // 使用动态 URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('网络响应失败，状态码: ' + response.status);\n      }\n      const data = await response.json();\n      console.log('文本发送成功，服务器返回：', data);\n    } catch (error) {\n      console.error('文本发送失败：', error);\n    }\n  };\n\n  // 组件卸载时清理资源\n  useEffect(() => {\n    return () => {\n      stopRecording();\n      stopSpeakerRecording();\n      if (doubleClickTimerRef.current) {\n        clearTimeout(doubleClickTimerRef.current);\n      }\n    };\n  }, []);\n\n  // 监听全局面板可见性状态变化并同步到本地\n  useEffect(() => {\n    setPanelVisible(asrPanelVisible);\n  }, [asrPanelVisible]);\n\n  // 保存面板可见性状态到 localStorage 并同步到全局状态\n  useEffect(() => {\n    try {\n      localStorage.setItem(panelStateKey, JSON.stringify(panelVisible));\n    } catch {}\n    setAsrPanelVisible(panelVisible);\n  }, [panelVisible, setAsrPanelVisible]);\n\n  // 保存最小化状态到 localStorage\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberMinimized', JSON.stringify(isMinimized));\n    } catch {}\n  }, [isMinimized]);\n\n  // 保存位置到 localStorage\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberPosition', JSON.stringify(position));\n    } catch {}\n  }, [position]);\n\n  // 监听语言和声纹识别开关的变化，保存状态到 localStorage，确保切换页时记忆选择\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberLang', lang);\n    } catch {}\n  }, [lang]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString());\n    } catch {}\n  }, [speakerVerification]);\n\n  // 监听语音唤醒开关和唤醒词变化，保存到 localStorage\n  useEffect(() => {\n    try {\n      localStorage.setItem('wakeWordEnabled', wakeWordEnabled.toString());\n    } catch {}\n  }, [wakeWordEnabled]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('wakeWords', wakeWords);\n    } catch {}\n  }, [wakeWords]);\n\n  // 新增：加载面板显示状态（改为从localStorage加载，同时同步到全局状态）\n  useEffect(() => {\n    try {\n      const savedVisible = localStorage.getItem(panelStateKey);\n      if (savedVisible !== null) {\n        const isVisible = JSON.parse(savedVisible);\n        setPanelVisible(isVisible);\n        setAsrPanelVisible(isVisible); // 同步到全局状态\n      }\n    } catch (e) {\n      console.warn('读取面板状态失败:', e);\n    }\n  }, [setAsrPanelVisible]);\n\n  // 拖拽开始\n  const handleDragStart = (clientX, clientY) => {\n    if (!micButtonRef.current) return;\n    const rect = micButtonRef.current.getBoundingClientRect();\n    offsetXRef.current = clientX - rect.left;\n    offsetYRef.current = clientY - rect.top;\n    isDraggingRef.current = true;\n    setIsDragging(true);\n  };\n\n  // 拖拽移动\n  const handleDragMove = (clientX, clientY) => {\n    if (!isDraggingRef.current || !micButtonRef.current) return;\n    const newX = clientX - offsetXRef.current;\n    const newY = clientY - offsetYRef.current;\n    // 限制拖拽范围在视窗内\n    const maxX = window.innerWidth - micButtonRef.current.offsetWidth;\n    const maxY = window.innerHeight - micButtonRef.current.offsetHeight;\n    setPosition({\n      x: Math.max(0, Math.min(newX, maxX)),\n      y: Math.max(0, Math.min(newY, maxY))\n    });\n  };\n\n  // 拖拽结束\n  const handleDragEnd = () => {\n    if (isDraggingRef.current) {\n      isDraggingRef.current = false;\n      setIsDragging(false);\n    }\n  };\n\n  // 鼠标事件处理\n  const onMouseDown = e => {\n    // 防止拖拽时选中文本\n    e.preventDefault();\n    handleDragStart(e.clientX, e.clientY);\n  };\n  const onMouseMove = e => {\n    handleDragMove(e.clientX, e.clientY);\n  };\n  const onMouseUp = () => {\n    handleDragEnd();\n  };\n\n  // 触摸事件处理（移动端兼容）\n  const onTouchStart = e => {\n    if (e.touches.length === 1) {\n      const touch = e.touches[0];\n      handleDragStart(touch.clientX, touch.clientY);\n    }\n  };\n  const onTouchMove = e => {\n    if (e.touches.length === 1) {\n      const touch = e.touches[0];\n      handleDragMove(touch.clientX, touch.clientY);\n    }\n  };\n  const onTouchEnd = () => {\n    handleDragEnd();\n  };\n\n  // 绑定全局鼠标/触摸移动和结束事件，确保在任意位置都能拖动和释放\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', onMouseUp);\n      document.addEventListener('touchmove', onTouchMove, {\n        passive: false\n      });\n      document.addEventListener('touchend', onTouchEnd);\n    } else {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    }\n    return () => {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', onTouchEnd);\n    };\n  }, [isDragging]);\n\n  // 处理麦克风按钮点击（单击/双击）\n  const handleMicClick = () => {\n    if (isDoubleClick) {\n      // 双击：切换面板显示/隐藏\n      setPanelVisible(v => !v);\n      setIsDoubleClick(false);\n      if (doubleClickTimerRef.current) {\n        clearTimeout(doubleClickTimerRef.current);\n        doubleClickTimerRef.current = null;\n      }\n      return;\n    }\n\n    // 单击：开始录音（如果面板隐藏则显示面板）\n    if (!panelVisible) {\n      setPanelVisible(true);\n    }\n    if (!isRecording) {\n      startRecording();\n    } else {\n      stopRecording();\n    }\n  };\n\n  // 处理麦克风按钮双击\n  const handleMicDoubleClick = () => {\n    setIsDoubleClick(true);\n    if (doubleClickTimerRef.current) {\n      clearTimeout(doubleClickTimerRef.current);\n    }\n    doubleClickTimerRef.current = setTimeout(() => {\n      setIsDoubleClick(false);\n    }, 300); // 300ms 内的第二次点击视为双击\n  };\n\n  // 切换语言\n  const toggleLang = () => {\n    setLang(prev => prev === 'zh' ? 'en' : 'zh');\n  };\n\n  // 切换声纹识别\n  const toggleSpeakerVerification = () => {\n    setSpeakerVerification(prev => !prev);\n  };\n\n  // 切换语音唤醒\n  const toggleWakeWord = () => {\n    setWakeWordEnabled(prev => !prev);\n  };\n\n  // 更新唤醒词\n  const updateWakeWords = e => {\n    setWakeWords(e.target.value);\n  };\n\n  // 开始声纹识别录音\n  const startSpeakerRecording = async () => {\n    if (isSpeakerRecording) return;\n    setSpeakerUploadStatus('正在请求录音权限...');\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      speakerRecorderRef.current = mediaRecorder;\n      speakerAudioChunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data && event.data.size > 0) {\n          speakerAudioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = async () => {\n        setSpeakerUploadStatus('录音结束，准备上传...');\n        const blob = new Blob(speakerAudioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        try {\n          const formData = new FormData();\n          formData.append('file', blob, 'speaker.wav');\n\n          // *** 修改：动态获取上传 Speaker URL ***\n          const {\n            uploadSpeakerUrl\n          } = getDynamicUrls();\n\n          // const uploadUrl = 'http://192.168.168.77:6007/api/uploadSpeaker';\n          const res = await fetch(uploadSpeakerUrl, {\n            // 使用动态 URL\n            method: 'POST',\n            body: formData\n          });\n          if (!res.ok) {\n            throw new Error(`上传失败，状态码: ${res.status}`);\n          }\n          const result = await res.json();\n          setSpeakerUploadStatus(result.message || '上传成功');\n          console.log('声纹识别上传成功:', result);\n        } catch (err) {\n          console.error('声纹识别上传失败:', err);\n          setSpeakerUploadStatus(`上传失败: ${err.message}`);\n        }\n      };\n      mediaRecorder.start();\n      setIsSpeakerRecording(true);\n      setSpeakerUploadStatus('正在录音...');\n      console.log('声纹识别录音已开始');\n    } catch (err) {\n      console.error('无法访问麦克风进行声纹识别:', err);\n      setSpeakerUploadStatus(`录音失败: ${err.message}`);\n    }\n  };\n\n  // 停止声纹识别录音\n  const stopSpeakerRecording = () => {\n    if (speakerRecorderRef.current && isSpeakerRecording) {\n      speakerRecorderRef.current.stop();\n      const tracks = speakerRecorderRef.current.stream.getTracks();\n      tracks.forEach(track => track.stop());\n      setIsSpeakerRecording(false);\n      console.log('声纹识别录音已停止');\n    }\n  };\n\n  // 清空识别结果\n  const clearTranscription = () => {\n    setTranscription('');\n  };\n\n  // 麦克风按钮样式\n  const micButtonStyle = {\n    position: 'fixed',\n    left: `${position.x}px`,\n    top: `${position.y}px`,\n    width: 60,\n    height: 60,\n    borderRadius: '50%',\n    backgroundColor: isRecording ? '#f44336' : 'rgba(255, 255, 255, 0.2)',\n    border: '2px solid rgba(255, 255, 255, 0.5)',\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1001,\n    userSelect: 'none',\n    transition: 'background-color 0.3s, transform 0.2s',\n    transform: isDragging ? 'scale(1.1)' : 'scale(1)',\n    backdropFilter: 'blur(10px)',\n    WebkitBackdropFilter: 'blur(10px)',\n    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n  };\n\n  // 面板容器样式\n  const panelContainerStyle = {\n    position: 'fixed',\n    left: `${position.x + 70}px`,\n    // 紧挨着麦克风按钮\n    top: `${position.y}px`,\n    width: 320,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    borderRadius: 10,\n    padding: 16,\n    zIndex: 1000,\n    color: 'white',\n    fontFamily: 'Arial, sans-serif',\n    backdropFilter: 'blur(10px)',\n    WebkitBackdropFilter: 'blur(10px)',\n    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)',\n    border: '1px solid rgba(255, 255, 255, 0.2)',\n    transform: isMinimized ? 'translateX(-100%)' : 'translateX(0)',\n    transition: 'transform 0.3s ease-in-out'\n  };\n\n  // 面板头部样式\n  const panelHeaderStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n    paddingBottom: 8,\n    borderBottom: '1px solid rgba(255, 255, 255, 0.2)'\n  };\n\n  // 按钮基础样式\n  const baseButtonStyle = {\n    padding: '6px 12px',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    color: 'white',\n    border: '1px solid rgba(255, 255, 255, 0.3)',\n    borderRadius: 4,\n    cursor: 'pointer',\n    fontWeight: 'bold',\n    fontSize: 12,\n    transition: 'background-color 0.2s'\n  };\n\n  // 按钮悬停样式\n  const buttonHoverStyle = {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)'\n  };\n\n  // 开关容器样式\n  const switchContainerStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n    fontSize: 14\n  };\n\n  // 文本区域样式\n  const textareaStyle = {\n    width: '100%',\n    minHeight: 100,\n    padding: 10,\n    borderRadius: 6,\n    border: '1px solid rgba(255, 255, 255, 0.3)',\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    color: 'white',\n    fontSize: 14,\n    resize: 'vertical',\n    marginBottom: 12,\n    outline: 'none'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: micButtonRef,\n      style: micButtonStyle,\n      onMouseDown: onMouseDown,\n      onClick: handleMicClick,\n      onDoubleClick: handleMicDoubleClick,\n      onTouchStart: onTouchStart,\n      onTouchEnd: e => {\n        // 防止触摸结束时触发点击事件\n        e.preventDefault();\n        handleMicClick();\n      },\n      \"aria-label\": isRecording ? \"停止录音\" : \"开始录音\",\n      role: \"button\",\n      tabIndex: 0,\n      children: isRecording ? '⏹' : '🎤'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), panelVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: panelContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: panelHeaderStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: 0,\n            fontSize: 16\n          },\n          children: \"\\u8BED\\u97F3\\u8BC6\\u522B\\u9762\\u677F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsMinimized(!isMinimized),\n            style: baseButtonStyle,\n            \"aria-label\": isMinimized ? \"展开面板\" : \"收起面板\",\n            children: isMinimized ? '◀' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPanelVisible(false),\n            style: baseButtonStyle,\n            \"aria-label\": \"\\u5173\\u95ED\\u9762\\u677F\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: switchContainerStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u8BED\\u8A00: \", lang === 'zh' ? '中文' : 'English']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleLang,\n            style: baseButtonStyle,\n            \"aria-label\": `切换到${lang === 'zh' ? '英文' : '中文'}`,\n            children: \"\\u5207\\u6362\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: switchContainerStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u58F0\\u7EB9\\u8BC6\\u522B: \", speakerVerification ? '开' : '关']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleSpeakerVerification,\n            style: {\n              ...baseButtonStyle,\n              backgroundColor: speakerVerification ? 'rgba(76, 175, 80, 0.3)' : baseButtonStyle.backgroundColor,\n              borderColor: speakerVerification ? '#4CAF50' : baseButtonStyle.borderColor\n            },\n            \"aria-label\": speakerVerification ? \"关闭声纹识别\" : \"开启声纹识别\",\n            children: speakerVerification ? '开' : '关'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: switchContainerStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u8BED\\u97F3\\u5524\\u9192: \", wakeWordEnabled ? '开' : '关']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleWakeWord,\n            style: {\n              ...baseButtonStyle,\n              backgroundColor: wakeWordEnabled ? 'rgba(76, 175, 80, 0.3)' : baseButtonStyle.backgroundColor,\n              borderColor: wakeWordEnabled ? '#4CAF50' : baseButtonStyle.borderColor\n            },\n            \"aria-label\": wakeWordEnabled ? \"关闭语音唤醒\" : \"开启语音唤醒\",\n            children: wakeWordEnabled ? '开' : '关'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 15\n        }, this), wakeWordEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: 4,\n              fontSize: 12\n            },\n            children: \"\\u5524\\u9192\\u8BCD (\\u7528\\u9017\\u53F7\\u5206\\u9694):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: wakeWords,\n            onChange: updateWakeWords,\n            placeholder: \"\\u4F8B\\u5982: \\u4F60\\u597D,\\u52A9\\u624B\",\n            style: {\n              width: '100%',\n              padding: 6,\n              borderRadius: 4,\n              border: '1px solid rgba(255, 255, 255, 0.3)',\n              backgroundColor: 'rgba(255, 255, 255, 0.05)',\n              color: 'white',\n              fontSize: 12\n            },\n            \"aria-label\": \"\\u8F93\\u5165\\u5524\\u9192\\u8BCD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 17\n        }, this), speakerVerification && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginBottom: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: 14\n              },\n              children: \"\\u58F0\\u7EB9\\u8BC6\\u522B\\u8BAD\\u7EC3:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: isSpeakerRecording ? stopSpeakerRecording : startSpeakerRecording,\n              style: {\n                ...baseButtonStyle,\n                backgroundColor: isSpeakerRecording ? 'rgba(244, 67, 54, 0.3)' : baseButtonStyle.backgroundColor,\n                borderColor: isSpeakerRecording ? '#f44336' : baseButtonStyle.borderColor\n              },\n              \"aria-label\": isSpeakerRecording ? \"停止录音\" : \"开始录音\",\n              children: isSpeakerRecording ? '⏹ 停止' : '⏺ 录音'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 19\n          }, this), speakerUploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: speakerUploadStatus.includes('失败') ? '#ff6666' : '#66ff66',\n              marginTop: 4\n            },\n            children: speakerUploadStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: 14\n              },\n              children: \"\\u8BC6\\u522B\\u7ED3\\u679C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearTranscription,\n              style: baseButtonStyle,\n              \"aria-label\": \"\\u6E05\\u7A7A\\u8BC6\\u522B\\u7ED3\\u679C\",\n              children: \"\\u6E05\\u7A7A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: transcription,\n            readOnly: true,\n            style: textareaStyle,\n            placeholder: \"\\u8BED\\u97F3\\u8BC6\\u522B\\u7ED3\\u679C\\u5C06\\u663E\\u793A\\u5728\\u8FD9\\u91CC...\",\n            \"aria-label\": \"\\u8BED\\u97F3\\u8BC6\\u522B\\u7ED3\\u679C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* 基础样式 */\n        #audio-transcriber-container {\n          font-family: Arial, sans-serif;\n          user-select: none;\n          pointer-events: auto;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 4px;\n        }\n        #listening-text {\n          font-size: 12px;\n          color: rgba(128, 128, 128, 0.7);\n          user-select: none;\n          pointer-events: none;\n          font-weight: 500;\n          opacity: 0;\n          transition: opacity 0.3s ease;\n          height: 16px;\n          line-height: 16px;\n        }\n        #listening-text.visible {\n          opacity: 1;\n        }\n        #mic-button {\n          background: none;\n          border: none;\n          padding: 0;\n          outline: none;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          filter: none;\n          transition: filter 0.3s ease;\n          width: 68px;\n          height: 68px;\n          cursor: grab;\n        }\n        #mic-button.recording {\n          filter: drop-shadow(0 0 5px red);\n        }\n        #mic-button:hover {\n          filter: brightness(1.2);\n        }\n        #mic-button:active {\n          cursor: grabbing;\n        }\n        #mic-icon {\n          width: 100%;\n          height: 100%;\n          object-fit: contain;\n          pointer-events: none;\n        }\n        #recording-indicator {\n          position: absolute;\n          top: -4px;\n          right: -4px;\n          width: 16px;\n          height: 16px;\n          background-color: #f44336;\n          border-radius: 50%;\n          border: 2px solid white;\n          animation: pulse 1.5s infinite;\n          pointer-events: none;\n        }\n        @keyframes pulse {\n          0% { transform: scale(0.95); box-shadow: 0 0 0 0 rgba(244, 67, 54, 0.7); }\n          70% { transform: scale(1); box-shadow: 0 0 0 10px rgba(244, 67, 54, 0); }\n          100% { transform: scale(0.95); box-shadow: 0 0 0 0 rgba(244, 67, 54, 0); }\n        }\n        #audio-panel {\n          position: fixed;\n          left: 90px;\n          top: 20px;\n          width: 320px;\n          background-color: rgba(0, 0, 0, 0.7);\n          border-radius: 10px;\n          padding: 16px;\n          z-index: 1000;\n          color: white;\n          font-family: Arial, sans-serif;\n          backdrop-filter: blur(10px);\n          WebkitBackdropFilter: blur(10px);\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);\n          border: 1px solid rgba(255, 255, 255, 0.2);\n          transform: translateX(0);\n          transition: transform 0.3s ease-in-out;\n        }\n        #audio-panel.hidden {\n          transform: translateX(-100%);\n        }\n        #audio-panel-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 12px;\n          padding-bottom: 8px;\n          border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n        }\n        #audio-panel-title {\n          margin: 0;\n          font-size: 16px;\n        }\n        #audio-panel-close-btn {\n          padding: 4px 8px;\n          background: none;\n          border: 1px solid rgba(255, 255, 255, 0.3);\n          color: white;\n          border-radius: 4px;\n          cursor: pointer;\n          font-weight: bold;\n          font-size: 14px;\n          transition: background-color 0.2s;\n        }\n        #audio-panel-close-btn:hover {\n          background-color: rgba(255, 255, 255, 0.2);\n        }\n        #controls-container {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n          margin-bottom: 12px;\n        }\n        #controls-container label {\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          font-size: 14px;\n        }\n        #controls-container input[type=\"text\"],\n        #controls-container input[type=\"checkbox\"] {\n          margin: 0;\n        }\n        #controls-container input[type=\"text\"] {\n          padding: 4px 8px;\n          border-radius: 4px;\n          border: 1px solid rgba(255, 255, 255, 0.3);\n          background-color: rgba(255, 255, 255, 0.05);\n          color: white;\n          font-size: 12px;\n        }\n        #controls-container input[type=\"checkbox\"] {\n          width: 16px;\n          height: 16px;\n          accent-color: #4CAF50;\n        }\n        #speaker-record-container {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n          margin-bottom: 12px;\n        }\n        #speaker-record-button {\n          position: relative;\n          padding: 8px 16px;\n          border: none;\n          border-radius: 6px;\n          background: linear-gradient(135deg, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0.03) 100%);\n          color: white;\n          font-weight: bold;\n          font-size: 14px;\n          cursor: pointer;\n          user-select: none;\n          transition: all 0.3s ease;\n          backdrop-filter: blur(10px);\n          WebkitBackdropFilter: blur(10px);\n          box-shadow: 0 4px 20px rgba(255, 255, 255, 0.15);\n          border: 1px solid rgba(255, 255, 255, 0.3);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          outline: none;\n          border-image: none;\n        }\n        #speaker-record-button:hover:not(:disabled) {\n          background: rgba(255, 255, 255, 0.2);\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\n          transform: scale(1.05);\n          filter: brightness(1.1);\n        }\n        #speaker-record-button:disabled {\n          opacity: 0.4;\n          cursor: not-allowed;\n          box-shadow: none;\n          background: rgba(255, 255, 255, 0.05);\n          filter: none;\n          transform: none;\n        }\n        /* 额外光泽层 */\n        #speaker-record-button::before {\n          content: '';\n          position: absolute;\n          top: -100%;\n          left: -100%;\n          width: 100%;\n          height: 100%;\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\n          pointer-events: none;\n          filter: blur(10px);\n          opacity: 0.6;\n          transition: opacity 0.3s ease;\n          border-radius: inherit;\n          z-index: 0;\n        }\n        /* 保留波纹效果的样式 */\n        .ripple {\n          position: absolute;\n          border-radius: 150%;\n          background: rgba(91, 155, 255, 0.7);\n          animation: rippleEffect 1s ease-out;\n          pointer-events: none;\n          transform: scale(0);\n          opacity: 0.75;\n          z-index: 1;\n        }\n        @keyframes rippleEffect {\n          to {\n            transform: scale(4);\n            opacity: 0;\n          }\n        }\n        /* 新增：面板显示/隐藏控制 */\n        #audio-panel-content {\n          transition: all 0.3s ease;\n        }\n        #audio-panel-content.hidden {\n          display: none;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioTranscriber, \"LFXi0N9z1uKSLYjLG6mit3y3Z+A=\", false, function () {\n  return [useRecorderContext];\n});\n_c = AudioTranscriber;\nvar _c;\n$RefreshReg$(_c, \"AudioTranscriber\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useRecorderContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioTranscriber","_s","isRecording","transcription","lang","speakerVerification","wakeWordEnabled","wakeWords","setLang","setSpeakerVerification","setWakeWordEnabled","setWakeWords","startRecording","stopRecording","setTranscription","asrPanelVisible","setAsrPanelVisible","panelVisible","setPanelVisible","isMinimized","setIsMinimized","saved","localStorage","getItem","JSON","parse","position","setPosition","pos","x","y","window","innerHeight","isDragging","setIsDragging","dragOffset","setDragOffset","isDoubleClick","setIsDoubleClick","doubleClickTimerRef","panelStateKey","micButtonRef","isDraggingRef","offsetXRef","offsetYRef","storageKey","isSpeakerRecording","setIsSpeakerRecording","speakerUploadStatus","setSpeakerUploadStatus","speakerRecorderRef","speakerAudioChunksRef","getDynamicUrls","serverUrls","savedUrls","e","console","error","qwenerUrl","audioTranscriberQwenerUrl","uploadSpeakerUrl","audioTranscriberUploadSpeakerUrl","sendTextMessage","text","trim","response","fetch","method","headers","body","stringify","ok","Error","status","data","json","log","stopSpeakerRecording","current","clearTimeout","setItem","toString","savedVisible","isVisible","warn","handleDragStart","clientX","clientY","rect","getBoundingClientRect","left","top","handleDragMove","newX","newY","maxX","innerWidth","offsetWidth","maxY","offsetHeight","Math","max","min","handleDragEnd","onMouseDown","preventDefault","onMouseMove","onMouseUp","onTouchStart","touches","length","touch","onTouchMove","onTouchEnd","document","addEventListener","passive","removeEventListener","handleMicClick","v","handleMicDoubleClick","setTimeout","toggleLang","prev","toggleSpeakerVerification","toggleWakeWord","updateWakeWords","target","value","startSpeakerRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","event","size","push","onstop","blob","Blob","type","formData","FormData","append","res","result","message","err","start","stop","tracks","getTracks","forEach","track","clearTranscription","micButtonStyle","width","height","borderRadius","backgroundColor","border","color","fontSize","fontWeight","cursor","display","alignItems","justifyContent","zIndex","userSelect","transition","transform","backdropFilter","WebkitBackdropFilter","boxShadow","panelContainerStyle","padding","fontFamily","panelHeaderStyle","marginBottom","paddingBottom","borderBottom","baseButtonStyle","buttonHoverStyle","switchContainerStyle","textareaStyle","minHeight","resize","outline","children","ref","style","onClick","onDoubleClick","role","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","margin","borderColor","onChange","placeholder","includes","marginTop","readOnly","_c","$RefreshReg$"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/AudioTranscriber.jsx"],"sourcesContent":["// D:\\XM\\AI-Sphere-Butler\\core\\client\\src\\components\\AudioTranscriber.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecorderContext } from '../contexts/RecorderProvider'; // 注意路径根据实际调整\r\n\r\nexport default function AudioTranscriber() {\r\n  // 从全局录音上下文中取状态和操作\r\n  const {\r\n    isRecording,\r\n    transcription,\r\n    lang,\r\n    speakerVerification,\r\n    wakeWordEnabled,\r\n    wakeWords,\r\n    setLang,\r\n    setSpeakerVerification,\r\n    setWakeWordEnabled,\r\n    setWakeWords,\r\n    startRecording,\r\n    stopRecording,\r\n    setTranscription,\r\n    // 新增：获取全局ASR面板可见性状态及更新方法\r\n    asrPanelVisible,\r\n    setAsrPanelVisible\r\n  } = useRecorderContext();\r\n\r\n  // 新增：面板显示/隐藏状态管理\r\n  const [panelVisible, setPanelVisible] = useState(asrPanelVisible); // 初始值从全局状态获取\r\n  const [isMinimized, setIsMinimized] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem('audioTranscriberMinimized');\r\n      return saved ? JSON.parse(saved) : false;\r\n    } catch {\r\n      return false;\r\n    }\r\n  });\r\n  const [position, setPosition] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem('audioTranscriberPosition');\r\n      if (saved) {\r\n        const pos = JSON.parse(saved);\r\n        if (typeof pos.x === 'number' && typeof pos.y === 'number') {\r\n          return pos;\r\n        }\r\n      }\r\n    } catch {}\r\n    // 默认位置：靠近左侧，垂直居中偏上\r\n    return { x: 20, y: window.innerHeight / 3 };\r\n  });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [isDoubleClick, setIsDoubleClick] = useState(false);\r\n  const doubleClickTimerRef = useRef(null);\r\n  const panelStateKey = 'audioTranscriberPanelVisible';\r\n\r\n  // 拖拽相关引用\r\n  const micButtonRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const offsetXRef = useRef(0);\r\n  const offsetYRef = useRef(0);\r\n\r\n  // localStorage 保存位置的 key\r\n  const storageKey = 'audioTranscriberMicButtonPosition';\r\n\r\n  // 新增声纹识别录音状态和上传状态（保持本组件私有状态）\r\n  const [isSpeakerRecording, setIsSpeakerRecording] = useState(false);\r\n  const [speakerUploadStatus, setSpeakerUploadStatus] = useState('');\r\n  const speakerRecorderRef = useRef(null);\r\n  const speakerAudioChunksRef = useRef([]);\r\n\r\n  // *** 修改开始：定义一个函数来获取动态配置的 URLs ***\r\n  const getDynamicUrls = () => {\r\n    let serverUrls = {};\r\n    try {\r\n      const savedUrls = localStorage.getItem('serverUrls');\r\n      if (savedUrls) {\r\n        serverUrls = JSON.parse(savedUrls);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"AudioTranscriber: Failed to parse serverUrls from localStorage\", e);\r\n    }\r\n    // 优先使用配置项，如果没有则 fallback 到环境变量或默认值\r\n    // 注意：这里假设 ServerUrlConfig.jsx 中配置项的键名是 audioTranscriberQwenerUrl 和 audioTranscriberUploadSpeakerUrl\r\n    // 如果键名不同，请相应调整\r\n    const qwenerUrl = serverUrls.audioTranscriberQwenerUrl || 'https://192.168.168.77:9010/qwener';\r\n    const uploadSpeakerUrl = serverUrls.audioTranscriberUploadSpeakerUrl || 'http://192.168.168.77:6007/api/uploadSpeaker';\r\n\r\n    return {\r\n      qwenerUrl: qwenerUrl,\r\n      uploadSpeakerUrl: uploadSpeakerUrl\r\n    };\r\n  };\r\n  // *** 修改结束 ***\r\n\r\n  // 发送文本消息到 LLM 服务\r\n  const sendTextMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    // *** 修改：动态获取 Qwener URL ***\r\n    const { qwenerUrl } = getDynamicUrls();\r\n\r\n    try {\r\n      // const response = await fetch('https://192.168.168.77:9010/qwener', {\r\n      const response = await fetch(qwenerUrl, { // 使用动态 URL\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('网络响应失败，状态码: ' + response.status);\r\n      }\r\n      const data = await response.json();\r\n      console.log('文本发送成功，服务器返回：', data);\r\n    } catch (error) {\r\n      console.error('文本发送失败：', error);\r\n    }\r\n  };\r\n\r\n  // 组件卸载时清理资源\r\n  useEffect(() => {\r\n    return () => {\r\n      stopRecording();\r\n      stopSpeakerRecording();\r\n      if (doubleClickTimerRef.current) {\r\n        clearTimeout(doubleClickTimerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 监听全局面板可见性状态变化并同步到本地\r\n  useEffect(() => {\r\n    setPanelVisible(asrPanelVisible);\r\n  }, [asrPanelVisible]);\r\n\r\n  // 保存面板可见性状态到 localStorage 并同步到全局状态\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(panelStateKey, JSON.stringify(panelVisible));\r\n    } catch {}\r\n    setAsrPanelVisible(panelVisible);\r\n  }, [panelVisible, setAsrPanelVisible]);\r\n\r\n  // 保存最小化状态到 localStorage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberMinimized', JSON.stringify(isMinimized));\r\n    } catch {}\r\n  }, [isMinimized]);\r\n\r\n  // 保存位置到 localStorage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberPosition', JSON.stringify(position));\r\n    } catch {}\r\n  }, [position]);\r\n\r\n  // 监听语言和声纹识别开关的变化，保存状态到 localStorage，确保切换页时记忆选择\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberLang', lang);\r\n    } catch {}\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('audioTranscriberSpeakerVerification', speakerVerification.toString());\r\n    } catch {}\r\n  }, [speakerVerification]);\r\n\r\n  // 监听语音唤醒开关和唤醒词变化，保存到 localStorage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWordEnabled', wakeWordEnabled.toString());\r\n    } catch {}\r\n  }, [wakeWordEnabled]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wakeWords', wakeWords);\r\n    } catch {}\r\n  }, [wakeWords]);\r\n\r\n  // 新增：加载面板显示状态（改为从localStorage加载，同时同步到全局状态）\r\n  useEffect(() => {\r\n    try {\r\n      const savedVisible = localStorage.getItem(panelStateKey);\r\n      if (savedVisible !== null) {\r\n        const isVisible = JSON.parse(savedVisible);\r\n        setPanelVisible(isVisible);\r\n        setAsrPanelVisible(isVisible); // 同步到全局状态\r\n      }\r\n    } catch (e) {\r\n      console.warn('读取面板状态失败:', e);\r\n    }\r\n  }, [setAsrPanelVisible]);\r\n\r\n  // 拖拽开始\r\n  const handleDragStart = (clientX, clientY) => {\r\n    if (!micButtonRef.current) return;\r\n    const rect = micButtonRef.current.getBoundingClientRect();\r\n    offsetXRef.current = clientX - rect.left;\r\n    offsetYRef.current = clientY - rect.top;\r\n    isDraggingRef.current = true;\r\n    setIsDragging(true);\r\n  };\r\n\r\n  // 拖拽移动\r\n  const handleDragMove = (clientX, clientY) => {\r\n    if (!isDraggingRef.current || !micButtonRef.current) return;\r\n    const newX = clientX - offsetXRef.current;\r\n    const newY = clientY - offsetYRef.current;\r\n    // 限制拖拽范围在视窗内\r\n    const maxX = window.innerWidth - micButtonRef.current.offsetWidth;\r\n    const maxY = window.innerHeight - micButtonRef.current.offsetHeight;\r\n    setPosition({\r\n      x: Math.max(0, Math.min(newX, maxX)),\r\n      y: Math.max(0, Math.min(newY, maxY))\r\n    });\r\n  };\r\n\r\n  // 拖拽结束\r\n  const handleDragEnd = () => {\r\n    if (isDraggingRef.current) {\r\n      isDraggingRef.current = false;\r\n      setIsDragging(false);\r\n    }\r\n  };\r\n\r\n  // 鼠标事件处理\r\n  const onMouseDown = (e) => {\r\n    // 防止拖拽时选中文本\r\n    e.preventDefault();\r\n    handleDragStart(e.clientX, e.clientY);\r\n  };\r\n\r\n  const onMouseMove = (e) => {\r\n    handleDragMove(e.clientX, e.clientY);\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    handleDragEnd();\r\n  };\r\n\r\n  // 触摸事件处理（移动端兼容）\r\n  const onTouchStart = (e) => {\r\n    if (e.touches.length === 1) {\r\n      const touch = e.touches[0];\r\n      handleDragStart(touch.clientX, touch.clientY);\r\n    }\r\n  };\r\n\r\n  const onTouchMove = (e) => {\r\n    if (e.touches.length === 1) {\r\n      const touch = e.touches[0];\r\n      handleDragMove(touch.clientX, touch.clientY);\r\n    }\r\n  };\r\n\r\n  const onTouchEnd = () => {\r\n    handleDragEnd();\r\n  };\r\n\r\n  // 绑定全局鼠标/触摸移动和结束事件，确保在任意位置都能拖动和释放\r\n  useEffect(() => {\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', onMouseMove);\r\n      document.addEventListener('mouseup', onMouseUp);\r\n      document.addEventListener('touchmove', onTouchMove, { passive: false });\r\n      document.addEventListener('touchend', onTouchEnd);\r\n    } else {\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n      document.removeEventListener('touchmove', onTouchMove);\r\n      document.removeEventListener('touchend', onTouchEnd);\r\n    };\r\n  }, [isDragging]);\r\n\r\n  // 处理麦克风按钮点击（单击/双击）\r\n  const handleMicClick = () => {\r\n    if (isDoubleClick) {\r\n      // 双击：切换面板显示/隐藏\r\n      setPanelVisible(v => !v);\r\n      setIsDoubleClick(false);\r\n      if (doubleClickTimerRef.current) {\r\n        clearTimeout(doubleClickTimerRef.current);\r\n        doubleClickTimerRef.current = null;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // 单击：开始录音（如果面板隐藏则显示面板）\r\n    if (!panelVisible) {\r\n      setPanelVisible(true);\r\n    }\r\n\r\n    if (!isRecording) {\r\n      startRecording();\r\n    } else {\r\n      stopRecording();\r\n    }\r\n  };\r\n\r\n  // 处理麦克风按钮双击\r\n  const handleMicDoubleClick = () => {\r\n    setIsDoubleClick(true);\r\n    if (doubleClickTimerRef.current) {\r\n      clearTimeout(doubleClickTimerRef.current);\r\n    }\r\n    doubleClickTimerRef.current = setTimeout(() => {\r\n      setIsDoubleClick(false);\r\n    }, 300); // 300ms 内的第二次点击视为双击\r\n  };\r\n\r\n  // 切换语言\r\n  const toggleLang = () => {\r\n    setLang(prev => prev === 'zh' ? 'en' : 'zh');\r\n  };\r\n\r\n  // 切换声纹识别\r\n  const toggleSpeakerVerification = () => {\r\n    setSpeakerVerification(prev => !prev);\r\n  };\r\n\r\n  // 切换语音唤醒\r\n  const toggleWakeWord = () => {\r\n    setWakeWordEnabled(prev => !prev);\r\n  };\r\n\r\n  // 更新唤醒词\r\n  const updateWakeWords = (e) => {\r\n    setWakeWords(e.target.value);\r\n  };\r\n\r\n  // 开始声纹识别录音\r\n  const startSpeakerRecording = async () => {\r\n    if (isSpeakerRecording) return;\r\n    setSpeakerUploadStatus('正在请求录音权限...');\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      speakerRecorderRef.current = mediaRecorder;\r\n      speakerAudioChunksRef.current = [];\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        if (event.data && event.data.size > 0) {\r\n          speakerAudioChunksRef.current.push(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.onstop = async () => {\r\n        setSpeakerUploadStatus('录音结束，准备上传...');\r\n        const blob = new Blob(speakerAudioChunksRef.current, { type: 'audio/wav' });\r\n        try {\r\n          const formData = new FormData();\r\n          formData.append('file', blob, 'speaker.wav');\r\n\r\n          // *** 修改：动态获取上传 Speaker URL ***\r\n          const { uploadSpeakerUrl } = getDynamicUrls();\r\n\r\n          // const uploadUrl = 'http://192.168.168.77:6007/api/uploadSpeaker';\r\n          const res = await fetch(uploadSpeakerUrl, { // 使用动态 URL\r\n            method: 'POST',\r\n            body: formData,\r\n          });\r\n          if (!res.ok) {\r\n            throw new Error(`上传失败，状态码: ${res.status}`);\r\n          }\r\n          const result = await res.json();\r\n          setSpeakerUploadStatus(result.message || '上传成功');\r\n          console.log('声纹识别上传成功:', result);\r\n        } catch (err) {\r\n          console.error('声纹识别上传失败:', err);\r\n          setSpeakerUploadStatus(`上传失败: ${err.message}`);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setIsSpeakerRecording(true);\r\n      setSpeakerUploadStatus('正在录音...');\r\n      console.log('声纹识别录音已开始');\r\n    } catch (err) {\r\n      console.error('无法访问麦克风进行声纹识别:', err);\r\n      setSpeakerUploadStatus(`录音失败: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  // 停止声纹识别录音\r\n  const stopSpeakerRecording = () => {\r\n    if (speakerRecorderRef.current && isSpeakerRecording) {\r\n      speakerRecorderRef.current.stop();\r\n      const tracks = speakerRecorderRef.current.stream.getTracks();\r\n      tracks.forEach(track => track.stop());\r\n      setIsSpeakerRecording(false);\r\n      console.log('声纹识别录音已停止');\r\n    }\r\n  };\r\n\r\n  // 清空识别结果\r\n  const clearTranscription = () => {\r\n    setTranscription('');\r\n  };\r\n\r\n  // 麦克风按钮样式\r\n  const micButtonStyle = {\r\n    position: 'fixed',\r\n    left: `${position.x}px`,\r\n    top: `${position.y}px`,\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: '50%',\r\n    backgroundColor: isRecording ? '#f44336' : 'rgba(255, 255, 255, 0.2)',\r\n    border: '2px solid rgba(255, 255, 255, 0.5)',\r\n    color: 'white',\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 1001,\r\n    userSelect: 'none',\r\n    transition: 'background-color 0.3s, transform 0.2s',\r\n    transform: isDragging ? 'scale(1.1)' : 'scale(1)',\r\n    backdropFilter: 'blur(10px)',\r\n    WebkitBackdropFilter: 'blur(10px)',\r\n    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\r\n  };\r\n\r\n  // 面板容器样式\r\n  const panelContainerStyle = {\r\n    position: 'fixed',\r\n    left: `${position.x + 70}px`, // 紧挨着麦克风按钮\r\n    top: `${position.y}px`,\r\n    width: 320,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n    borderRadius: 10,\r\n    padding: 16,\r\n    zIndex: 1000,\r\n    color: 'white',\r\n    fontFamily: 'Arial, sans-serif',\r\n    backdropFilter: 'blur(10px)',\r\n    WebkitBackdropFilter: 'blur(10px)',\r\n    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)',\r\n    border: '1px solid rgba(255, 255, 255, 0.2)',\r\n    transform: isMinimized ? 'translateX(-100%)' : 'translateX(0)',\r\n    transition: 'transform 0.3s ease-in-out',\r\n  };\r\n\r\n  // 面板头部样式\r\n  const panelHeaderStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 12,\r\n    paddingBottom: 8,\r\n    borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\r\n  };\r\n\r\n  // 按钮基础样式\r\n  const baseButtonStyle = {\r\n    padding: '6px 12px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    color: 'white',\r\n    border: '1px solid rgba(255, 255, 255, 0.3)',\r\n    borderRadius: 4,\r\n    cursor: 'pointer',\r\n    fontWeight: 'bold',\r\n    fontSize: 12,\r\n    transition: 'background-color 0.2s',\r\n  };\r\n\r\n  // 按钮悬停样式\r\n  const buttonHoverStyle = {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n  };\r\n\r\n  // 开关容器样式\r\n  const switchContainerStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 10,\r\n    fontSize: 14,\r\n  };\r\n\r\n  // 文本区域样式\r\n  const textareaStyle = {\r\n    width: '100%',\r\n    minHeight: 100,\r\n    padding: 10,\r\n    borderRadius: 6,\r\n    border: '1px solid rgba(255, 255, 255, 0.3)',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n    color: 'white',\r\n    fontSize: 14,\r\n    resize: 'vertical',\r\n    marginBottom: 12,\r\n    outline: 'none',\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 悬浮麦克风按钮 */}\r\n      <div\r\n        ref={micButtonRef}\r\n        style={micButtonStyle}\r\n        onMouseDown={onMouseDown}\r\n        onClick={handleMicClick}\r\n        onDoubleClick={handleMicDoubleClick}\r\n        onTouchStart={onTouchStart}\r\n        onTouchEnd={(e) => {\r\n          // 防止触摸结束时触发点击事件\r\n          e.preventDefault();\r\n          handleMicClick();\r\n        }}\r\n        aria-label={isRecording ? \"停止录音\" : \"开始录音\"}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        {isRecording ? '⏹' : '🎤'}\r\n      </div>\r\n\r\n      {/* 识别面板 */}\r\n      {panelVisible && (\r\n        <div style={panelContainerStyle}>\r\n          <div style={panelHeaderStyle}>\r\n            <h3 style={{ margin: 0, fontSize: 16 }}>语音识别面板</h3>\r\n            <div>\r\n              <button\r\n                onClick={() => setIsMinimized(!isMinimized)}\r\n                style={baseButtonStyle}\r\n                aria-label={isMinimized ? \"展开面板\" : \"收起面板\"}\r\n              >\r\n                {isMinimized ? '◀' : '▶'}\r\n              </button>\r\n              <button\r\n                onClick={() => setPanelVisible(false)}\r\n                style={baseButtonStyle}\r\n                aria-label=\"关闭面板\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {!isMinimized && (\r\n            <>\r\n              {/* 语言切换和声纹识别开关 */}\r\n              <div style={switchContainerStyle}>\r\n                <span>语言: {lang === 'zh' ? '中文' : 'English'}</span>\r\n                <button\r\n                  onClick={toggleLang}\r\n                  style={baseButtonStyle}\r\n                  aria-label={`切换到${lang === 'zh' ? '英文' : '中文'}`}\r\n                >\r\n                  切换\r\n                </button>\r\n              </div>\r\n\r\n              <div style={switchContainerStyle}>\r\n                <span>声纹识别: {speakerVerification ? '开' : '关'}</span>\r\n                <button\r\n                  onClick={toggleSpeakerVerification}\r\n                  style={{\r\n                    ...baseButtonStyle,\r\n                    backgroundColor: speakerVerification ? 'rgba(76, 175, 80, 0.3)' : baseButtonStyle.backgroundColor,\r\n                    borderColor: speakerVerification ? '#4CAF50' : baseButtonStyle.borderColor,\r\n                  }}\r\n                  aria-label={speakerVerification ? \"关闭声纹识别\" : \"开启声纹识别\"}\r\n                >\r\n                  {speakerVerification ? '开' : '关'}\r\n                </button>\r\n              </div>\r\n\r\n              {/* 语音唤醒开关和输入框 */}\r\n              <div style={switchContainerStyle}>\r\n                <span>语音唤醒: {wakeWordEnabled ? '开' : '关'}</span>\r\n                <button\r\n                  onClick={toggleWakeWord}\r\n                  style={{\r\n                    ...baseButtonStyle,\r\n                    backgroundColor: wakeWordEnabled ? 'rgba(76, 175, 80, 0.3)' : baseButtonStyle.backgroundColor,\r\n                    borderColor: wakeWordEnabled ? '#4CAF50' : baseButtonStyle.borderColor,\r\n                  }}\r\n                  aria-label={wakeWordEnabled ? \"关闭语音唤醒\" : \"开启语音唤醒\"}\r\n                >\r\n                  {wakeWordEnabled ? '开' : '关'}\r\n                </button>\r\n              </div>\r\n              {wakeWordEnabled && (\r\n                <div style={{ marginBottom: 12 }}>\r\n                  <label style={{ display: 'block', marginBottom: 4, fontSize: 12 }}>\r\n                    唤醒词 (用逗号分隔):\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={wakeWords}\r\n                    onChange={updateWakeWords}\r\n                    placeholder=\"例如: 你好,助手\"\r\n                    style={{\r\n                      width: '100%',\r\n                      padding: 6,\r\n                      borderRadius: 4,\r\n                      border: '1px solid rgba(255, 255, 255, 0.3)',\r\n                      backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n                      color: 'white',\r\n                      fontSize: 12,\r\n                    }}\r\n                    aria-label=\"输入唤醒词\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/* 声纹识别录音区域 */}\r\n              {speakerVerification && (\r\n                <div style={{ marginBottom: 12 }}>\r\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: 6 }}>\r\n                    <span style={{ fontSize: 14 }}>声纹识别训练:</span>\r\n                    <button\r\n                      onClick={isSpeakerRecording ? stopSpeakerRecording : startSpeakerRecording}\r\n                      style={{\r\n                        ...baseButtonStyle,\r\n                        backgroundColor: isSpeakerRecording ? 'rgba(244, 67, 54, 0.3)' : baseButtonStyle.backgroundColor,\r\n                        borderColor: isSpeakerRecording ? '#f44336' : baseButtonStyle.borderColor,\r\n                      }}\r\n                      aria-label={isSpeakerRecording ? \"停止录音\" : \"开始录音\"}\r\n                    >\r\n                      {isSpeakerRecording ? '⏹ 停止' : '⏺ 录音'}\r\n                    </button>\r\n                  </div>\r\n                  {speakerUploadStatus && (\r\n                    <div style={{ fontSize: 12, color: speakerUploadStatus.includes('失败') ? '#ff6666' : '#66ff66', marginTop: 4 }}>\r\n                      {speakerUploadStatus}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* 识别结果显示区域 */}\r\n              <div style={{ marginBottom: 12 }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 6 }}>\r\n                  <span style={{ fontSize: 14 }}>识别结果:</span>\r\n                  <button\r\n                    onClick={clearTranscription}\r\n                    style={baseButtonStyle}\r\n                    aria-label=\"清空识别结果\"\r\n                  >\r\n                    清空\r\n                  </button>\r\n                </div>\r\n                <textarea\r\n                  value={transcription}\r\n                  readOnly\r\n                  style={textareaStyle}\r\n                  placeholder=\"语音识别结果将显示在这里...\"\r\n                  aria-label=\"语音识别结果\"\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 内嵌样式 */}\r\n      <style>{`\r\n        /* 基础样式 */\r\n        #audio-transcriber-container {\r\n          font-family: Arial, sans-serif;\r\n          user-select: none;\r\n          pointer-events: auto;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          gap: 4px;\r\n        }\r\n        #listening-text {\r\n          font-size: 12px;\r\n          color: rgba(128, 128, 128, 0.7);\r\n          user-select: none;\r\n          pointer-events: none;\r\n          font-weight: 500;\r\n          opacity: 0;\r\n          transition: opacity 0.3s ease;\r\n          height: 16px;\r\n          line-height: 16px;\r\n        }\r\n        #listening-text.visible {\r\n          opacity: 1;\r\n        }\r\n        #mic-button {\r\n          background: none;\r\n          border: none;\r\n          padding: 0;\r\n          outline: none;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          filter: none;\r\n          transition: filter 0.3s ease;\r\n          width: 68px;\r\n          height: 68px;\r\n          cursor: grab;\r\n        }\r\n        #mic-button.recording {\r\n          filter: drop-shadow(0 0 5px red);\r\n        }\r\n        #mic-button:hover {\r\n          filter: brightness(1.2);\r\n        }\r\n        #mic-button:active {\r\n          cursor: grabbing;\r\n        }\r\n        #mic-icon {\r\n          width: 100%;\r\n          height: 100%;\r\n          object-fit: contain;\r\n          pointer-events: none;\r\n        }\r\n        #recording-indicator {\r\n          position: absolute;\r\n          top: -4px;\r\n          right: -4px;\r\n          width: 16px;\r\n          height: 16px;\r\n          background-color: #f44336;\r\n          border-radius: 50%;\r\n          border: 2px solid white;\r\n          animation: pulse 1.5s infinite;\r\n          pointer-events: none;\r\n        }\r\n        @keyframes pulse {\r\n          0% { transform: scale(0.95); box-shadow: 0 0 0 0 rgba(244, 67, 54, 0.7); }\r\n          70% { transform: scale(1); box-shadow: 0 0 0 10px rgba(244, 67, 54, 0); }\r\n          100% { transform: scale(0.95); box-shadow: 0 0 0 0 rgba(244, 67, 54, 0); }\r\n        }\r\n        #audio-panel {\r\n          position: fixed;\r\n          left: 90px;\r\n          top: 20px;\r\n          width: 320px;\r\n          background-color: rgba(0, 0, 0, 0.7);\r\n          border-radius: 10px;\r\n          padding: 16px;\r\n          z-index: 1000;\r\n          color: white;\r\n          font-family: Arial, sans-serif;\r\n          backdrop-filter: blur(10px);\r\n          WebkitBackdropFilter: blur(10px);\r\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);\r\n          border: 1px solid rgba(255, 255, 255, 0.2);\r\n          transform: translateX(0);\r\n          transition: transform 0.3s ease-in-out;\r\n        }\r\n        #audio-panel.hidden {\r\n          transform: translateX(-100%);\r\n        }\r\n        #audio-panel-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 12px;\r\n          padding-bottom: 8px;\r\n          border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n        }\r\n        #audio-panel-title {\r\n          margin: 0;\r\n          font-size: 16px;\r\n        }\r\n        #audio-panel-close-btn {\r\n          padding: 4px 8px;\r\n          background: none;\r\n          border: 1px solid rgba(255, 255, 255, 0.3);\r\n          color: white;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-weight: bold;\r\n          font-size: 14px;\r\n          transition: background-color 0.2s;\r\n        }\r\n        #audio-panel-close-btn:hover {\r\n          background-color: rgba(255, 255, 255, 0.2);\r\n        }\r\n        #controls-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 10px;\r\n          margin-bottom: 12px;\r\n        }\r\n        #controls-container label {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n          font-size: 14px;\r\n        }\r\n        #controls-container input[type=\"text\"],\r\n        #controls-container input[type=\"checkbox\"] {\r\n          margin: 0;\r\n        }\r\n        #controls-container input[type=\"text\"] {\r\n          padding: 4px 8px;\r\n          border-radius: 4px;\r\n          border: 1px solid rgba(255, 255, 255, 0.3);\r\n          background-color: rgba(255, 255, 255, 0.05);\r\n          color: white;\r\n          font-size: 12px;\r\n        }\r\n        #controls-container input[type=\"checkbox\"] {\r\n          width: 16px;\r\n          height: 16px;\r\n          accent-color: #4CAF50;\r\n        }\r\n        #speaker-record-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n          margin-bottom: 12px;\r\n        }\r\n        #speaker-record-button {\r\n          position: relative;\r\n          padding: 8px 16px;\r\n          border: none;\r\n          border-radius: 6px;\r\n          background: linear-gradient(135deg, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0.03) 100%);\r\n          color: white;\r\n          font-weight: bold;\r\n          font-size: 14px;\r\n          cursor: pointer;\r\n          user-select: none;\r\n          transition: all 0.3s ease;\r\n          backdrop-filter: blur(10px);\r\n          WebkitBackdropFilter: blur(10px);\r\n          box-shadow: 0 4px 20px rgba(255, 255, 255, 0.15);\r\n          border: 1px solid rgba(255, 255, 255, 0.3);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          outline: none;\r\n          border-image: none;\r\n        }\r\n        #speaker-record-button:hover:not(:disabled) {\r\n          background: rgba(255, 255, 255, 0.2);\r\n          box-shadow: 0 8px 40px rgba(255, 255, 255, 0.3);\r\n          transform: scale(1.05);\r\n          filter: brightness(1.1);\r\n        }\r\n        #speaker-record-button:disabled {\r\n          opacity: 0.4;\r\n          cursor: not-allowed;\r\n          box-shadow: none;\r\n          background: rgba(255, 255, 255, 0.05);\r\n          filter: none;\r\n          transform: none;\r\n        }\r\n        /* 额外光泽层 */\r\n        #speaker-record-button::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: -100%;\r\n          left: -100%;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: radial-gradient(circle at 10% 10%, rgba(255, 255, 255, 0.3), transparent 10%);\r\n          pointer-events: none;\r\n          filter: blur(10px);\r\n          opacity: 0.6;\r\n          transition: opacity 0.3s ease;\r\n          border-radius: inherit;\r\n          z-index: 0;\r\n        }\r\n        /* 保留波纹效果的样式 */\r\n        .ripple {\r\n          position: absolute;\r\n          border-radius: 150%;\r\n          background: rgba(91, 155, 255, 0.7);\r\n          animation: rippleEffect 1s ease-out;\r\n          pointer-events: none;\r\n          transform: scale(0);\r\n          opacity: 0.75;\r\n          z-index: 1;\r\n        }\r\n        @keyframes rippleEffect {\r\n          to {\r\n            transform: scale(4);\r\n            opacity: 0;\r\n          }\r\n        }\r\n        /* 新增：面板显示/隐藏控制 */\r\n        #audio-panel-content {\r\n          transition: all 0.3s ease;\r\n        }\r\n        #audio-panel-content.hidden {\r\n          display: none;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}