{"ast":null,"code":"import _objectSpread from\"D:/XM/AI-Sphere-Butler/core/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export const menuWallpapers={home:'/core/client/ai-butler/image/bg-home.jpeg',// 这里仍留图片作为备用\nbutler:'/core/client/ai-butler/image/bg-butler.jpeg',car:'/core/client/ai-butler/image/bg-car.jpeg',homeassistant:'/core/client/ai-butler/image/bg-homeassistant.jpeg',ops:'/core/client/ai-butler/image/bg-ops.jpeg',settings:'/core/client/ai-butler/image/bg-settings.jpeg'};// 视频文件路径（请替换成实际mp4路径）\nconst homeVideoSrc='/core/client/ai-butler/video/bg-home.mp4';const WallpaperManager=_ref=>{let{selectedMenu,showGlassTransition}=_ref;const[currentWallpaper,setCurrentWallpaper]=useState(menuWallpapers.home);// 默认使用home壁纸\nconst[isVideoLoaded,setIsVideoLoaded]=useState(false);const[isVideoError,setIsVideoError]=useState(false);const[isImageLoading,setIsImageLoading]=useState(true);const[imageLoadError,setImageLoadError]=useState(false);// 新增：摄像头流状态\nconst[cameraStream,setCameraStream]=useState(null);const videoRef=useRef(null);// 释放摄像头流函数\nconst releaseCameraStream=()=>{if(cameraStream){try{cameraStream.getTracks().forEach(track=>track.stop());}catch(_unused){}setCameraStream(null);}};useEffect(()=>{// 切换菜单时释放旧摄像头流\nreleaseCameraStream();// 重置所有状态\nsetIsVideoLoaded(false);setIsVideoError(false);setImageLoadError(false);setIsImageLoading(true);if(selectedMenu==='home'){// 主页，优先显示视频背景\nsetCurrentWallpaper(menuWallpapers.home);setIsImageLoading(false);// 先加载视频背景，摄像头启用改为可选，不强制启用，避免摄像头失败导致主页打不开\n// 这里加了判断，确保 getUserMedia 存在再调用\nif(navigator.mediaDevices&&typeof navigator.mediaDevices.getUserMedia==='function'){navigator.mediaDevices.getUserMedia({video:true,audio:false}).then(stream=>{setCameraStream(stream);setIsVideoLoaded(true);setIsVideoError(false);}).catch(err=>{console.warn('获取摄像头失败，使用视频背景或图片备用',err);setCameraStream(null);setIsVideoError(false);// 让视频背景尝试加载\nsetIsVideoLoaded(false);});}else{// 不支持getUserMedia，直接使用视频背景\nsetCameraStream(null);setIsVideoError(false);setIsVideoLoaded(false);}return;}// 其他菜单，加载对应图片\nconst targetWallpaper=menuWallpapers[selectedMenu]||menuWallpapers.home;const img=new Image();img.onload=()=>{setCurrentWallpaper(targetWallpaper);setIsImageLoading(false);};img.onerror=()=>{console.error('壁纸加载失败:',targetWallpaper);// 尝试加载默认home壁纸\nconst homeImg=new Image();homeImg.onload=()=>{setCurrentWallpaper(menuWallpapers.home);setIsImageLoading(false);};homeImg.onerror=()=>{setImageLoadError(true);setIsImageLoading(false);};homeImg.src=menuWallpapers.home;};img.src=targetWallpaper;},[selectedMenu]);useEffect(()=>{// 当有摄像头流且 video 元素准备好时，设置流源\nif(cameraStream&&videoRef.current){videoRef.current.srcObject=cameraStream;videoRef.current.play().catch(()=>{});}},[cameraStream]);// 公共样式\nconst baseStyle={position:'fixed',top:0,left:0,width:'100%',height:'100%',zIndex:-1,pointerEvents:'none',transition:'opacity 0.5s ease-in-out',backgroundColor:'#000'// 防止闪屏\n};// 摄像头视频专用样式\nconst cameraVideoStyle=_objectSpread(_objectSpread({},baseStyle),{},{objectFit:'cover',opacity:isVideoLoaded&&!isVideoError?1:0});// 本来的视频专用样式，带objectFit\nconst videoStyle=_objectSpread(_objectSpread({},baseStyle),{},{objectFit:'cover',opacity:isVideoLoaded&&!isVideoError?1:0});// 图片专用样式\nconst imageStyle=_objectSpread(_objectSpread({},baseStyle),{},{backgroundImage:\"url(\".concat(currentWallpaper,\")\"),backgroundSize:'cover',backgroundPosition:'center',opacity:(selectedMenu!=='home'||isVideoError)&&!isImageLoading&&!imageLoadError?1:0});// 视频加载成功回调\nconst handleVideoCanPlay=()=>{setIsVideoLoaded(true);setIsVideoError(false);};// 视频加载失败回调\nconst handleVideoError=()=>{console.error('视频加载失败，切换为壁纸');setIsVideoError(true);setIsVideoLoaded(false);};if(selectedMenu==='home'){return/*#__PURE__*/_jsx(_Fragment,{children:cameraStream?/*#__PURE__*/_jsx(\"video\",{ref:videoRef,autoPlay:true,muted:true,playsInline:true,style:cameraVideoStyle,\"aria-hidden\":\"true\"}):/*#__PURE__*/// 摄像头失败后，回退原先的视频背景\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"video\",{autoPlay:true,loop:true,muted:true,playsInline:true,preload:\"auto\",style:videoStyle,src:homeVideoSrc,\"aria-hidden\":\"true\",onCanPlay:handleVideoCanPlay,onError:handleVideoError},homeVideoSrc),(isVideoError||!isVideoLoaded)&&!isImageLoading&&!imageLoadError&&/*#__PURE__*/_jsx(\"div\",{className:\"app-wallpaper\",style:imageStyle,\"aria-hidden\":\"true\"})]})});}// 其他菜单只显示图片背景\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[!isImageLoading&&!imageLoadError&&/*#__PURE__*/_jsx(\"div\",{className:\"app-wallpaper\",style:imageStyle,\"aria-hidden\":\"true\"}),imageLoadError&&/*#__PURE__*/_jsx(\"div\",{className:\"app-wallpaper\",style:_objectSpread(_objectSpread({},baseStyle),{},{backgroundColor:'#222',opacity:1}),\"aria-hidden\":\"true\"})]});};export default WallpaperManager;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","menuWallpapers","home","butler","car","homeassistant","ops","settings","homeVideoSrc","WallpaperManager","_ref","selectedMenu","showGlassTransition","currentWallpaper","setCurrentWallpaper","isVideoLoaded","setIsVideoLoaded","isVideoError","setIsVideoError","isImageLoading","setIsImageLoading","imageLoadError","setImageLoadError","cameraStream","setCameraStream","videoRef","releaseCameraStream","getTracks","forEach","track","stop","_unused","navigator","mediaDevices","getUserMedia","video","audio","then","stream","catch","err","console","warn","targetWallpaper","img","Image","onload","onerror","error","homeImg","src","current","srcObject","play","baseStyle","position","top","left","width","height","zIndex","pointerEvents","transition","backgroundColor","cameraVideoStyle","_objectSpread","objectFit","opacity","videoStyle","imageStyle","backgroundImage","concat","backgroundSize","backgroundPosition","handleVideoCanPlay","handleVideoError","children","ref","autoPlay","muted","playsInline","style","loop","preload","onCanPlay","onError","className"],"sources":["D:/XM/AI-Sphere-Butler/core/client/src/components/WallpaperManager.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport const menuWallpapers = {\r\n  home: '/core/client/ai-butler/image/bg-home.jpeg', // 这里仍留图片作为备用\r\n  butler: '/core/client/ai-butler/image/bg-butler.jpeg',\r\n  car: '/core/client/ai-butler/image/bg-car.jpeg',\r\n  homeassistant: '/core/client/ai-butler/image/bg-homeassistant.jpeg',\r\n  ops: '/core/client/ai-butler/image/bg-ops.jpeg',\r\n  settings: '/core/client/ai-butler/image/bg-settings.jpeg',\r\n};\r\n\r\n// 视频文件路径（请替换成实际mp4路径）\r\nconst homeVideoSrc = '/core/client/ai-butler/video/bg-home.mp4';\r\n\r\nconst WallpaperManager = ({ selectedMenu, showGlassTransition }) => {\r\n  const [currentWallpaper, setCurrentWallpaper] = useState(menuWallpapers.home); // 默认使用home壁纸\r\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\r\n  const [isVideoError, setIsVideoError] = useState(false);\r\n  const [isImageLoading, setIsImageLoading] = useState(true);\r\n  const [imageLoadError, setImageLoadError] = useState(false);\r\n\r\n  // 新增：摄像头流状态\r\n  const [cameraStream, setCameraStream] = useState(null);\r\n  const videoRef = useRef(null);\r\n\r\n  // 释放摄像头流函数\r\n  const releaseCameraStream = () => {\r\n    if (cameraStream) {\r\n      try {\r\n        cameraStream.getTracks().forEach(track => track.stop());\r\n      } catch {}\r\n      setCameraStream(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 切换菜单时释放旧摄像头流\r\n    releaseCameraStream();\r\n\r\n    // 重置所有状态\r\n    setIsVideoLoaded(false);\r\n    setIsVideoError(false);\r\n    setImageLoadError(false);\r\n    setIsImageLoading(true);\r\n\r\n    if (selectedMenu === 'home') {\r\n      // 主页，优先显示视频背景\r\n      setCurrentWallpaper(menuWallpapers.home);\r\n      setIsImageLoading(false);\r\n\r\n      // 先加载视频背景，摄像头启用改为可选，不强制启用，避免摄像头失败导致主页打不开\r\n      // 这里加了判断，确保 getUserMedia 存在再调用\r\n      if (navigator.mediaDevices && typeof navigator.mediaDevices.getUserMedia === 'function') {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: false })\r\n          .then((stream) => {\r\n            setCameraStream(stream);\r\n            setIsVideoLoaded(true);\r\n            setIsVideoError(false);\r\n          })\r\n          .catch((err) => {\r\n            console.warn('获取摄像头失败，使用视频背景或图片备用', err);\r\n            setCameraStream(null);\r\n            setIsVideoError(false); // 让视频背景尝试加载\r\n            setIsVideoLoaded(false);\r\n          });\r\n      } else {\r\n        // 不支持getUserMedia，直接使用视频背景\r\n        setCameraStream(null);\r\n        setIsVideoError(false);\r\n        setIsVideoLoaded(false);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // 其他菜单，加载对应图片\r\n    const targetWallpaper = menuWallpapers[selectedMenu] || menuWallpapers.home;\r\n\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      setCurrentWallpaper(targetWallpaper);\r\n      setIsImageLoading(false);\r\n    };\r\n    img.onerror = () => {\r\n      console.error('壁纸加载失败:', targetWallpaper);\r\n      // 尝试加载默认home壁纸\r\n      const homeImg = new Image();\r\n      homeImg.onload = () => {\r\n        setCurrentWallpaper(menuWallpapers.home);\r\n        setIsImageLoading(false);\r\n      };\r\n      homeImg.onerror = () => {\r\n        setImageLoadError(true);\r\n        setIsImageLoading(false);\r\n      };\r\n      homeImg.src = menuWallpapers.home;\r\n    };\r\n    img.src = targetWallpaper;\r\n  }, [selectedMenu]);\r\n\r\n  useEffect(() => {\r\n    // 当有摄像头流且 video 元素准备好时，设置流源\r\n    if (cameraStream && videoRef.current) {\r\n      videoRef.current.srcObject = cameraStream;\r\n      videoRef.current.play().catch(() => {});\r\n    }\r\n  }, [cameraStream]);\r\n\r\n  // 公共样式\r\n  const baseStyle = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: -1,\r\n    pointerEvents: 'none',\r\n    transition: 'opacity 0.5s ease-in-out',\r\n    backgroundColor: '#000', // 防止闪屏\r\n  };\r\n\r\n  // 摄像头视频专用样式\r\n  const cameraVideoStyle = {\r\n    ...baseStyle,\r\n    objectFit: 'cover',\r\n    opacity: isVideoLoaded && !isVideoError ? 1 : 0,\r\n  };\r\n\r\n  // 本来的视频专用样式，带objectFit\r\n  const videoStyle = {\r\n    ...baseStyle,\r\n    objectFit: 'cover',\r\n    opacity: isVideoLoaded && !isVideoError ? 1 : 0,\r\n  };\r\n\r\n  // 图片专用样式\r\n  const imageStyle = {\r\n    ...baseStyle,\r\n    backgroundImage: `url(${currentWallpaper})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    opacity: (selectedMenu !== 'home' || isVideoError) && !isImageLoading && !imageLoadError ? 1 : 0,\r\n  };\r\n\r\n  // 视频加载成功回调\r\n  const handleVideoCanPlay = () => {\r\n    setIsVideoLoaded(true);\r\n    setIsVideoError(false);\r\n  };\r\n\r\n  // 视频加载失败回调\r\n  const handleVideoError = () => {\r\n    console.error('视频加载失败，切换为壁纸');\r\n    setIsVideoError(true);\r\n    setIsVideoLoaded(false);\r\n  };\r\n\r\n  if (selectedMenu === 'home') {\r\n    return (\r\n      <>\r\n        {/* 优先显示摄像头实时画面 */}\r\n        {cameraStream ? (\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            muted\r\n            playsInline\r\n            style={cameraVideoStyle}\r\n            aria-hidden=\"true\"\r\n          />\r\n        ) : (\r\n          // 摄像头失败后，回退原先的视频背景\r\n          <>\r\n            <video\r\n              key={homeVideoSrc}\r\n              autoPlay\r\n              loop\r\n              muted\r\n              playsInline\r\n              preload=\"auto\"\r\n              style={videoStyle}\r\n              src={homeVideoSrc}\r\n              aria-hidden=\"true\"\r\n              onCanPlay={handleVideoCanPlay}\r\n              onError={handleVideoError}\r\n            />\r\n            {(isVideoError || !isVideoLoaded) && !isImageLoading && !imageLoadError && (\r\n              <div\r\n                className=\"app-wallpaper\"\r\n                style={imageStyle}\r\n                aria-hidden=\"true\"\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  // 其他菜单只显示图片背景\r\n  return (\r\n    <>\r\n      {(!isImageLoading && !imageLoadError) && (\r\n        <div\r\n          className=\"app-wallpaper\"\r\n          style={imageStyle}\r\n          aria-hidden=\"true\"\r\n        />\r\n      )}\r\n      {imageLoadError && (\r\n        <div\r\n          className=\"app-wallpaper\"\r\n          style={{\r\n            ...baseStyle,\r\n            backgroundColor: '#222',\r\n            opacity: 1,\r\n          }}\r\n          aria-hidden=\"true\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WallpaperManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}